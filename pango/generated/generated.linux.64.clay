// Automatically generated by clay-bindgen
// language: c

import glib.generated.*;

private alias OpaquePointer = RawPointer;
private alias UnknownType = Int;
private alias AUnionType = Int;


alias PangoCoverage = Opaque;

alias PANGO_COVERAGE_NONE = 0;
alias PANGO_COVERAGE_FALLBACK = 1;
alias PANGO_COVERAGE_APPROXIMATE = 2;
alias PANGO_COVERAGE_EXACT = 3;

alias PangoCoverageLevel = Int;

external pango_coverage_new() Pointer[PangoCoverage];

external pango_coverage_ref(
    coverage : Pointer[PangoCoverage]) Pointer[PangoCoverage];

external pango_coverage_unref(
    coverage : Pointer[PangoCoverage]);

external pango_coverage_copy(
    coverage : Pointer[PangoCoverage]) Pointer[PangoCoverage];

external pango_coverage_get(
    coverage : Pointer[PangoCoverage],
    index_ : Int) PangoCoverageLevel;

external pango_coverage_set(
    coverage : Pointer[PangoCoverage],
    index_ : Int,
    level : PangoCoverageLevel);

external pango_coverage_max(
    coverage : Pointer[PangoCoverage],
    other : Pointer[PangoCoverage]);

external pango_coverage_to_bytes(
    coverage : Pointer[PangoCoverage],
    bytes : Pointer[Pointer[CUChar]],
    n_bytes : Pointer[Int]);

external pango_coverage_from_bytes(
    bytes : Pointer[CUChar],
    n_bytes : Int) Pointer[PangoCoverage];

alias PangoLogAttr = Struct__PangoLogAttr;

alias PangoEngineLang = Opaque;

alias PangoEngineShape = Opaque;

alias PangoFont = Opaque;

alias PangoFontMap = Opaque;

alias PangoRectangle = Struct__PangoRectangle;

alias PangoGlyph = UInt;

external pango_units_from_double(
    d : Double) Int;

external pango_units_to_double(
    i : Int) Double;

record Struct__PangoRectangle (
    x : Int,
    y : Int,
    width : Int,
    height : Int,
);

external pango_extents_to_pixels(
    inclusive : Pointer[PangoRectangle],
    nearest : Pointer[PangoRectangle]);

alias PANGO_GRAVITY_SOUTH = 0;
alias PANGO_GRAVITY_EAST = 1;
alias PANGO_GRAVITY_NORTH = 2;
alias PANGO_GRAVITY_WEST = 3;
alias PANGO_GRAVITY_AUTO = 4;

alias PangoGravity = Int;

alias PANGO_GRAVITY_HINT_NATURAL = 0;
alias PANGO_GRAVITY_HINT_STRONG = 1;
alias PANGO_GRAVITY_HINT_LINE = 2;

alias PangoGravityHint = Int;

alias PangoMatrix = Struct__PangoMatrix;

record Struct__PangoMatrix (
    xx : Double,
    xy : Double,
    yx : Double,
    yy : Double,
    x0 : Double,
    y0 : Double,
);

external pango_matrix_get_type() CULong;

external pango_matrix_copy(
    matrix : Pointer[PangoMatrix]) Pointer[PangoMatrix];

external pango_matrix_free(
    matrix : Pointer[PangoMatrix]);

external pango_matrix_translate(
    matrix : Pointer[PangoMatrix],
    tx : Double,
    ty : Double);

external pango_matrix_scale(
    matrix : Pointer[PangoMatrix],
    scale_x : Double,
    scale_y : Double);

external pango_matrix_rotate(
    matrix : Pointer[PangoMatrix],
    degrees : Double);

external pango_matrix_concat(
    matrix : Pointer[PangoMatrix],
    new_matrix : Pointer[PangoMatrix]);

external pango_matrix_transform_point(
    matrix : Pointer[PangoMatrix],
    x : Pointer[Double],
    y : Pointer[Double]);

external pango_matrix_transform_distance(
    matrix : Pointer[PangoMatrix],
    dx : Pointer[Double],
    dy : Pointer[Double]);

external pango_matrix_transform_rectangle(
    matrix : Pointer[PangoMatrix],
    rect : Pointer[PangoRectangle]);

external pango_matrix_transform_pixel_rectangle(
    matrix : Pointer[PangoMatrix],
    rect : Pointer[PangoRectangle]);

external pango_matrix_get_font_scale_factor(
    matrix : Pointer[PangoMatrix]) Double;

alias PangoScriptIter = Opaque;

alias PANGO_SCRIPT_INVALID_CODE = 4294967295;
alias PANGO_SCRIPT_COMMON = 0;
alias PANGO_SCRIPT_INHERITED = 1;
alias PANGO_SCRIPT_ARABIC = 2;
alias PANGO_SCRIPT_ARMENIAN = 3;
alias PANGO_SCRIPT_BENGALI = 4;
alias PANGO_SCRIPT_BOPOMOFO = 5;
alias PANGO_SCRIPT_CHEROKEE = 6;
alias PANGO_SCRIPT_COPTIC = 7;
alias PANGO_SCRIPT_CYRILLIC = 8;
alias PANGO_SCRIPT_DESERET = 9;
alias PANGO_SCRIPT_DEVANAGARI = 10;
alias PANGO_SCRIPT_ETHIOPIC = 11;
alias PANGO_SCRIPT_GEORGIAN = 12;
alias PANGO_SCRIPT_GOTHIC = 13;
alias PANGO_SCRIPT_GREEK = 14;
alias PANGO_SCRIPT_GUJARATI = 15;
alias PANGO_SCRIPT_GURMUKHI = 16;
alias PANGO_SCRIPT_HAN = 17;
alias PANGO_SCRIPT_HANGUL = 18;
alias PANGO_SCRIPT_HEBREW = 19;
alias PANGO_SCRIPT_HIRAGANA = 20;
alias PANGO_SCRIPT_KANNADA = 21;
alias PANGO_SCRIPT_KATAKANA = 22;
alias PANGO_SCRIPT_KHMER = 23;
alias PANGO_SCRIPT_LAO = 24;
alias PANGO_SCRIPT_LATIN = 25;
alias PANGO_SCRIPT_MALAYALAM = 26;
alias PANGO_SCRIPT_MONGOLIAN = 27;
alias PANGO_SCRIPT_MYANMAR = 28;
alias PANGO_SCRIPT_OGHAM = 29;
alias PANGO_SCRIPT_OLD_ITALIC = 30;
alias PANGO_SCRIPT_ORIYA = 31;
alias PANGO_SCRIPT_RUNIC = 32;
alias PANGO_SCRIPT_SINHALA = 33;
alias PANGO_SCRIPT_SYRIAC = 34;
alias PANGO_SCRIPT_TAMIL = 35;
alias PANGO_SCRIPT_TELUGU = 36;
alias PANGO_SCRIPT_THAANA = 37;
alias PANGO_SCRIPT_THAI = 38;
alias PANGO_SCRIPT_TIBETAN = 39;
alias PANGO_SCRIPT_CANADIAN_ABORIGINAL = 40;
alias PANGO_SCRIPT_YI = 41;
alias PANGO_SCRIPT_TAGALOG = 42;
alias PANGO_SCRIPT_HANUNOO = 43;
alias PANGO_SCRIPT_BUHID = 44;
alias PANGO_SCRIPT_TAGBANWA = 45;
alias PANGO_SCRIPT_BRAILLE = 46;
alias PANGO_SCRIPT_CYPRIOT = 47;
alias PANGO_SCRIPT_LIMBU = 48;
alias PANGO_SCRIPT_OSMANYA = 49;
alias PANGO_SCRIPT_SHAVIAN = 50;
alias PANGO_SCRIPT_LINEAR_B = 51;
alias PANGO_SCRIPT_TAI_LE = 52;
alias PANGO_SCRIPT_UGARITIC = 53;
alias PANGO_SCRIPT_NEW_TAI_LUE = 54;
alias PANGO_SCRIPT_BUGINESE = 55;
alias PANGO_SCRIPT_GLAGOLITIC = 56;
alias PANGO_SCRIPT_TIFINAGH = 57;
alias PANGO_SCRIPT_SYLOTI_NAGRI = 58;
alias PANGO_SCRIPT_OLD_PERSIAN = 59;
alias PANGO_SCRIPT_KHAROSHTHI = 60;
alias PANGO_SCRIPT_UNKNOWN = 61;
alias PANGO_SCRIPT_BALINESE = 62;
alias PANGO_SCRIPT_CUNEIFORM = 63;
alias PANGO_SCRIPT_PHOENICIAN = 64;
alias PANGO_SCRIPT_PHAGS_PA = 65;
alias PANGO_SCRIPT_NKO = 66;
alias PANGO_SCRIPT_KAYAH_LI = 67;
alias PANGO_SCRIPT_LEPCHA = 68;
alias PANGO_SCRIPT_REJANG = 69;
alias PANGO_SCRIPT_SUNDANESE = 70;
alias PANGO_SCRIPT_SAURASHTRA = 71;
alias PANGO_SCRIPT_CHAM = 72;
alias PANGO_SCRIPT_OL_CHIKI = 73;
alias PANGO_SCRIPT_VAI = 74;
alias PANGO_SCRIPT_CARIAN = 75;
alias PANGO_SCRIPT_LYCIAN = 76;
alias PANGO_SCRIPT_LYDIAN = 77;

alias PangoScript = Int;

external pango_script_for_unichar(
    ch : UInt) PangoScript;

external pango_script_iter_new(
    text : Pointer[CChar],
    length : Int) Pointer[PangoScriptIter];

external pango_script_iter_get_range(
    iter : Pointer[PangoScriptIter],
    start : Pointer[Pointer[CChar]],
    end : Pointer[Pointer[CChar]],
    script : Pointer[PangoScript]);

external pango_script_iter_next(
    iter : Pointer[PangoScriptIter]) Int;

external pango_script_iter_free(
    iter : Pointer[PangoScriptIter]);

alias PangoLanguage = Opaque;

external pango_language_get_type() CULong;

external pango_language_from_string(
    language : Pointer[CChar]) Pointer[PangoLanguage];

external pango_language_to_string(
    language : Pointer[PangoLanguage]) Pointer[CChar];

external pango_language_get_sample_string(
    language : Pointer[PangoLanguage]) Pointer[CChar];

external pango_language_get_default() Pointer[PangoLanguage];

external pango_language_matches(
    language : Pointer[PangoLanguage],
    range_list : Pointer[CChar]) Int;

external pango_language_includes_script(
    language : Pointer[PangoLanguage],
    script : PangoScript) Int;

external pango_language_get_scripts(
    language : Pointer[PangoLanguage],
    num_scripts : Pointer[Int]) Pointer[PangoScript];

external pango_script_get_sample_language(
    script : PangoScript) Pointer[PangoLanguage];

external pango_gravity_to_rotation(
    gravity : PangoGravity) Double;

external pango_gravity_get_for_matrix(
    matrix : Pointer[PangoMatrix]) PangoGravity;

external pango_gravity_get_for_script(
    script : PangoScript,
    base_gravity : PangoGravity,
    hint : PangoGravityHint) PangoGravity;

external pango_gravity_get_for_script_and_width(
    script : PangoScript,
    wide : Int,
    base_gravity : PangoGravity,
    hint : PangoGravityHint) PangoGravity;

alias PANGO_BIDI_TYPE_L = 0;
alias PANGO_BIDI_TYPE_LRE = 1;
alias PANGO_BIDI_TYPE_LRO = 2;
alias PANGO_BIDI_TYPE_R = 3;
alias PANGO_BIDI_TYPE_AL = 4;
alias PANGO_BIDI_TYPE_RLE = 5;
alias PANGO_BIDI_TYPE_RLO = 6;
alias PANGO_BIDI_TYPE_PDF = 7;
alias PANGO_BIDI_TYPE_EN = 8;
alias PANGO_BIDI_TYPE_ES = 9;
alias PANGO_BIDI_TYPE_ET = 10;
alias PANGO_BIDI_TYPE_AN = 11;
alias PANGO_BIDI_TYPE_CS = 12;
alias PANGO_BIDI_TYPE_NSM = 13;
alias PANGO_BIDI_TYPE_BN = 14;
alias PANGO_BIDI_TYPE_B = 15;
alias PANGO_BIDI_TYPE_S = 16;
alias PANGO_BIDI_TYPE_WS = 17;
alias PANGO_BIDI_TYPE_ON = 18;

alias PangoBidiType = Int;

external pango_bidi_type_for_unichar(
    ch : UInt) PangoBidiType;

alias PANGO_DIRECTION_LTR = 0;
alias PANGO_DIRECTION_RTL = 1;
alias PANGO_DIRECTION_TTB_LTR = 2;
alias PANGO_DIRECTION_TTB_RTL = 3;
alias PANGO_DIRECTION_WEAK_LTR = 4;
alias PANGO_DIRECTION_WEAK_RTL = 5;
alias PANGO_DIRECTION_NEUTRAL = 6;

alias PangoDirection = Int;

external pango_unichar_direction(
    ch : UInt) PangoDirection;

external pango_find_base_dir(
    text : Pointer[CChar],
    length : Int) PangoDirection;

external pango_get_mirror_char(
    ch : UInt,
    mirrored_ch : Pointer[UInt]) Int;

alias PangoFontDescription = Opaque;

alias PangoFontMetrics = Opaque;

alias PANGO_STYLE_NORMAL = 0;
alias PANGO_STYLE_OBLIQUE = 1;
alias PANGO_STYLE_ITALIC = 2;

alias PangoStyle = Int;

alias PANGO_VARIANT_NORMAL = 0;
alias PANGO_VARIANT_SMALL_CAPS = 1;

alias PangoVariant = Int;

alias PANGO_WEIGHT_THIN = 100;
alias PANGO_WEIGHT_ULTRALIGHT = 200;
alias PANGO_WEIGHT_LIGHT = 300;
alias PANGO_WEIGHT_BOOK = 380;
alias PANGO_WEIGHT_NORMAL = 400;
alias PANGO_WEIGHT_MEDIUM = 500;
alias PANGO_WEIGHT_SEMIBOLD = 600;
alias PANGO_WEIGHT_BOLD = 700;
alias PANGO_WEIGHT_ULTRABOLD = 800;
alias PANGO_WEIGHT_HEAVY = 900;
alias PANGO_WEIGHT_ULTRAHEAVY = 1000;

alias PangoWeight = Int;

alias PANGO_STRETCH_ULTRA_CONDENSED = 0;
alias PANGO_STRETCH_EXTRA_CONDENSED = 1;
alias PANGO_STRETCH_CONDENSED = 2;
alias PANGO_STRETCH_SEMI_CONDENSED = 3;
alias PANGO_STRETCH_NORMAL = 4;
alias PANGO_STRETCH_SEMI_EXPANDED = 5;
alias PANGO_STRETCH_EXPANDED = 6;
alias PANGO_STRETCH_EXTRA_EXPANDED = 7;
alias PANGO_STRETCH_ULTRA_EXPANDED = 8;

alias PangoStretch = Int;

alias PANGO_FONT_MASK_FAMILY = 1;
alias PANGO_FONT_MASK_STYLE = 2;
alias PANGO_FONT_MASK_VARIANT = 4;
alias PANGO_FONT_MASK_WEIGHT = 8;
alias PANGO_FONT_MASK_STRETCH = 16;
alias PANGO_FONT_MASK_SIZE = 32;
alias PANGO_FONT_MASK_GRAVITY = 64;

alias PangoFontMask = Int;

external pango_font_description_get_type() CULong;

external pango_font_description_new() Pointer[PangoFontDescription];

external pango_font_description_copy(
    desc : Pointer[PangoFontDescription]) Pointer[PangoFontDescription];

external pango_font_description_copy_static(
    desc : Pointer[PangoFontDescription]) Pointer[PangoFontDescription];

external pango_font_description_hash(
    desc : Pointer[PangoFontDescription]) UInt;

external pango_font_description_equal(
    desc1 : Pointer[PangoFontDescription],
    desc2 : Pointer[PangoFontDescription]) Int;

external pango_font_description_free(
    desc : Pointer[PangoFontDescription]);

external pango_font_descriptions_free(
    descs : Pointer[Pointer[PangoFontDescription]],
    n_descs : Int);

external pango_font_description_set_family(
    desc : Pointer[PangoFontDescription],
    family : Pointer[CChar]);

external pango_font_description_set_family_static(
    desc : Pointer[PangoFontDescription],
    family : Pointer[CChar]);

external pango_font_description_get_family(
    desc : Pointer[PangoFontDescription]) Pointer[CChar];

external pango_font_description_set_style(
    desc : Pointer[PangoFontDescription],
    style : PangoStyle);

external pango_font_description_get_style(
    desc : Pointer[PangoFontDescription]) PangoStyle;

external pango_font_description_set_variant(
    desc : Pointer[PangoFontDescription],
    variant_ : PangoVariant);

external pango_font_description_get_variant(
    desc : Pointer[PangoFontDescription]) PangoVariant;

external pango_font_description_set_weight(
    desc : Pointer[PangoFontDescription],
    weight : PangoWeight);

external pango_font_description_get_weight(
    desc : Pointer[PangoFontDescription]) PangoWeight;

external pango_font_description_set_stretch(
    desc : Pointer[PangoFontDescription],
    stretch : PangoStretch);

external pango_font_description_get_stretch(
    desc : Pointer[PangoFontDescription]) PangoStretch;

external pango_font_description_set_size(
    desc : Pointer[PangoFontDescription],
    size : Int);

external pango_font_description_get_size(
    desc : Pointer[PangoFontDescription]) Int;

external pango_font_description_set_absolute_size(
    desc : Pointer[PangoFontDescription],
    size : Double);

external pango_font_description_get_size_is_absolute(
    desc : Pointer[PangoFontDescription]) Int;

external pango_font_description_set_gravity(
    desc : Pointer[PangoFontDescription],
    gravity : PangoGravity);

external pango_font_description_get_gravity(
    desc : Pointer[PangoFontDescription]) PangoGravity;

external pango_font_description_get_set_fields(
    desc : Pointer[PangoFontDescription]) PangoFontMask;

external pango_font_description_unset_fields(
    desc : Pointer[PangoFontDescription],
    to_unset : PangoFontMask);

external pango_font_description_merge(
    desc : Pointer[PangoFontDescription],
    desc_to_merge : Pointer[PangoFontDescription],
    replace_existing : Int);

external pango_font_description_merge_static(
    desc : Pointer[PangoFontDescription],
    desc_to_merge : Pointer[PangoFontDescription],
    replace_existing : Int);

external pango_font_description_better_match(
    desc : Pointer[PangoFontDescription],
    old_match : Pointer[PangoFontDescription],
    new_match : Pointer[PangoFontDescription]) Int;

external pango_font_description_from_string(
    str : Pointer[CChar]) Pointer[PangoFontDescription];

external pango_font_description_to_string(
    desc : Pointer[PangoFontDescription]) Pointer[CChar];

external pango_font_description_to_filename(
    desc : Pointer[PangoFontDescription]) Pointer[CChar];

external pango_font_metrics_get_type() CULong;

external pango_font_metrics_ref(
    metrics : Pointer[PangoFontMetrics]) Pointer[PangoFontMetrics];

external pango_font_metrics_unref(
    metrics : Pointer[PangoFontMetrics]);

external pango_font_metrics_get_ascent(
    metrics : Pointer[PangoFontMetrics]) Int;

external pango_font_metrics_get_descent(
    metrics : Pointer[PangoFontMetrics]) Int;

external pango_font_metrics_get_approximate_char_width(
    metrics : Pointer[PangoFontMetrics]) Int;

external pango_font_metrics_get_approximate_digit_width(
    metrics : Pointer[PangoFontMetrics]) Int;

external pango_font_metrics_get_underline_position(
    metrics : Pointer[PangoFontMetrics]) Int;

external pango_font_metrics_get_underline_thickness(
    metrics : Pointer[PangoFontMetrics]) Int;

external pango_font_metrics_get_strikethrough_position(
    metrics : Pointer[PangoFontMetrics]) Int;

external pango_font_metrics_get_strikethrough_thickness(
    metrics : Pointer[PangoFontMetrics]) Int;

alias PangoFontFamily = Opaque;

alias PangoFontFace = Opaque;

external pango_font_family_get_type() CULong;

external pango_font_family_list_faces(
    family : Pointer[PangoFontFamily],
    faces : Pointer[Pointer[Pointer[PangoFontFace]]],
    n_faces : Pointer[Int]);

external pango_font_family_get_name(
    family : Pointer[PangoFontFamily]) Pointer[CChar];

external pango_font_family_is_monospace(
    family : Pointer[PangoFontFamily]) Int;

external pango_font_face_get_type() CULong;

external pango_font_face_describe(
    face : Pointer[PangoFontFace]) Pointer[PangoFontDescription];

external pango_font_face_get_face_name(
    face : Pointer[PangoFontFace]) Pointer[CChar];

external pango_font_face_list_sizes(
    face : Pointer[PangoFontFace],
    sizes : Pointer[Pointer[Int]],
    n_sizes : Pointer[Int]);

external pango_font_face_is_synthesized(
    face : Pointer[PangoFontFace]) Int;

external pango_font_get_type() CULong;

external pango_font_describe(
    font : Pointer[PangoFont]) Pointer[PangoFontDescription];

external pango_font_describe_with_absolute_size(
    font : Pointer[PangoFont]) Pointer[PangoFontDescription];

external pango_font_get_coverage(
    font : Pointer[PangoFont],
    language : Pointer[PangoLanguage]) Pointer[PangoCoverage];

external pango_font_find_shaper(
    font : Pointer[PangoFont],
    language : Pointer[PangoLanguage],
    ch : UInt) Pointer[PangoEngineShape];

external pango_font_get_metrics(
    font : Pointer[PangoFont],
    language : Pointer[PangoLanguage]) Pointer[PangoFontMetrics];

external pango_font_get_glyph_extents(
    font : Pointer[PangoFont],
    glyph : UInt,
    ink_rect : Pointer[PangoRectangle],
    logical_rect : Pointer[PangoRectangle]);

external pango_font_get_font_map(
    font : Pointer[PangoFont]) Pointer[PangoFontMap];

alias PangoColor = Struct__PangoColor;

record Struct__PangoColor (
    red : UShort,
    green : UShort,
    blue : UShort,
);

external pango_color_get_type() CULong;

external pango_color_copy(
    src : Pointer[PangoColor]) Pointer[PangoColor];

external pango_color_free(
    color : Pointer[PangoColor]);

external pango_color_parse(
    color : Pointer[PangoColor],
    spec : Pointer[CChar]) Int;

external pango_color_to_string(
    color : Pointer[PangoColor]) Pointer[CChar];

alias PangoAttribute = Struct__PangoAttribute;

alias PangoAttrClass = Struct__PangoAttrClass;

alias PangoAttrString = Struct__PangoAttrString;

alias PangoAttrLanguage = Struct__PangoAttrLanguage;

alias PangoAttrInt = Struct__PangoAttrInt;

alias PangoAttrSize = Struct__PangoAttrSize;

alias PangoAttrFloat = Struct__PangoAttrFloat;

alias PangoAttrColor = Struct__PangoAttrColor;

alias PangoAttrFontDesc = Struct__PangoAttrFontDesc;

alias PangoAttrShape = Struct__PangoAttrShape;

alias PangoAttrList = Opaque;

alias PangoAttrIterator = Opaque;

alias PANGO_ATTR_INVALID = 0;
alias PANGO_ATTR_LANGUAGE = 1;
alias PANGO_ATTR_FAMILY = 2;
alias PANGO_ATTR_STYLE = 3;
alias PANGO_ATTR_WEIGHT = 4;
alias PANGO_ATTR_VARIANT = 5;
alias PANGO_ATTR_STRETCH = 6;
alias PANGO_ATTR_SIZE = 7;
alias PANGO_ATTR_FONT_DESC = 8;
alias PANGO_ATTR_FOREGROUND = 9;
alias PANGO_ATTR_BACKGROUND = 10;
alias PANGO_ATTR_UNDERLINE = 11;
alias PANGO_ATTR_STRIKETHROUGH = 12;
alias PANGO_ATTR_RISE = 13;
alias PANGO_ATTR_SHAPE = 14;
alias PANGO_ATTR_SCALE = 15;
alias PANGO_ATTR_FALLBACK = 16;
alias PANGO_ATTR_LETTER_SPACING = 17;
alias PANGO_ATTR_UNDERLINE_COLOR = 18;
alias PANGO_ATTR_STRIKETHROUGH_COLOR = 19;
alias PANGO_ATTR_ABSOLUTE_SIZE = 20;
alias PANGO_ATTR_GRAVITY = 21;
alias PANGO_ATTR_GRAVITY_HINT = 22;

alias PangoAttrType = Int;

alias PANGO_UNDERLINE_NONE = 0;
alias PANGO_UNDERLINE_SINGLE = 1;
alias PANGO_UNDERLINE_DOUBLE = 2;
alias PANGO_UNDERLINE_LOW = 3;
alias PANGO_UNDERLINE_ERROR = 4;

alias PangoUnderline = Int;

record Struct__PangoAttribute (
    klass : Pointer[PangoAttrClass],
    start_index : UInt,
    end_index : UInt,
);

alias PangoAttrFilterFunc = CCodePointer[(Pointer[Struct__PangoAttribute],RawPointer),(Int)];

alias PangoAttrDataCopyFunc = CCodePointer[(RawPointer),(RawPointer)];

record Struct__PangoAttrClass (
    type : PangoAttrType,
    copy : CCodePointer[(Pointer[Struct__PangoAttribute]),(Pointer[Struct__PangoAttribute])],
    destroy : CCodePointer[(Pointer[Struct__PangoAttribute]),()],
    equal : CCodePointer[(Pointer[Struct__PangoAttribute],Pointer[Struct__PangoAttribute]),(Int)],
);

record Struct__PangoAttrString (
    attr : PangoAttribute,
    value : Pointer[CChar],
);

record Struct__PangoAttrLanguage (
    attr : PangoAttribute,
    value : Pointer[PangoLanguage],
);

record Struct__PangoAttrInt (
    attr : PangoAttribute,
    value : Int,
);

record Struct__PangoAttrFloat (
    attr : PangoAttribute,
    value : Double,
);

record Struct__PangoAttrColor (
    attr : PangoAttribute,
    color : PangoColor,
);

record Struct__PangoAttrSize (
    attr : PangoAttribute,
    size : Int,
    absolute : UInt,
);

record Struct__PangoAttrShape (
    attr : PangoAttribute,
    ink_rect : PangoRectangle,
    logical_rect : PangoRectangle,
    data : gpointer,
    copy_func : PangoAttrDataCopyFunc,
    destroy_func : GDestroyNotify,
);

record Struct__PangoAttrFontDesc (
    attr : PangoAttribute,
    desc : Pointer[PangoFontDescription],
);

external pango_attr_type_register(
    name : Pointer[CChar]) PangoAttrType;

external pango_attr_type_get_name(
    type : PangoAttrType) Pointer[CChar];

external pango_attribute_init(
    attr : Pointer[PangoAttribute],
    klass : Pointer[PangoAttrClass]);

external pango_attribute_copy(
    attr : Pointer[PangoAttribute]) Pointer[PangoAttribute];

external pango_attribute_destroy(
    attr : Pointer[PangoAttribute]);

external pango_attribute_equal(
    attr1 : Pointer[PangoAttribute],
    attr2 : Pointer[PangoAttribute]) Int;

external pango_attr_language_new(
    language : Pointer[PangoLanguage]) Pointer[PangoAttribute];

external pango_attr_family_new(
    family : Pointer[CChar]) Pointer[PangoAttribute];

external pango_attr_foreground_new(
    red : UShort,
    green : UShort,
    blue : UShort) Pointer[PangoAttribute];

external pango_attr_background_new(
    red : UShort,
    green : UShort,
    blue : UShort) Pointer[PangoAttribute];

external pango_attr_size_new(
    size : Int) Pointer[PangoAttribute];

external pango_attr_size_new_absolute(
    size : Int) Pointer[PangoAttribute];

external pango_attr_style_new(
    style : PangoStyle) Pointer[PangoAttribute];

external pango_attr_weight_new(
    weight : PangoWeight) Pointer[PangoAttribute];

external pango_attr_variant_new(
    variant_ : PangoVariant) Pointer[PangoAttribute];

external pango_attr_stretch_new(
    stretch : PangoStretch) Pointer[PangoAttribute];

external pango_attr_font_desc_new(
    desc : Pointer[PangoFontDescription]) Pointer[PangoAttribute];

external pango_attr_underline_new(
    underline : PangoUnderline) Pointer[PangoAttribute];

external pango_attr_underline_color_new(
    red : UShort,
    green : UShort,
    blue : UShort) Pointer[PangoAttribute];

external pango_attr_strikethrough_new(
    strikethrough : Int) Pointer[PangoAttribute];

external pango_attr_strikethrough_color_new(
    red : UShort,
    green : UShort,
    blue : UShort) Pointer[PangoAttribute];

external pango_attr_rise_new(
    rise : Int) Pointer[PangoAttribute];

external pango_attr_scale_new(
    scale_factor : Double) Pointer[PangoAttribute];

external pango_attr_fallback_new(
    enable_fallback : Int) Pointer[PangoAttribute];

external pango_attr_letter_spacing_new(
    letter_spacing : Int) Pointer[PangoAttribute];

external pango_attr_shape_new(
    ink_rect : Pointer[PangoRectangle],
    logical_rect : Pointer[PangoRectangle]) Pointer[PangoAttribute];

external pango_attr_shape_new_with_data(
    ink_rect : Pointer[PangoRectangle],
    logical_rect : Pointer[PangoRectangle],
    data : gpointer,
    copy_func : PangoAttrDataCopyFunc,
    destroy_func : GDestroyNotify) Pointer[PangoAttribute];

external pango_attr_gravity_new(
    gravity : PangoGravity) Pointer[PangoAttribute];

external pango_attr_gravity_hint_new(
    hint : PangoGravityHint) Pointer[PangoAttribute];

external pango_attr_list_get_type() CULong;

external pango_attr_list_new() Pointer[PangoAttrList];

external pango_attr_list_ref(
    list : Pointer[PangoAttrList]) Pointer[PangoAttrList];

external pango_attr_list_unref(
    list : Pointer[PangoAttrList]);

external pango_attr_list_copy(
    list : Pointer[PangoAttrList]) Pointer[PangoAttrList];

external pango_attr_list_insert(
    list : Pointer[PangoAttrList],
    attr : Pointer[PangoAttribute]);

external pango_attr_list_insert_before(
    list : Pointer[PangoAttrList],
    attr : Pointer[PangoAttribute]);

external pango_attr_list_change(
    list : Pointer[PangoAttrList],
    attr : Pointer[PangoAttribute]);

external pango_attr_list_splice(
    list : Pointer[PangoAttrList],
    other : Pointer[PangoAttrList],
    pos : Int,
    len : Int);

external pango_attr_list_filter(
    list : Pointer[PangoAttrList],
    func : PangoAttrFilterFunc,
    data : gpointer) Pointer[PangoAttrList];

external pango_attr_list_get_iterator(
    list : Pointer[PangoAttrList]) Pointer[PangoAttrIterator];

external pango_attr_iterator_range(
    iterator : Pointer[PangoAttrIterator],
    start : Pointer[Int],
    end : Pointer[Int]);

external pango_attr_iterator_next(
    iterator : Pointer[PangoAttrIterator]) Int;

external pango_attr_iterator_copy(
    iterator : Pointer[PangoAttrIterator]) Pointer[PangoAttrIterator];

external pango_attr_iterator_destroy(
    iterator : Pointer[PangoAttrIterator]);

external pango_attr_iterator_get(
    iterator : Pointer[PangoAttrIterator],
    type : PangoAttrType) Pointer[PangoAttribute];

external pango_attr_iterator_get_font(
    iterator : Pointer[PangoAttrIterator],
    desc : Pointer[PangoFontDescription],
    language : Pointer[Pointer[PangoLanguage]],
    extra_attrs : Pointer[Pointer[GSList]]);

external pango_attr_iterator_get_attrs(
    iterator : Pointer[PangoAttrIterator]) Pointer[GSList];

external pango_parse_markup(
    markup_text : Pointer[CChar],
    length : Int,
    accel_marker : UInt,
    attr_list : Pointer[Pointer[PangoAttrList]],
    text : Pointer[Pointer[CChar]],
    accel_char : Pointer[UInt],
    error : Pointer[Pointer[GError]]) Int;

alias PangoAnalysis = Struct__PangoAnalysis;

alias PangoItem = Struct__PangoItem;

record Struct__PangoAnalysis (
    shape_engine : Pointer[PangoEngineShape],
    lang_engine : Pointer[PangoEngineLang],
    font : Pointer[PangoFont],
    level : CUChar,
    gravity : CUChar,
    flags : CUChar,
    script : CUChar,
    language : Pointer[PangoLanguage],
    extra_attrs : Pointer[GSList],
);

record Struct__PangoItem (
    offset : Int,
    length : Int,
    num_chars : Int,
    analysis : PangoAnalysis,
);

external pango_item_get_type() CULong;

external pango_item_new() Pointer[PangoItem];

external pango_item_copy(
    item : Pointer[PangoItem]) Pointer[PangoItem];

external pango_item_free(
    item : Pointer[PangoItem]);

external pango_item_split(
    orig : Pointer[PangoItem],
    split_index : Int,
    split_offset : Int) Pointer[PangoItem];

record Struct__PangoLogAttr (
    is_line_break : UInt,
    is_mandatory_break : UInt,
    is_char_break : UInt,
    is_white : UInt,
    is_cursor_position : UInt,
    is_word_start : UInt,
    is_word_end : UInt,
    is_sentence_boundary : UInt,
    is_sentence_start : UInt,
    is_sentence_end : UInt,
    backspace_deletes_character : UInt,
    is_expandable_space : UInt,
    is_word_boundary : UInt,
);

external pango_break(
    text : Pointer[CChar],
    length : Int,
    analysis : Pointer[PangoAnalysis],
    attrs : Pointer[PangoLogAttr],
    attrs_len : Int);

external pango_find_paragraph_boundary(
    text : Pointer[CChar],
    length : Int,
    paragraph_delimiter_index : Pointer[Int],
    next_paragraph_start : Pointer[Int]);

external pango_get_log_attrs(
    text : Pointer[CChar],
    length : Int,
    level : Int,
    language : Pointer[PangoLanguage],
    log_attrs : Pointer[PangoLogAttr],
    attrs_len : Int);

external pango_fontset_get_type() CULong;

alias PangoFontset = Opaque;

alias PangoFontsetForeachFunc = CCodePointer[(OpaquePointer,OpaquePointer,RawPointer),(Int)];

external pango_fontset_get_font(
    fontset : Pointer[PangoFontset],
    wc : UInt) Pointer[PangoFont];

external pango_fontset_get_metrics(
    fontset : Pointer[PangoFontset]) Pointer[PangoFontMetrics];

external pango_fontset_foreach(
    fontset : Pointer[PangoFontset],
    func : PangoFontsetForeachFunc,
    data : gpointer);

alias PangoContext = Opaque;

external pango_font_map_get_type() CULong;

external pango_font_map_create_context(
    fontmap : Pointer[PangoFontMap]) Pointer[PangoContext];

external pango_font_map_load_font(
    fontmap : Pointer[PangoFontMap],
    context : Pointer[PangoContext],
    desc : Pointer[PangoFontDescription]) Pointer[PangoFont];

external pango_font_map_load_fontset(
    fontmap : Pointer[PangoFontMap],
    context : Pointer[PangoContext],
    desc : Pointer[PangoFontDescription],
    language : Pointer[PangoLanguage]) Pointer[PangoFontset];

external pango_font_map_list_families(
    fontmap : Pointer[PangoFontMap],
    families : Pointer[Pointer[Pointer[PangoFontFamily]]],
    n_families : Pointer[Int]);

alias PangoContextClass = Opaque;

external pango_context_get_type() CULong;

external pango_context_new() Pointer[PangoContext];

external pango_context_set_font_map(
    context : Pointer[PangoContext],
    font_map : Pointer[PangoFontMap]);

external pango_context_get_font_map(
    context : Pointer[PangoContext]) Pointer[PangoFontMap];

external pango_context_list_families(
    context : Pointer[PangoContext],
    families : Pointer[Pointer[Pointer[PangoFontFamily]]],
    n_families : Pointer[Int]);

external pango_context_load_font(
    context : Pointer[PangoContext],
    desc : Pointer[PangoFontDescription]) Pointer[PangoFont];

external pango_context_load_fontset(
    context : Pointer[PangoContext],
    desc : Pointer[PangoFontDescription],
    language : Pointer[PangoLanguage]) Pointer[PangoFontset];

external pango_context_get_metrics(
    context : Pointer[PangoContext],
    desc : Pointer[PangoFontDescription],
    language : Pointer[PangoLanguage]) Pointer[PangoFontMetrics];

external pango_context_set_font_description(
    context : Pointer[PangoContext],
    desc : Pointer[PangoFontDescription]);

external pango_context_get_font_description(
    context : Pointer[PangoContext]) Pointer[PangoFontDescription];

external pango_context_get_language(
    context : Pointer[PangoContext]) Pointer[PangoLanguage];

external pango_context_set_language(
    context : Pointer[PangoContext],
    language : Pointer[PangoLanguage]);

external pango_context_set_base_dir(
    context : Pointer[PangoContext],
    direction : PangoDirection);

external pango_context_get_base_dir(
    context : Pointer[PangoContext]) PangoDirection;

external pango_context_set_base_gravity(
    context : Pointer[PangoContext],
    gravity : PangoGravity);

external pango_context_get_base_gravity(
    context : Pointer[PangoContext]) PangoGravity;

external pango_context_get_gravity(
    context : Pointer[PangoContext]) PangoGravity;

external pango_context_set_gravity_hint(
    context : Pointer[PangoContext],
    hint : PangoGravityHint);

external pango_context_get_gravity_hint(
    context : Pointer[PangoContext]) PangoGravityHint;

external pango_context_set_matrix(
    context : Pointer[PangoContext],
    matrix : Pointer[PangoMatrix]);

external pango_context_get_matrix(
    context : Pointer[PangoContext]) Pointer[PangoMatrix];

external pango_itemize(
    context : Pointer[PangoContext],
    text : Pointer[CChar],
    start_index : Int,
    length : Int,
    attrs : Pointer[PangoAttrList],
    cached_iter : Pointer[PangoAttrIterator]) Pointer[GList];

external pango_itemize_with_base_dir(
    context : Pointer[PangoContext],
    base_dir : PangoDirection,
    text : Pointer[CChar],
    start_index : Int,
    length : Int,
    attrs : Pointer[PangoAttrList],
    cached_iter : Pointer[PangoAttrIterator]) Pointer[GList];

alias PangoGlyphGeometry = Struct__PangoGlyphGeometry;

alias PangoGlyphVisAttr = Struct__PangoGlyphVisAttr;

alias PangoGlyphInfo = Struct__PangoGlyphInfo;

alias PangoGlyphString = Struct__PangoGlyphString;

alias PangoGlyphUnit = Int;

record Struct__PangoGlyphGeometry (
    width : Int,
    x_offset : Int,
    y_offset : Int,
);

record Struct__PangoGlyphVisAttr (
    is_cluster_start : UInt,
);

record Struct__PangoGlyphInfo (
    glyph : UInt,
    geometry : PangoGlyphGeometry,
    attr : PangoGlyphVisAttr,
);

record Struct__PangoGlyphString (
    num_glyphs : Int,
    glyphs : Pointer[PangoGlyphInfo],
    log_clusters : Pointer[Int],
    space : Int,
);

external pango_glyph_string_new() Pointer[PangoGlyphString];

external pango_glyph_string_set_size(
    string : Pointer[PangoGlyphString],
    new_len : Int);

external pango_glyph_string_get_type() CULong;

external pango_glyph_string_copy(
    string : Pointer[PangoGlyphString]) Pointer[PangoGlyphString];

external pango_glyph_string_free(
    string : Pointer[PangoGlyphString]);

external pango_glyph_string_extents(
    glyphs : Pointer[PangoGlyphString],
    font : Pointer[PangoFont],
    ink_rect : Pointer[PangoRectangle],
    logical_rect : Pointer[PangoRectangle]);

external pango_glyph_string_get_width(
    glyphs : Pointer[PangoGlyphString]) Int;

external pango_glyph_string_extents_range(
    glyphs : Pointer[PangoGlyphString],
    start : Int,
    end : Int,
    font : Pointer[PangoFont],
    ink_rect : Pointer[PangoRectangle],
    logical_rect : Pointer[PangoRectangle]);

external pango_glyph_string_get_logical_widths(
    glyphs : Pointer[PangoGlyphString],
    text : Pointer[CChar],
    length : Int,
    embedding_level : Int,
    logical_widths : Pointer[Int]);

external pango_glyph_string_index_to_x(
    glyphs : Pointer[PangoGlyphString],
    text : Pointer[CChar],
    length : Int,
    analysis : Pointer[PangoAnalysis],
    index_ : Int,
    trailing : Int,
    x_pos : Pointer[Int]);

external pango_glyph_string_x_to_index(
    glyphs : Pointer[PangoGlyphString],
    text : Pointer[CChar],
    length : Int,
    analysis : Pointer[PangoAnalysis],
    x_pos : Int,
    index_ : Pointer[Int],
    trailing : Pointer[Int]);

external pango_shape(
    text : Pointer[CChar],
    length : Int,
    analysis : Pointer[PangoAnalysis],
    glyphs : Pointer[PangoGlyphString]);

external pango_reorder_items(
    logical_items : Pointer[GList]) Pointer[GList];

external pango_attr_type_get_type() CULong;

external pango_underline_get_type() CULong;

external pango_bidi_type_get_type() CULong;

external pango_direction_get_type() CULong;

external pango_coverage_level_get_type() CULong;

external pango_style_get_type() CULong;

external pango_variant_get_type() CULong;

external pango_weight_get_type() CULong;

external pango_stretch_get_type() CULong;

external pango_font_mask_get_type() CULong;

external pango_gravity_get_type() CULong;

external pango_gravity_hint_get_type() CULong;

external pango_alignment_get_type() CULong;

external pango_wrap_mode_get_type() CULong;

external pango_ellipsize_mode_get_type() CULong;

external pango_render_part_get_type() CULong;

external pango_script_get_type() CULong;

external pango_tab_align_get_type() CULong;

alias PangoGlyphItem = Struct__PangoGlyphItem;

record Struct__PangoGlyphItem (
    item : Pointer[PangoItem],
    glyphs : Pointer[PangoGlyphString],
);

external pango_glyph_item_get_type() CULong;

external pango_glyph_item_split(
    orig : Pointer[PangoGlyphItem],
    text : Pointer[CChar],
    split_index : Int) Pointer[PangoGlyphItem];

external pango_glyph_item_copy(
    orig : Pointer[PangoGlyphItem]) Pointer[PangoGlyphItem];

external pango_glyph_item_free(
    glyph_item : Pointer[PangoGlyphItem]);

external pango_glyph_item_apply_attrs(
    glyph_item : Pointer[PangoGlyphItem],
    text : Pointer[CChar],
    list : Pointer[PangoAttrList]) Pointer[GSList];

external pango_glyph_item_letter_space(
    glyph_item : Pointer[PangoGlyphItem],
    text : Pointer[CChar],
    log_attrs : Pointer[PangoLogAttr],
    letter_spacing : Int);

external pango_glyph_item_get_logical_widths(
    glyph_item : Pointer[PangoGlyphItem],
    text : Pointer[CChar],
    logical_widths : Pointer[Int]);

alias PangoGlyphItemIter = Struct__PangoGlyphItemIter;

record Struct__PangoGlyphItemIter (
    glyph_item : Pointer[PangoGlyphItem],
    text : Pointer[CChar],
    start_glyph : Int,
    start_index : Int,
    start_char : Int,
    end_glyph : Int,
    end_index : Int,
    end_char : Int,
);

external pango_glyph_item_iter_get_type() CULong;

external pango_glyph_item_iter_copy(
    orig : Pointer[PangoGlyphItemIter]) Pointer[PangoGlyphItemIter];

external pango_glyph_item_iter_free(
    iter : Pointer[PangoGlyphItemIter]);

external pango_glyph_item_iter_init_start(
    iter : Pointer[PangoGlyphItemIter],
    glyph_item : Pointer[PangoGlyphItem],
    text : Pointer[CChar]) Int;

external pango_glyph_item_iter_init_end(
    iter : Pointer[PangoGlyphItemIter],
    glyph_item : Pointer[PangoGlyphItem],
    text : Pointer[CChar]) Int;

external pango_glyph_item_iter_next_cluster(
    iter : Pointer[PangoGlyphItemIter]) Int;

external pango_glyph_item_iter_prev_cluster(
    iter : Pointer[PangoGlyphItemIter]) Int;

alias PangoTabArray = Opaque;

alias PANGO_TAB_LEFT = 0;

alias PangoTabAlign = Int;

external pango_tab_array_new(
    initial_size : Int,
    positions_in_pixels : Int) Pointer[PangoTabArray];

external pango_tab_array_new_with_positions(
    size : Int,
    positions_in_pixels : Int,
    first_alignment : PangoTabAlign,
    first_position : Int,
    ...) Pointer[PangoTabArray];

external pango_tab_array_get_type() CULong;

external pango_tab_array_copy(
    src : Pointer[PangoTabArray]) Pointer[PangoTabArray];

external pango_tab_array_free(
    tab_array : Pointer[PangoTabArray]);

external pango_tab_array_get_size(
    tab_array : Pointer[PangoTabArray]) Int;

external pango_tab_array_resize(
    tab_array : Pointer[PangoTabArray],
    new_size : Int);

external pango_tab_array_set_tab(
    tab_array : Pointer[PangoTabArray],
    tab_index : Int,
    alignment : PangoTabAlign,
    location : Int);

external pango_tab_array_get_tab(
    tab_array : Pointer[PangoTabArray],
    tab_index : Int,
    alignment : Pointer[PangoTabAlign],
    location : Pointer[Int]);

external pango_tab_array_get_tabs(
    tab_array : Pointer[PangoTabArray],
    alignments : Pointer[Pointer[PangoTabAlign]],
    locations : Pointer[Pointer[Int]]);

external pango_tab_array_get_positions_in_pixels(
    tab_array : Pointer[PangoTabArray]) Int;

alias PangoLayout = Opaque;

alias PangoLayoutClass = Opaque;

alias PangoLayoutLine = Struct__PangoLayoutLine;

alias PangoLayoutRun = PangoGlyphItem;

alias PANGO_ALIGN_LEFT = 0;
alias PANGO_ALIGN_CENTER = 1;
alias PANGO_ALIGN_RIGHT = 2;

alias PangoAlignment = Int;

alias PANGO_WRAP_WORD = 0;
alias PANGO_WRAP_CHAR = 1;
alias PANGO_WRAP_WORD_CHAR = 2;

alias PangoWrapMode = Int;

alias PANGO_ELLIPSIZE_NONE = 0;
alias PANGO_ELLIPSIZE_START = 1;
alias PANGO_ELLIPSIZE_MIDDLE = 2;
alias PANGO_ELLIPSIZE_END = 3;

alias PangoEllipsizeMode = Int;

record Struct__PangoLayoutLine (
    layout : Pointer[PangoLayout],
    start_index : Int,
    length : Int,
    runs : Pointer[GSList],
    is_paragraph_start : UInt,
    resolved_dir : UInt,
);

external pango_layout_get_type() CULong;

external pango_layout_new(
    context : Pointer[PangoContext]) Pointer[PangoLayout];

external pango_layout_copy(
    src : Pointer[PangoLayout]) Pointer[PangoLayout];

external pango_layout_get_context(
    layout : Pointer[PangoLayout]) Pointer[PangoContext];

external pango_layout_set_attributes(
    layout : Pointer[PangoLayout],
    attrs : Pointer[PangoAttrList]);

external pango_layout_get_attributes(
    layout : Pointer[PangoLayout]) Pointer[PangoAttrList];

external pango_layout_set_text(
    layout : Pointer[PangoLayout],
    text : Pointer[CChar],
    length : Int);

external pango_layout_get_text(
    layout : Pointer[PangoLayout]) Pointer[CChar];

external pango_layout_set_markup(
    layout : Pointer[PangoLayout],
    markup : Pointer[CChar],
    length : Int);

external pango_layout_set_markup_with_accel(
    layout : Pointer[PangoLayout],
    markup : Pointer[CChar],
    length : Int,
    accel_marker : UInt,
    accel_char : Pointer[UInt]);

external pango_layout_set_font_description(
    layout : Pointer[PangoLayout],
    desc : Pointer[PangoFontDescription]);

external pango_layout_get_font_description(
    layout : Pointer[PangoLayout]) Pointer[PangoFontDescription];

external pango_layout_set_width(
    layout : Pointer[PangoLayout],
    width : Int);

external pango_layout_get_width(
    layout : Pointer[PangoLayout]) Int;

external pango_layout_set_height(
    layout : Pointer[PangoLayout],
    height : Int);

external pango_layout_get_height(
    layout : Pointer[PangoLayout]) Int;

external pango_layout_set_wrap(
    layout : Pointer[PangoLayout],
    wrap : PangoWrapMode);

external pango_layout_get_wrap(
    layout : Pointer[PangoLayout]) PangoWrapMode;

external pango_layout_is_wrapped(
    layout : Pointer[PangoLayout]) Int;

external pango_layout_set_indent(
    layout : Pointer[PangoLayout],
    indent : Int);

external pango_layout_get_indent(
    layout : Pointer[PangoLayout]) Int;

external pango_layout_set_spacing(
    layout : Pointer[PangoLayout],
    spacing : Int);

external pango_layout_get_spacing(
    layout : Pointer[PangoLayout]) Int;

external pango_layout_set_justify(
    layout : Pointer[PangoLayout],
    justify : Int);

external pango_layout_get_justify(
    layout : Pointer[PangoLayout]) Int;

external pango_layout_set_auto_dir(
    layout : Pointer[PangoLayout],
    auto_dir : Int);

external pango_layout_get_auto_dir(
    layout : Pointer[PangoLayout]) Int;

external pango_layout_set_alignment(
    layout : Pointer[PangoLayout],
    alignment : PangoAlignment);

external pango_layout_get_alignment(
    layout : Pointer[PangoLayout]) PangoAlignment;

external pango_layout_set_tabs(
    layout : Pointer[PangoLayout],
    tabs : Pointer[PangoTabArray]);

external pango_layout_get_tabs(
    layout : Pointer[PangoLayout]) Pointer[PangoTabArray];

external pango_layout_set_single_paragraph_mode(
    layout : Pointer[PangoLayout],
    setting : Int);

external pango_layout_get_single_paragraph_mode(
    layout : Pointer[PangoLayout]) Int;

external pango_layout_set_ellipsize(
    layout : Pointer[PangoLayout],
    ellipsize : PangoEllipsizeMode);

external pango_layout_get_ellipsize(
    layout : Pointer[PangoLayout]) PangoEllipsizeMode;

external pango_layout_is_ellipsized(
    layout : Pointer[PangoLayout]) Int;

external pango_layout_get_unknown_glyphs_count(
    layout : Pointer[PangoLayout]) Int;

external pango_layout_context_changed(
    layout : Pointer[PangoLayout]);

external pango_layout_get_log_attrs(
    layout : Pointer[PangoLayout],
    attrs : Pointer[Pointer[PangoLogAttr]],
    n_attrs : Pointer[Int]);

external pango_layout_index_to_pos(
    layout : Pointer[PangoLayout],
    index_ : Int,
    pos : Pointer[PangoRectangle]);

external pango_layout_index_to_line_x(
    layout : Pointer[PangoLayout],
    index_ : Int,
    trailing : Int,
    line : Pointer[Int],
    x_pos : Pointer[Int]);

external pango_layout_get_cursor_pos(
    layout : Pointer[PangoLayout],
    index_ : Int,
    strong_pos : Pointer[PangoRectangle],
    weak_pos : Pointer[PangoRectangle]);

external pango_layout_move_cursor_visually(
    layout : Pointer[PangoLayout],
    strong : Int,
    old_index : Int,
    old_trailing : Int,
    direction : Int,
    new_index : Pointer[Int],
    new_trailing : Pointer[Int]);

external pango_layout_xy_to_index(
    layout : Pointer[PangoLayout],
    x : Int,
    y : Int,
    index_ : Pointer[Int],
    trailing : Pointer[Int]) Int;

external pango_layout_get_extents(
    layout : Pointer[PangoLayout],
    ink_rect : Pointer[PangoRectangle],
    logical_rect : Pointer[PangoRectangle]);

external pango_layout_get_pixel_extents(
    layout : Pointer[PangoLayout],
    ink_rect : Pointer[PangoRectangle],
    logical_rect : Pointer[PangoRectangle]);

external pango_layout_get_size(
    layout : Pointer[PangoLayout],
    width : Pointer[Int],
    height : Pointer[Int]);

external pango_layout_get_pixel_size(
    layout : Pointer[PangoLayout],
    width : Pointer[Int],
    height : Pointer[Int]);

external pango_layout_get_baseline(
    layout : Pointer[PangoLayout]) Int;

external pango_layout_get_line_count(
    layout : Pointer[PangoLayout]) Int;

external pango_layout_get_line(
    layout : Pointer[PangoLayout],
    line : Int) Pointer[PangoLayoutLine];

external pango_layout_get_line_readonly(
    layout : Pointer[PangoLayout],
    line : Int) Pointer[PangoLayoutLine];

external pango_layout_get_lines(
    layout : Pointer[PangoLayout]) Pointer[GSList];

external pango_layout_get_lines_readonly(
    layout : Pointer[PangoLayout]) Pointer[GSList];

external pango_layout_line_get_type() CULong;

external pango_layout_line_ref(
    line : Pointer[PangoLayoutLine]) Pointer[PangoLayoutLine];

external pango_layout_line_unref(
    line : Pointer[PangoLayoutLine]);

external pango_layout_line_x_to_index(
    line : Pointer[PangoLayoutLine],
    x_pos : Int,
    index_ : Pointer[Int],
    trailing : Pointer[Int]) Int;

external pango_layout_line_index_to_x(
    line : Pointer[PangoLayoutLine],
    index_ : Int,
    trailing : Int,
    x_pos : Pointer[Int]);

external pango_layout_line_get_x_ranges(
    line : Pointer[PangoLayoutLine],
    start_index : Int,
    end_index : Int,
    ranges : Pointer[Pointer[Int]],
    n_ranges : Pointer[Int]);

external pango_layout_line_get_extents(
    line : Pointer[PangoLayoutLine],
    ink_rect : Pointer[PangoRectangle],
    logical_rect : Pointer[PangoRectangle]);

external pango_layout_line_get_pixel_extents(
    layout_line : Pointer[PangoLayoutLine],
    ink_rect : Pointer[PangoRectangle],
    logical_rect : Pointer[PangoRectangle]);

alias PangoLayoutIter = Opaque;

external pango_layout_iter_get_type() CULong;

external pango_layout_get_iter(
    layout : Pointer[PangoLayout]) Pointer[PangoLayoutIter];

external pango_layout_iter_copy(
    iter : Pointer[PangoLayoutIter]) Pointer[PangoLayoutIter];

external pango_layout_iter_free(
    iter : Pointer[PangoLayoutIter]);

external pango_layout_iter_get_index(
    iter : Pointer[PangoLayoutIter]) Int;

external pango_layout_iter_get_run(
    iter : Pointer[PangoLayoutIter]) Pointer[PangoLayoutRun];

external pango_layout_iter_get_run_readonly(
    iter : Pointer[PangoLayoutIter]) Pointer[PangoLayoutRun];

external pango_layout_iter_get_line(
    iter : Pointer[PangoLayoutIter]) Pointer[PangoLayoutLine];

external pango_layout_iter_get_line_readonly(
    iter : Pointer[PangoLayoutIter]) Pointer[PangoLayoutLine];

external pango_layout_iter_at_last_line(
    iter : Pointer[PangoLayoutIter]) Int;

external pango_layout_iter_get_layout(
    iter : Pointer[PangoLayoutIter]) Pointer[PangoLayout];

external pango_layout_iter_next_char(
    iter : Pointer[PangoLayoutIter]) Int;

external pango_layout_iter_next_cluster(
    iter : Pointer[PangoLayoutIter]) Int;

external pango_layout_iter_next_run(
    iter : Pointer[PangoLayoutIter]) Int;

external pango_layout_iter_next_line(
    iter : Pointer[PangoLayoutIter]) Int;

external pango_layout_iter_get_char_extents(
    iter : Pointer[PangoLayoutIter],
    logical_rect : Pointer[PangoRectangle]);

external pango_layout_iter_get_cluster_extents(
    iter : Pointer[PangoLayoutIter],
    ink_rect : Pointer[PangoRectangle],
    logical_rect : Pointer[PangoRectangle]);

external pango_layout_iter_get_run_extents(
    iter : Pointer[PangoLayoutIter],
    ink_rect : Pointer[PangoRectangle],
    logical_rect : Pointer[PangoRectangle]);

external pango_layout_iter_get_line_extents(
    iter : Pointer[PangoLayoutIter],
    ink_rect : Pointer[PangoRectangle],
    logical_rect : Pointer[PangoRectangle]);

external pango_layout_iter_get_line_yrange(
    iter : Pointer[PangoLayoutIter],
    y0_ : Pointer[Int],
    y1_ : Pointer[Int]);

external pango_layout_iter_get_layout_extents(
    iter : Pointer[PangoLayoutIter],
    ink_rect : Pointer[PangoRectangle],
    logical_rect : Pointer[PangoRectangle]);

external pango_layout_iter_get_baseline(
    iter : Pointer[PangoLayoutIter]) Int;

alias PangoRenderer = Struct__PangoRenderer;

alias PangoRendererClass = Struct__PangoRendererClass;

alias PangoRendererPrivate = Opaque;

alias PANGO_RENDER_PART_FOREGROUND = 0;
alias PANGO_RENDER_PART_BACKGROUND = 1;
alias PANGO_RENDER_PART_UNDERLINE = 2;
alias PANGO_RENDER_PART_STRIKETHROUGH = 3;

alias PangoRenderPart = Int;

record Struct__PangoRenderer (
    parent_instance : GObject,
    underline : PangoUnderline,
    strikethrough : Int,
    active_count : Int,
    matrix : Pointer[PangoMatrix],
    priv : Pointer[PangoRendererPrivate],
);

record Struct__PangoRendererClass (
    parent_class : GObjectClass,
    draw_glyphs : CCodePointer[(Pointer[Struct__PangoRenderer],OpaquePointer,Pointer[Struct__PangoGlyphString],Int,Int),()],
    draw_rectangle : CCodePointer[(Pointer[Struct__PangoRenderer],Int,Int,Int,Int,Int),()],
    draw_error_underline : CCodePointer[(Pointer[Struct__PangoRenderer],Int,Int,Int,Int),()],
    draw_shape : CCodePointer[(Pointer[Struct__PangoRenderer],Pointer[Struct__PangoAttrShape],Int,Int),()],
    draw_trapezoid : CCodePointer[(Pointer[Struct__PangoRenderer],Int,Double,Double,Double,Double,Double,Double),()],
    draw_glyph : CCodePointer[(Pointer[Struct__PangoRenderer],OpaquePointer,UInt,Double,Double),()],
    part_changed : CCodePointer[(Pointer[Struct__PangoRenderer],Int),()],
    begin : CCodePointer[(Pointer[Struct__PangoRenderer]),()],
    end : CCodePointer[(Pointer[Struct__PangoRenderer]),()],
    prepare_run : CCodePointer[(Pointer[Struct__PangoRenderer],Pointer[Struct__PangoGlyphItem]),()],
    draw_glyph_item : CCodePointer[(Pointer[Struct__PangoRenderer],Pointer[CChar],Pointer[Struct__PangoGlyphItem],Int,Int),()],
    _pango_reserved2 : CCodePointer[(),()],
    _pango_reserved3 : CCodePointer[(),()],
    _pango_reserved4 : CCodePointer[(),()],
);

external pango_renderer_get_type() CULong;

external pango_renderer_draw_layout(
    renderer : Pointer[PangoRenderer],
    layout : Pointer[PangoLayout],
    x : Int,
    y : Int);

external pango_renderer_draw_layout_line(
    renderer : Pointer[PangoRenderer],
    line : Pointer[PangoLayoutLine],
    x : Int,
    y : Int);

external pango_renderer_draw_glyphs(
    renderer : Pointer[PangoRenderer],
    font : Pointer[PangoFont],
    glyphs : Pointer[PangoGlyphString],
    x : Int,
    y : Int);

external pango_renderer_draw_glyph_item(
    renderer : Pointer[PangoRenderer],
    text : Pointer[CChar],
    glyph_item : Pointer[PangoGlyphItem],
    x : Int,
    y : Int);

external pango_renderer_draw_rectangle(
    renderer : Pointer[PangoRenderer],
    part : PangoRenderPart,
    x : Int,
    y : Int,
    width : Int,
    height : Int);

external pango_renderer_draw_error_underline(
    renderer : Pointer[PangoRenderer],
    x : Int,
    y : Int,
    width : Int,
    height : Int);

external pango_renderer_draw_trapezoid(
    renderer : Pointer[PangoRenderer],
    part : PangoRenderPart,
    y1_ : Double,
    x11 : Double,
    x21 : Double,
    y2 : Double,
    x12 : Double,
    x22 : Double);

external pango_renderer_draw_glyph(
    renderer : Pointer[PangoRenderer],
    font : Pointer[PangoFont],
    glyph : UInt,
    x : Double,
    y : Double);

external pango_renderer_activate(
    renderer : Pointer[PangoRenderer]);

external pango_renderer_deactivate(
    renderer : Pointer[PangoRenderer]);

external pango_renderer_part_changed(
    renderer : Pointer[PangoRenderer],
    part : PangoRenderPart);

external pango_renderer_set_color(
    renderer : Pointer[PangoRenderer],
    part : PangoRenderPart,
    color : Pointer[PangoColor]);

external pango_renderer_get_color(
    renderer : Pointer[PangoRenderer],
    part : PangoRenderPart) Pointer[PangoColor];

external pango_renderer_set_matrix(
    renderer : Pointer[PangoRenderer],
    matrix : Pointer[PangoMatrix]);

external pango_renderer_get_matrix(
    renderer : Pointer[PangoRenderer]) Pointer[PangoMatrix];

external pango_renderer_get_layout(
    renderer : Pointer[PangoRenderer]) Pointer[PangoLayout];

external pango_renderer_get_layout_line(
    renderer : Pointer[PangoRenderer]) Pointer[PangoLayoutLine];

external pango_split_file_list(
    str : Pointer[CChar]) Pointer[Pointer[CChar]];

external pango_trim_string(
    str : Pointer[CChar]) Pointer[CChar];

external pango_read_line(
    stream : Pointer[FILE],
    str : Pointer[GString]) Int;

external pango_skip_space(
    pos : Pointer[Pointer[CChar]]) Int;

external pango_scan_word(
    pos : Pointer[Pointer[CChar]],
    out : Pointer[GString]) Int;

external pango_scan_string(
    pos : Pointer[Pointer[CChar]],
    out : Pointer[GString]) Int;

external pango_scan_int(
    pos : Pointer[Pointer[CChar]],
    out : Pointer[Int]) Int;

external pango_parse_enum(
    type : CULong,
    str : Pointer[CChar],
    value : Pointer[Int],
    warn : Int,
    possible_values : Pointer[Pointer[CChar]]) Int;

external pango_parse_style(
    str : Pointer[CChar],
    style : Pointer[PangoStyle],
    warn : Int) Int;

external pango_parse_variant(
    str : Pointer[CChar],
    variant_ : Pointer[PangoVariant],
    warn : Int) Int;

external pango_parse_weight(
    str : Pointer[CChar],
    weight : Pointer[PangoWeight],
    warn : Int) Int;

external pango_parse_stretch(
    str : Pointer[CChar],
    stretch : Pointer[PangoStretch],
    warn : Int) Int;

external pango_quantize_line_geometry(
    thickness : Pointer[Int],
    position : Pointer[Int]);

external pango_log2vis_get_embedding_levels(
    text : Pointer[CChar],
    length : Int,
    pbase_dir : Pointer[PangoDirection]) Pointer[CUChar];

external pango_is_zero_width(
    ch : UInt) Int;

external pango_version() Int;

external pango_version_string() Pointer[CChar];

external pango_version_check(
    required_major : Int,
    required_minor : Int,
    required_micro : Int) Pointer[CChar];
