/* automatically generated by clay-bindgen */
import glib.generated.*;

alias Struct__PangoCoverage = Opaque;

alias PangoCoverage = Struct__PangoCoverage;

alias Enum_Unnamed1 = UInt;
alias PANGO_COVERAGE_NONE = UInt(0);
alias PANGO_COVERAGE_FALLBACK = UInt(1);
alias PANGO_COVERAGE_APPROXIMATE = UInt(2);
alias PANGO_COVERAGE_EXACT = UInt(3);

alias PangoCoverageLevel = UInt;

external (cdecl) pango_coverage_new() : Pointer[PangoCoverage];

external (cdecl) pango_coverage_ref(arg0:Pointer[PangoCoverage]) : Pointer[PangoCoverage];

external (cdecl) pango_coverage_unref(arg0:Pointer[PangoCoverage]) : ;

external (cdecl) pango_coverage_copy(arg0:Pointer[PangoCoverage]) : Pointer[PangoCoverage];

external (cdecl) pango_coverage_get(arg0:Pointer[PangoCoverage], arg1:Int) : PangoCoverageLevel;

external (cdecl) pango_coverage_set(arg0:Pointer[PangoCoverage], arg1:Int, arg2:PangoCoverageLevel) : ;

external (cdecl) pango_coverage_max(arg0:Pointer[PangoCoverage], arg1:Pointer[PangoCoverage]) : ;

external (cdecl) pango_coverage_to_bytes(arg0:Pointer[PangoCoverage], arg1:Pointer[Pointer[guchar]], arg2:Pointer[Int]) : ;

external (cdecl) pango_coverage_from_bytes(arg0:Pointer[guchar], arg1:Int) : Pointer[PangoCoverage];

alias PangoLogAttr = Struct__PangoLogAttr;

alias Struct__PangoEngineLang = Opaque;

alias PangoEngineLang = Struct__PangoEngineLang;

alias Struct__PangoEngineShape = Opaque;

alias PangoEngineShape = Struct__PangoEngineShape;

alias Struct__PangoFont = Opaque;

alias PangoFont = Struct__PangoFont;

alias Struct__PangoFontMap = Opaque;

alias PangoFontMap = Struct__PangoFontMap;

alias PangoRectangle = Struct__PangoRectangle;

alias PangoGlyph = guint32;

external (cdecl) pango_units_from_double(arg0:Double) : Int;

external (cdecl) pango_units_to_double(arg0:Int) : Double;

record Struct__PangoRectangle (
    x : Int,
    y : Int,
    width : Int,
    height : Int,
);

external (cdecl) pango_extents_to_pixels(arg0:Pointer[PangoRectangle], arg1:Pointer[PangoRectangle]) : ;

alias Enum_Unnamed2 = UInt;
alias PANGO_GRAVITY_SOUTH = UInt(0);
alias PANGO_GRAVITY_EAST = UInt(1);
alias PANGO_GRAVITY_NORTH = UInt(2);
alias PANGO_GRAVITY_WEST = UInt(3);
alias PANGO_GRAVITY_AUTO = UInt(4);

alias PangoGravity = UInt;

alias Enum_Unnamed3 = UInt;
alias PANGO_GRAVITY_HINT_NATURAL = UInt(0);
alias PANGO_GRAVITY_HINT_STRONG = UInt(1);
alias PANGO_GRAVITY_HINT_LINE = UInt(2);

alias PangoGravityHint = UInt;

alias PangoMatrix = Struct__PangoMatrix;

record Struct__PangoMatrix (
    xx : Double,
    xy : Double,
    yx : Double,
    yy : Double,
    x0 : Double,
    y0 : Double,
);

external (cdecl) pango_matrix_get_type() : GType;

external (cdecl) pango_matrix_copy(arg0:Pointer[PangoMatrix]) : Pointer[PangoMatrix];

external (cdecl) pango_matrix_free(arg0:Pointer[PangoMatrix]) : ;

external (cdecl) pango_matrix_translate(arg0:Pointer[PangoMatrix], arg1:Double, arg2:Double) : ;

external (cdecl) pango_matrix_scale(arg0:Pointer[PangoMatrix], arg1:Double, arg2:Double) : ;

external (cdecl) pango_matrix_rotate(arg0:Pointer[PangoMatrix], arg1:Double) : ;

external (cdecl) pango_matrix_concat(arg0:Pointer[PangoMatrix], arg1:Pointer[PangoMatrix]) : ;

external (cdecl) pango_matrix_transform_point(arg0:Pointer[PangoMatrix], arg1:Pointer[Double], arg2:Pointer[Double]) : ;

external (cdecl) pango_matrix_transform_distance(arg0:Pointer[PangoMatrix], arg1:Pointer[Double], arg2:Pointer[Double]) : ;

external (cdecl) pango_matrix_transform_rectangle(arg0:Pointer[PangoMatrix], arg1:Pointer[PangoRectangle]) : ;

external (cdecl) pango_matrix_transform_pixel_rectangle(arg0:Pointer[PangoMatrix], arg1:Pointer[PangoRectangle]) : ;

external (cdecl) pango_matrix_get_font_scale_factor(arg0:Pointer[PangoMatrix]) : Double;

alias Struct__PangoScriptIter = Opaque;

alias PangoScriptIter = Struct__PangoScriptIter;

alias Enum_Unnamed4 = Int;
alias PANGO_SCRIPT_INVALID_CODE = Int(-1);
alias PANGO_SCRIPT_COMMON = Int(0);
alias PANGO_SCRIPT_INHERITED = Int(1);
alias PANGO_SCRIPT_ARABIC = Int(2);
alias PANGO_SCRIPT_ARMENIAN = Int(3);
alias PANGO_SCRIPT_BENGALI = Int(4);
alias PANGO_SCRIPT_BOPOMOFO = Int(5);
alias PANGO_SCRIPT_CHEROKEE = Int(6);
alias PANGO_SCRIPT_COPTIC = Int(7);
alias PANGO_SCRIPT_CYRILLIC = Int(8);
alias PANGO_SCRIPT_DESERET = Int(9);
alias PANGO_SCRIPT_DEVANAGARI = Int(10);
alias PANGO_SCRIPT_ETHIOPIC = Int(11);
alias PANGO_SCRIPT_GEORGIAN = Int(12);
alias PANGO_SCRIPT_GOTHIC = Int(13);
alias PANGO_SCRIPT_GREEK = Int(14);
alias PANGO_SCRIPT_GUJARATI = Int(15);
alias PANGO_SCRIPT_GURMUKHI = Int(16);
alias PANGO_SCRIPT_HAN = Int(17);
alias PANGO_SCRIPT_HANGUL = Int(18);
alias PANGO_SCRIPT_HEBREW = Int(19);
alias PANGO_SCRIPT_HIRAGANA = Int(20);
alias PANGO_SCRIPT_KANNADA = Int(21);
alias PANGO_SCRIPT_KATAKANA = Int(22);
alias PANGO_SCRIPT_KHMER = Int(23);
alias PANGO_SCRIPT_LAO = Int(24);
alias PANGO_SCRIPT_LATIN = Int(25);
alias PANGO_SCRIPT_MALAYALAM = Int(26);
alias PANGO_SCRIPT_MONGOLIAN = Int(27);
alias PANGO_SCRIPT_MYANMAR = Int(28);
alias PANGO_SCRIPT_OGHAM = Int(29);
alias PANGO_SCRIPT_OLD_ITALIC = Int(30);
alias PANGO_SCRIPT_ORIYA = Int(31);
alias PANGO_SCRIPT_RUNIC = Int(32);
alias PANGO_SCRIPT_SINHALA = Int(33);
alias PANGO_SCRIPT_SYRIAC = Int(34);
alias PANGO_SCRIPT_TAMIL = Int(35);
alias PANGO_SCRIPT_TELUGU = Int(36);
alias PANGO_SCRIPT_THAANA = Int(37);
alias PANGO_SCRIPT_THAI = Int(38);
alias PANGO_SCRIPT_TIBETAN = Int(39);
alias PANGO_SCRIPT_CANADIAN_ABORIGINAL = Int(40);
alias PANGO_SCRIPT_YI = Int(41);
alias PANGO_SCRIPT_TAGALOG = Int(42);
alias PANGO_SCRIPT_HANUNOO = Int(43);
alias PANGO_SCRIPT_BUHID = Int(44);
alias PANGO_SCRIPT_TAGBANWA = Int(45);
alias PANGO_SCRIPT_BRAILLE = Int(46);
alias PANGO_SCRIPT_CYPRIOT = Int(47);
alias PANGO_SCRIPT_LIMBU = Int(48);
alias PANGO_SCRIPT_OSMANYA = Int(49);
alias PANGO_SCRIPT_SHAVIAN = Int(50);
alias PANGO_SCRIPT_LINEAR_B = Int(51);
alias PANGO_SCRIPT_TAI_LE = Int(52);
alias PANGO_SCRIPT_UGARITIC = Int(53);
alias PANGO_SCRIPT_NEW_TAI_LUE = Int(54);
alias PANGO_SCRIPT_BUGINESE = Int(55);
alias PANGO_SCRIPT_GLAGOLITIC = Int(56);
alias PANGO_SCRIPT_TIFINAGH = Int(57);
alias PANGO_SCRIPT_SYLOTI_NAGRI = Int(58);
alias PANGO_SCRIPT_OLD_PERSIAN = Int(59);
alias PANGO_SCRIPT_KHAROSHTHI = Int(60);
alias PANGO_SCRIPT_UNKNOWN = Int(61);
alias PANGO_SCRIPT_BALINESE = Int(62);
alias PANGO_SCRIPT_CUNEIFORM = Int(63);
alias PANGO_SCRIPT_PHOENICIAN = Int(64);
alias PANGO_SCRIPT_PHAGS_PA = Int(65);
alias PANGO_SCRIPT_NKO = Int(66);
alias PANGO_SCRIPT_KAYAH_LI = Int(67);
alias PANGO_SCRIPT_LEPCHA = Int(68);
alias PANGO_SCRIPT_REJANG = Int(69);
alias PANGO_SCRIPT_SUNDANESE = Int(70);
alias PANGO_SCRIPT_SAURASHTRA = Int(71);
alias PANGO_SCRIPT_CHAM = Int(72);
alias PANGO_SCRIPT_OL_CHIKI = Int(73);
alias PANGO_SCRIPT_VAI = Int(74);
alias PANGO_SCRIPT_CARIAN = Int(75);
alias PANGO_SCRIPT_LYCIAN = Int(76);
alias PANGO_SCRIPT_LYDIAN = Int(77);

alias PangoScript = Int;

external (cdecl) pango_script_for_unichar(arg0:gunichar) : PangoScript;

external (cdecl) pango_script_iter_new(arg0:Pointer[CChar], arg1:Int) : Pointer[PangoScriptIter];

external (cdecl) pango_script_iter_get_range(arg0:Pointer[PangoScriptIter], arg1:Pointer[Pointer[CChar]], arg2:Pointer[Pointer[CChar]], arg3:Pointer[PangoScript]) : ;

external (cdecl) pango_script_iter_next(arg0:Pointer[PangoScriptIter]) : gboolean;

external (cdecl) pango_script_iter_free(arg0:Pointer[PangoScriptIter]) : ;

alias Struct__PangoLanguage = Opaque;

alias PangoLanguage = Struct__PangoLanguage;

external (cdecl) pango_language_get_type() : GType;

external (cdecl) pango_language_from_string(arg0:Pointer[CChar]) : Pointer[PangoLanguage];

external (cdecl) pango_language_to_string(arg0:Pointer[PangoLanguage]) : Pointer[CChar];

external (cdecl) pango_language_get_sample_string(arg0:Pointer[PangoLanguage]) : Pointer[CChar];

external (cdecl) pango_language_get_default() : Pointer[PangoLanguage];

external (cdecl) pango_language_matches(arg0:Pointer[PangoLanguage], arg1:Pointer[CChar]) : gboolean;

external (cdecl) pango_language_includes_script(arg0:Pointer[PangoLanguage], arg1:PangoScript) : gboolean;

external (cdecl) pango_language_get_scripts(arg0:Pointer[PangoLanguage], arg1:Pointer[Int]) : Pointer[PangoScript];

external (cdecl) pango_script_get_sample_language(arg0:PangoScript) : Pointer[PangoLanguage];

external (cdecl) pango_gravity_to_rotation(arg0:PangoGravity) : Double;

external (cdecl) pango_gravity_get_for_matrix(arg0:Pointer[PangoMatrix]) : PangoGravity;

external (cdecl) pango_gravity_get_for_script(arg0:PangoScript, arg1:PangoGravity, arg2:PangoGravityHint) : PangoGravity;

external (cdecl) pango_gravity_get_for_script_and_width(arg0:PangoScript, arg1:gboolean, arg2:PangoGravity, arg3:PangoGravityHint) : PangoGravity;

alias Enum_Unnamed5 = UInt;
alias PANGO_BIDI_TYPE_L = UInt(0);
alias PANGO_BIDI_TYPE_LRE = UInt(1);
alias PANGO_BIDI_TYPE_LRO = UInt(2);
alias PANGO_BIDI_TYPE_R = UInt(3);
alias PANGO_BIDI_TYPE_AL = UInt(4);
alias PANGO_BIDI_TYPE_RLE = UInt(5);
alias PANGO_BIDI_TYPE_RLO = UInt(6);
alias PANGO_BIDI_TYPE_PDF = UInt(7);
alias PANGO_BIDI_TYPE_EN = UInt(8);
alias PANGO_BIDI_TYPE_ES = UInt(9);
alias PANGO_BIDI_TYPE_ET = UInt(10);
alias PANGO_BIDI_TYPE_AN = UInt(11);
alias PANGO_BIDI_TYPE_CS = UInt(12);
alias PANGO_BIDI_TYPE_NSM = UInt(13);
alias PANGO_BIDI_TYPE_BN = UInt(14);
alias PANGO_BIDI_TYPE_B = UInt(15);
alias PANGO_BIDI_TYPE_S = UInt(16);
alias PANGO_BIDI_TYPE_WS = UInt(17);
alias PANGO_BIDI_TYPE_ON = UInt(18);

alias PangoBidiType = UInt;

external (cdecl) pango_bidi_type_for_unichar(arg0:gunichar) : PangoBidiType;

alias Enum_Unnamed6 = UInt;
alias PANGO_DIRECTION_LTR = UInt(0);
alias PANGO_DIRECTION_RTL = UInt(1);
alias PANGO_DIRECTION_TTB_LTR = UInt(2);
alias PANGO_DIRECTION_TTB_RTL = UInt(3);
alias PANGO_DIRECTION_WEAK_LTR = UInt(4);
alias PANGO_DIRECTION_WEAK_RTL = UInt(5);
alias PANGO_DIRECTION_NEUTRAL = UInt(6);

alias PangoDirection = UInt;

external (cdecl) pango_unichar_direction(arg0:gunichar) : PangoDirection;

external (cdecl) pango_find_base_dir(arg0:Pointer[gchar], arg1:gint) : PangoDirection;

external (cdecl) pango_get_mirror_char(arg0:gunichar, arg1:Pointer[gunichar]) : gboolean;

alias Struct__PangoFontDescription = Opaque;

alias PangoFontDescription = Struct__PangoFontDescription;

alias Struct__PangoFontMetrics = Opaque;

alias PangoFontMetrics = Struct__PangoFontMetrics;

alias Enum_Unnamed7 = UInt;
alias PANGO_STYLE_NORMAL = UInt(0);
alias PANGO_STYLE_OBLIQUE = UInt(1);
alias PANGO_STYLE_ITALIC = UInt(2);

alias PangoStyle = UInt;

alias Enum_Unnamed8 = UInt;
alias PANGO_VARIANT_NORMAL = UInt(0);
alias PANGO_VARIANT_SMALL_CAPS = UInt(1);

alias PangoVariant = UInt;

alias Enum_Unnamed9 = UInt;
alias PANGO_WEIGHT_THIN = UInt(100);
alias PANGO_WEIGHT_ULTRALIGHT = UInt(200);
alias PANGO_WEIGHT_LIGHT = UInt(300);
alias PANGO_WEIGHT_BOOK = UInt(380);
alias PANGO_WEIGHT_NORMAL = UInt(400);
alias PANGO_WEIGHT_MEDIUM = UInt(500);
alias PANGO_WEIGHT_SEMIBOLD = UInt(600);
alias PANGO_WEIGHT_BOLD = UInt(700);
alias PANGO_WEIGHT_ULTRABOLD = UInt(800);
alias PANGO_WEIGHT_HEAVY = UInt(900);
alias PANGO_WEIGHT_ULTRAHEAVY = UInt(1000);

alias PangoWeight = UInt;

alias Enum_Unnamed10 = UInt;
alias PANGO_STRETCH_ULTRA_CONDENSED = UInt(0);
alias PANGO_STRETCH_EXTRA_CONDENSED = UInt(1);
alias PANGO_STRETCH_CONDENSED = UInt(2);
alias PANGO_STRETCH_SEMI_CONDENSED = UInt(3);
alias PANGO_STRETCH_NORMAL = UInt(4);
alias PANGO_STRETCH_SEMI_EXPANDED = UInt(5);
alias PANGO_STRETCH_EXPANDED = UInt(6);
alias PANGO_STRETCH_EXTRA_EXPANDED = UInt(7);
alias PANGO_STRETCH_ULTRA_EXPANDED = UInt(8);

alias PangoStretch = UInt;

alias Enum_Unnamed11 = UInt;
alias PANGO_FONT_MASK_FAMILY = UInt(1);
alias PANGO_FONT_MASK_STYLE = UInt(2);
alias PANGO_FONT_MASK_VARIANT = UInt(4);
alias PANGO_FONT_MASK_WEIGHT = UInt(8);
alias PANGO_FONT_MASK_STRETCH = UInt(16);
alias PANGO_FONT_MASK_SIZE = UInt(32);
alias PANGO_FONT_MASK_GRAVITY = UInt(64);

alias PangoFontMask = UInt;

external (cdecl) pango_font_description_get_type() : GType;

external (cdecl) pango_font_description_new() : Pointer[PangoFontDescription];

external (cdecl) pango_font_description_copy(arg0:Pointer[PangoFontDescription]) : Pointer[PangoFontDescription];

external (cdecl) pango_font_description_copy_static(arg0:Pointer[PangoFontDescription]) : Pointer[PangoFontDescription];

external (cdecl) pango_font_description_hash(arg0:Pointer[PangoFontDescription]) : guint;

external (cdecl) pango_font_description_equal(arg0:Pointer[PangoFontDescription], arg1:Pointer[PangoFontDescription]) : gboolean;

external (cdecl) pango_font_description_free(arg0:Pointer[PangoFontDescription]) : ;

external (cdecl) pango_font_descriptions_free(arg0:Pointer[Pointer[PangoFontDescription]], arg1:Int) : ;

external (cdecl) pango_font_description_set_family(arg0:Pointer[PangoFontDescription], arg1:Pointer[CChar]) : ;

external (cdecl) pango_font_description_set_family_static(arg0:Pointer[PangoFontDescription], arg1:Pointer[CChar]) : ;

external (cdecl) pango_font_description_get_family(arg0:Pointer[PangoFontDescription]) : Pointer[CChar];

external (cdecl) pango_font_description_set_style(arg0:Pointer[PangoFontDescription], arg1:PangoStyle) : ;

external (cdecl) pango_font_description_get_style(arg0:Pointer[PangoFontDescription]) : PangoStyle;

external (cdecl) pango_font_description_set_variant(arg0:Pointer[PangoFontDescription], arg1:PangoVariant) : ;

external (cdecl) pango_font_description_get_variant(arg0:Pointer[PangoFontDescription]) : PangoVariant;

external (cdecl) pango_font_description_set_weight(arg0:Pointer[PangoFontDescription], arg1:PangoWeight) : ;

external (cdecl) pango_font_description_get_weight(arg0:Pointer[PangoFontDescription]) : PangoWeight;

external (cdecl) pango_font_description_set_stretch(arg0:Pointer[PangoFontDescription], arg1:PangoStretch) : ;

external (cdecl) pango_font_description_get_stretch(arg0:Pointer[PangoFontDescription]) : PangoStretch;

external (cdecl) pango_font_description_set_size(arg0:Pointer[PangoFontDescription], arg1:gint) : ;

external (cdecl) pango_font_description_get_size(arg0:Pointer[PangoFontDescription]) : gint;

external (cdecl) pango_font_description_set_absolute_size(arg0:Pointer[PangoFontDescription], arg1:Double) : ;

external (cdecl) pango_font_description_get_size_is_absolute(arg0:Pointer[PangoFontDescription]) : gboolean;

external (cdecl) pango_font_description_set_gravity(arg0:Pointer[PangoFontDescription], arg1:PangoGravity) : ;

external (cdecl) pango_font_description_get_gravity(arg0:Pointer[PangoFontDescription]) : PangoGravity;

external (cdecl) pango_font_description_get_set_fields(arg0:Pointer[PangoFontDescription]) : PangoFontMask;

external (cdecl) pango_font_description_unset_fields(arg0:Pointer[PangoFontDescription], arg1:PangoFontMask) : ;

external (cdecl) pango_font_description_merge(arg0:Pointer[PangoFontDescription], arg1:Pointer[PangoFontDescription], arg2:gboolean) : ;

external (cdecl) pango_font_description_merge_static(arg0:Pointer[PangoFontDescription], arg1:Pointer[PangoFontDescription], arg2:gboolean) : ;

external (cdecl) pango_font_description_better_match(arg0:Pointer[PangoFontDescription], arg1:Pointer[PangoFontDescription], arg2:Pointer[PangoFontDescription]) : gboolean;

external (cdecl) pango_font_description_from_string(arg0:Pointer[CChar]) : Pointer[PangoFontDescription];

external (cdecl) pango_font_description_to_string(arg0:Pointer[PangoFontDescription]) : Pointer[CChar];

external (cdecl) pango_font_description_to_filename(arg0:Pointer[PangoFontDescription]) : Pointer[CChar];

external (cdecl) pango_font_metrics_get_type() : GType;

external (cdecl) pango_font_metrics_ref(arg0:Pointer[PangoFontMetrics]) : Pointer[PangoFontMetrics];

external (cdecl) pango_font_metrics_unref(arg0:Pointer[PangoFontMetrics]) : ;

external (cdecl) pango_font_metrics_get_ascent(arg0:Pointer[PangoFontMetrics]) : Int;

external (cdecl) pango_font_metrics_get_descent(arg0:Pointer[PangoFontMetrics]) : Int;

external (cdecl) pango_font_metrics_get_approximate_char_width(arg0:Pointer[PangoFontMetrics]) : Int;

external (cdecl) pango_font_metrics_get_approximate_digit_width(arg0:Pointer[PangoFontMetrics]) : Int;

external (cdecl) pango_font_metrics_get_underline_position(arg0:Pointer[PangoFontMetrics]) : Int;

external (cdecl) pango_font_metrics_get_underline_thickness(arg0:Pointer[PangoFontMetrics]) : Int;

external (cdecl) pango_font_metrics_get_strikethrough_position(arg0:Pointer[PangoFontMetrics]) : Int;

external (cdecl) pango_font_metrics_get_strikethrough_thickness(arg0:Pointer[PangoFontMetrics]) : Int;

alias Struct__PangoFontFamily = Opaque;

alias PangoFontFamily = Struct__PangoFontFamily;

alias Struct__PangoFontFace = Opaque;

alias PangoFontFace = Struct__PangoFontFace;

external (cdecl) pango_font_family_get_type() : GType;

external (cdecl) pango_font_family_list_faces(arg0:Pointer[PangoFontFamily], arg1:Pointer[Pointer[Pointer[PangoFontFace]]], arg2:Pointer[Int]) : ;

external (cdecl) pango_font_family_get_name(arg0:Pointer[PangoFontFamily]) : Pointer[CChar];

external (cdecl) pango_font_family_is_monospace(arg0:Pointer[PangoFontFamily]) : gboolean;

external (cdecl) pango_font_face_get_type() : GType;

external (cdecl) pango_font_face_describe(arg0:Pointer[PangoFontFace]) : Pointer[PangoFontDescription];

external (cdecl) pango_font_face_get_face_name(arg0:Pointer[PangoFontFace]) : Pointer[CChar];

external (cdecl) pango_font_face_list_sizes(arg0:Pointer[PangoFontFace], arg1:Pointer[Pointer[Int]], arg2:Pointer[Int]) : ;

external (cdecl) pango_font_face_is_synthesized(arg0:Pointer[PangoFontFace]) : gboolean;

external (cdecl) pango_font_get_type() : GType;

external (cdecl) pango_font_describe(arg0:Pointer[PangoFont]) : Pointer[PangoFontDescription];

external (cdecl) pango_font_describe_with_absolute_size(arg0:Pointer[PangoFont]) : Pointer[PangoFontDescription];

external (cdecl) pango_font_get_coverage(arg0:Pointer[PangoFont], arg1:Pointer[PangoLanguage]) : Pointer[PangoCoverage];

external (cdecl) pango_font_find_shaper(arg0:Pointer[PangoFont], arg1:Pointer[PangoLanguage], arg2:guint32) : Pointer[PangoEngineShape];

external (cdecl) pango_font_get_metrics(arg0:Pointer[PangoFont], arg1:Pointer[PangoLanguage]) : Pointer[PangoFontMetrics];

external (cdecl) pango_font_get_glyph_extents(arg0:Pointer[PangoFont], arg1:PangoGlyph, arg2:Pointer[PangoRectangle], arg3:Pointer[PangoRectangle]) : ;

external (cdecl) pango_font_get_font_map(arg0:Pointer[PangoFont]) : Pointer[PangoFontMap];

alias PangoColor = Struct__PangoColor;

record Struct__PangoColor (
    red : guint16,
    green : guint16,
    blue : guint16,
);

external (cdecl) pango_color_get_type() : GType;

external (cdecl) pango_color_copy(arg0:Pointer[PangoColor]) : Pointer[PangoColor];

external (cdecl) pango_color_free(arg0:Pointer[PangoColor]) : ;

external (cdecl) pango_color_parse(arg0:Pointer[PangoColor], arg1:Pointer[CChar]) : gboolean;

external (cdecl) pango_color_to_string(arg0:Pointer[PangoColor]) : Pointer[gchar];

alias PangoAttribute = Struct__PangoAttribute;

alias PangoAttrClass = Struct__PangoAttrClass;

alias PangoAttrString = Struct__PangoAttrString;

alias PangoAttrLanguage = Struct__PangoAttrLanguage;

alias PangoAttrInt = Struct__PangoAttrInt;

alias PangoAttrSize = Struct__PangoAttrSize;

alias PangoAttrFloat = Struct__PangoAttrFloat;

alias PangoAttrColor = Struct__PangoAttrColor;

alias PangoAttrFontDesc = Struct__PangoAttrFontDesc;

alias PangoAttrShape = Struct__PangoAttrShape;

alias Struct__PangoAttrList = Opaque;

alias PangoAttrList = Struct__PangoAttrList;

alias Struct__PangoAttrIterator = Opaque;

alias PangoAttrIterator = Struct__PangoAttrIterator;

alias Enum_Unnamed12 = UInt;
alias PANGO_ATTR_INVALID = UInt(0);
alias PANGO_ATTR_LANGUAGE = UInt(1);
alias PANGO_ATTR_FAMILY = UInt(2);
alias PANGO_ATTR_STYLE = UInt(3);
alias PANGO_ATTR_WEIGHT = UInt(4);
alias PANGO_ATTR_VARIANT = UInt(5);
alias PANGO_ATTR_STRETCH = UInt(6);
alias PANGO_ATTR_SIZE = UInt(7);
alias PANGO_ATTR_FONT_DESC = UInt(8);
alias PANGO_ATTR_FOREGROUND = UInt(9);
alias PANGO_ATTR_BACKGROUND = UInt(10);
alias PANGO_ATTR_UNDERLINE = UInt(11);
alias PANGO_ATTR_STRIKETHROUGH = UInt(12);
alias PANGO_ATTR_RISE = UInt(13);
alias PANGO_ATTR_SHAPE = UInt(14);
alias PANGO_ATTR_SCALE = UInt(15);
alias PANGO_ATTR_FALLBACK = UInt(16);
alias PANGO_ATTR_LETTER_SPACING = UInt(17);
alias PANGO_ATTR_UNDERLINE_COLOR = UInt(18);
alias PANGO_ATTR_STRIKETHROUGH_COLOR = UInt(19);
alias PANGO_ATTR_ABSOLUTE_SIZE = UInt(20);
alias PANGO_ATTR_GRAVITY = UInt(21);
alias PANGO_ATTR_GRAVITY_HINT = UInt(22);

alias PangoAttrType = UInt;

alias Enum_Unnamed13 = UInt;
alias PANGO_UNDERLINE_NONE = UInt(0);
alias PANGO_UNDERLINE_SINGLE = UInt(1);
alias PANGO_UNDERLINE_DOUBLE = UInt(2);
alias PANGO_UNDERLINE_LOW = UInt(3);
alias PANGO_UNDERLINE_ERROR = UInt(4);

alias PangoUnderline = UInt;

record Struct__PangoAttribute (
    klass : Pointer[PangoAttrClass],
    start_index : guint,
    end_index : guint,
);

alias PangoAttrFilterFunc = CCodePointer[[Pointer[PangoAttribute], gpointer],[gboolean]];

alias PangoAttrDataCopyFunc = CCodePointer[[gconstpointer],[gpointer]];

record Struct__PangoAttrClass (
    type : PangoAttrType,
    copy : CCodePointer[[Pointer[PangoAttribute]],[Pointer[PangoAttribute]]],
    destroy : CCodePointer[[Pointer[PangoAttribute]],[]],
    equal : CCodePointer[[Pointer[PangoAttribute], Pointer[PangoAttribute]],[gboolean]],
);

record Struct__PangoAttrString (
    attr : PangoAttribute,
    value : Pointer[CChar],
);

record Struct__PangoAttrLanguage (
    attr : PangoAttribute,
    value : Pointer[PangoLanguage],
);

record Struct__PangoAttrInt (
    attr : PangoAttribute,
    value : Int,
);

record Struct__PangoAttrFloat (
    attr : PangoAttribute,
    value : Double,
);

record Struct__PangoAttrColor (
    attr : PangoAttribute,
    color : PangoColor,
);

record Struct__PangoAttrSize (
    attr : PangoAttribute,
    size : Int,
    absolute : guint,
);

record Struct__PangoAttrShape (
    attr : PangoAttribute,
    ink_rect : PangoRectangle,
    logical_rect : PangoRectangle,
    data : gpointer,
    copy_func : PangoAttrDataCopyFunc,
    destroy_func : GDestroyNotify,
);

record Struct__PangoAttrFontDesc (
    attr : PangoAttribute,
    desc : Pointer[PangoFontDescription],
);

external (cdecl) pango_attr_type_register(arg0:Pointer[gchar]) : PangoAttrType;

external (cdecl) pango_attr_type_get_name(arg0:PangoAttrType) : Pointer[CChar];

external (cdecl) pango_attribute_init(arg0:Pointer[PangoAttribute], arg1:Pointer[PangoAttrClass]) : ;

external (cdecl) pango_attribute_copy(arg0:Pointer[PangoAttribute]) : Pointer[PangoAttribute];

external (cdecl) pango_attribute_destroy(arg0:Pointer[PangoAttribute]) : ;

external (cdecl) pango_attribute_equal(arg0:Pointer[PangoAttribute], arg1:Pointer[PangoAttribute]) : gboolean;

external (cdecl) pango_attr_language_new(arg0:Pointer[PangoLanguage]) : Pointer[PangoAttribute];

external (cdecl) pango_attr_family_new(arg0:Pointer[CChar]) : Pointer[PangoAttribute];

external (cdecl) pango_attr_foreground_new(arg0:guint16, arg1:guint16, arg2:guint16) : Pointer[PangoAttribute];

external (cdecl) pango_attr_background_new(arg0:guint16, arg1:guint16, arg2:guint16) : Pointer[PangoAttribute];

external (cdecl) pango_attr_size_new(arg0:Int) : Pointer[PangoAttribute];

external (cdecl) pango_attr_size_new_absolute(arg0:Int) : Pointer[PangoAttribute];

external (cdecl) pango_attr_style_new(arg0:PangoStyle) : Pointer[PangoAttribute];

external (cdecl) pango_attr_weight_new(arg0:PangoWeight) : Pointer[PangoAttribute];

external (cdecl) pango_attr_variant_new(arg0:PangoVariant) : Pointer[PangoAttribute];

external (cdecl) pango_attr_stretch_new(arg0:PangoStretch) : Pointer[PangoAttribute];

external (cdecl) pango_attr_font_desc_new(arg0:Pointer[PangoFontDescription]) : Pointer[PangoAttribute];

external (cdecl) pango_attr_underline_new(arg0:PangoUnderline) : Pointer[PangoAttribute];

external (cdecl) pango_attr_underline_color_new(arg0:guint16, arg1:guint16, arg2:guint16) : Pointer[PangoAttribute];

external (cdecl) pango_attr_strikethrough_new(arg0:gboolean) : Pointer[PangoAttribute];

external (cdecl) pango_attr_strikethrough_color_new(arg0:guint16, arg1:guint16, arg2:guint16) : Pointer[PangoAttribute];

external (cdecl) pango_attr_rise_new(arg0:Int) : Pointer[PangoAttribute];

external (cdecl) pango_attr_scale_new(arg0:Double) : Pointer[PangoAttribute];

external (cdecl) pango_attr_fallback_new(arg0:gboolean) : Pointer[PangoAttribute];

external (cdecl) pango_attr_letter_spacing_new(arg0:Int) : Pointer[PangoAttribute];

external (cdecl) pango_attr_shape_new(arg0:Pointer[PangoRectangle], arg1:Pointer[PangoRectangle]) : Pointer[PangoAttribute];

external (cdecl) pango_attr_shape_new_with_data(arg0:Pointer[PangoRectangle], arg1:Pointer[PangoRectangle], arg2:gpointer, arg3:PangoAttrDataCopyFunc, arg4:GDestroyNotify) : Pointer[PangoAttribute];

external (cdecl) pango_attr_gravity_new(arg0:PangoGravity) : Pointer[PangoAttribute];

external (cdecl) pango_attr_gravity_hint_new(arg0:PangoGravityHint) : Pointer[PangoAttribute];

external (cdecl) pango_attr_list_get_type() : GType;

external (cdecl) pango_attr_list_new() : Pointer[PangoAttrList];

external (cdecl) pango_attr_list_ref(arg0:Pointer[PangoAttrList]) : Pointer[PangoAttrList];

external (cdecl) pango_attr_list_unref(arg0:Pointer[PangoAttrList]) : ;

external (cdecl) pango_attr_list_copy(arg0:Pointer[PangoAttrList]) : Pointer[PangoAttrList];

external (cdecl) pango_attr_list_insert(arg0:Pointer[PangoAttrList], arg1:Pointer[PangoAttribute]) : ;

external (cdecl) pango_attr_list_insert_before(arg0:Pointer[PangoAttrList], arg1:Pointer[PangoAttribute]) : ;

external (cdecl) pango_attr_list_change(arg0:Pointer[PangoAttrList], arg1:Pointer[PangoAttribute]) : ;

external (cdecl) pango_attr_list_splice(arg0:Pointer[PangoAttrList], arg1:Pointer[PangoAttrList], arg2:gint, arg3:gint) : ;

external (cdecl) pango_attr_list_filter(arg0:Pointer[PangoAttrList], arg1:PangoAttrFilterFunc, arg2:gpointer) : Pointer[PangoAttrList];

external (cdecl) pango_attr_list_get_iterator(arg0:Pointer[PangoAttrList]) : Pointer[PangoAttrIterator];

external (cdecl) pango_attr_iterator_range(arg0:Pointer[PangoAttrIterator], arg1:Pointer[gint], arg2:Pointer[gint]) : ;

external (cdecl) pango_attr_iterator_next(arg0:Pointer[PangoAttrIterator]) : gboolean;

external (cdecl) pango_attr_iterator_copy(arg0:Pointer[PangoAttrIterator]) : Pointer[PangoAttrIterator];

external (cdecl) pango_attr_iterator_destroy(arg0:Pointer[PangoAttrIterator]) : ;

external (cdecl) pango_attr_iterator_get(arg0:Pointer[PangoAttrIterator], arg1:PangoAttrType) : Pointer[PangoAttribute];

external (cdecl) pango_attr_iterator_get_font(arg0:Pointer[PangoAttrIterator], arg1:Pointer[PangoFontDescription], arg2:Pointer[Pointer[PangoLanguage]], arg3:Pointer[Pointer[GSList]]) : ;

external (cdecl) pango_attr_iterator_get_attrs(arg0:Pointer[PangoAttrIterator]) : Pointer[GSList];

external (cdecl) pango_parse_markup(arg0:Pointer[CChar], arg1:Int, arg2:gunichar, arg3:Pointer[Pointer[PangoAttrList]], arg4:Pointer[Pointer[CChar]], arg5:Pointer[gunichar], arg6:Pointer[Pointer[GError]]) : gboolean;

alias PangoAnalysis = Struct__PangoAnalysis;

alias PangoItem = Struct__PangoItem;

record Struct__PangoAnalysis (
    shape_engine : Pointer[PangoEngineShape],
    lang_engine : Pointer[PangoEngineLang],
    font : Pointer[PangoFont],
    level : guint8,
    gravity : guint8,
    flags : guint8,
    script : guint8,
    language : Pointer[PangoLanguage],
    extra_attrs : Pointer[GSList],
);

record Struct__PangoItem (
    offset : gint,
    length : gint,
    num_chars : gint,
    analysis : PangoAnalysis,
);

external (cdecl) pango_item_get_type() : GType;

external (cdecl) pango_item_new() : Pointer[PangoItem];

external (cdecl) pango_item_copy(arg0:Pointer[PangoItem]) : Pointer[PangoItem];

external (cdecl) pango_item_free(arg0:Pointer[PangoItem]) : ;

external (cdecl) pango_item_split(arg0:Pointer[PangoItem], arg1:Int, arg2:Int) : Pointer[PangoItem];

record Struct__PangoLogAttr (
    is_line_break : guint,
    is_mandatory_break : guint,
    is_char_break : guint,
    is_white : guint,
    is_cursor_position : guint,
    is_word_start : guint,
    is_word_end : guint,
    is_sentence_boundary : guint,
    is_sentence_start : guint,
    is_sentence_end : guint,
    backspace_deletes_character : guint,
    is_expandable_space : guint,
    is_word_boundary : guint,
);

external (cdecl) pango_break(arg0:Pointer[gchar], arg1:Int, arg2:Pointer[PangoAnalysis], arg3:Pointer[PangoLogAttr], arg4:Int) : ;

external (cdecl) pango_find_paragraph_boundary(arg0:Pointer[gchar], arg1:gint, arg2:Pointer[gint], arg3:Pointer[gint]) : ;

external (cdecl) pango_get_log_attrs(arg0:Pointer[CChar], arg1:Int, arg2:Int, arg3:Pointer[PangoLanguage], arg4:Pointer[PangoLogAttr], arg5:Int) : ;

external (cdecl) pango_fontset_get_type() : GType;

alias Struct__PangoFontset = Opaque;

alias PangoFontset = Struct__PangoFontset;

alias PangoFontsetForeachFunc = CCodePointer[[Pointer[PangoFontset], Pointer[PangoFont], gpointer],[gboolean]];

external (cdecl) pango_fontset_get_font(arg0:Pointer[PangoFontset], arg1:guint) : Pointer[PangoFont];

external (cdecl) pango_fontset_get_metrics(arg0:Pointer[PangoFontset]) : Pointer[PangoFontMetrics];

external (cdecl) pango_fontset_foreach(arg0:Pointer[PangoFontset], arg1:PangoFontsetForeachFunc, arg2:gpointer) : ;

alias Struct__PangoContext = Opaque;

alias PangoContext = Struct__PangoContext;

external (cdecl) pango_font_map_get_type() : GType;

external (cdecl) pango_font_map_create_context(arg0:Pointer[PangoFontMap]) : Pointer[PangoContext];

external (cdecl) pango_font_map_load_font(arg0:Pointer[PangoFontMap], arg1:Pointer[PangoContext], arg2:Pointer[PangoFontDescription]) : Pointer[PangoFont];

external (cdecl) pango_font_map_load_fontset(arg0:Pointer[PangoFontMap], arg1:Pointer[PangoContext], arg2:Pointer[PangoFontDescription], arg3:Pointer[PangoLanguage]) : Pointer[PangoFontset];

external (cdecl) pango_font_map_list_families(arg0:Pointer[PangoFontMap], arg1:Pointer[Pointer[Pointer[PangoFontFamily]]], arg2:Pointer[Int]) : ;

alias Struct__PangoContextClass = Opaque;

alias PangoContextClass = Struct__PangoContextClass;

external (cdecl) pango_context_get_type() : GType;

external (cdecl) pango_context_new() : Pointer[PangoContext];

external (cdecl) pango_context_set_font_map(arg0:Pointer[PangoContext], arg1:Pointer[PangoFontMap]) : ;

external (cdecl) pango_context_get_font_map(arg0:Pointer[PangoContext]) : Pointer[PangoFontMap];

external (cdecl) pango_context_list_families(arg0:Pointer[PangoContext], arg1:Pointer[Pointer[Pointer[PangoFontFamily]]], arg2:Pointer[Int]) : ;

external (cdecl) pango_context_load_font(arg0:Pointer[PangoContext], arg1:Pointer[PangoFontDescription]) : Pointer[PangoFont];

external (cdecl) pango_context_load_fontset(arg0:Pointer[PangoContext], arg1:Pointer[PangoFontDescription], arg2:Pointer[PangoLanguage]) : Pointer[PangoFontset];

external (cdecl) pango_context_get_metrics(arg0:Pointer[PangoContext], arg1:Pointer[PangoFontDescription], arg2:Pointer[PangoLanguage]) : Pointer[PangoFontMetrics];

external (cdecl) pango_context_set_font_description(arg0:Pointer[PangoContext], arg1:Pointer[PangoFontDescription]) : ;

external (cdecl) pango_context_get_font_description(arg0:Pointer[PangoContext]) : Pointer[PangoFontDescription];

external (cdecl) pango_context_get_language(arg0:Pointer[PangoContext]) : Pointer[PangoLanguage];

external (cdecl) pango_context_set_language(arg0:Pointer[PangoContext], arg1:Pointer[PangoLanguage]) : ;

external (cdecl) pango_context_set_base_dir(arg0:Pointer[PangoContext], arg1:PangoDirection) : ;

external (cdecl) pango_context_get_base_dir(arg0:Pointer[PangoContext]) : PangoDirection;

external (cdecl) pango_context_set_base_gravity(arg0:Pointer[PangoContext], arg1:PangoGravity) : ;

external (cdecl) pango_context_get_base_gravity(arg0:Pointer[PangoContext]) : PangoGravity;

external (cdecl) pango_context_get_gravity(arg0:Pointer[PangoContext]) : PangoGravity;

external (cdecl) pango_context_set_gravity_hint(arg0:Pointer[PangoContext], arg1:PangoGravityHint) : ;

external (cdecl) pango_context_get_gravity_hint(arg0:Pointer[PangoContext]) : PangoGravityHint;

external (cdecl) pango_context_set_matrix(arg0:Pointer[PangoContext], arg1:Pointer[PangoMatrix]) : ;

external (cdecl) pango_context_get_matrix(arg0:Pointer[PangoContext]) : Pointer[PangoMatrix];

external (cdecl) pango_itemize(arg0:Pointer[PangoContext], arg1:Pointer[CChar], arg2:Int, arg3:Int, arg4:Pointer[PangoAttrList], arg5:Pointer[PangoAttrIterator]) : Pointer[GList];

external (cdecl) pango_itemize_with_base_dir(arg0:Pointer[PangoContext], arg1:PangoDirection, arg2:Pointer[CChar], arg3:Int, arg4:Int, arg5:Pointer[PangoAttrList], arg6:Pointer[PangoAttrIterator]) : Pointer[GList];

alias PangoGlyphGeometry = Struct__PangoGlyphGeometry;

alias PangoGlyphVisAttr = Struct__PangoGlyphVisAttr;

alias PangoGlyphInfo = Struct__PangoGlyphInfo;

alias PangoGlyphString = Struct__PangoGlyphString;

alias PangoGlyphUnit = gint32;

record Struct__PangoGlyphGeometry (
    width : PangoGlyphUnit,
    x_offset : PangoGlyphUnit,
    y_offset : PangoGlyphUnit,
);

record Struct__PangoGlyphVisAttr (
    is_cluster_start : guint,
);

record Struct__PangoGlyphInfo (
    glyph : PangoGlyph,
    geometry : PangoGlyphGeometry,
    attr : PangoGlyphVisAttr,
);

record Struct__PangoGlyphString (
    num_glyphs : gint,
    glyphs : Pointer[PangoGlyphInfo],
    log_clusters : Pointer[gint],
    space : gint,
);

external (cdecl) pango_glyph_string_new() : Pointer[PangoGlyphString];

external (cdecl) pango_glyph_string_set_size(arg0:Pointer[PangoGlyphString], arg1:gint) : ;

external (cdecl) pango_glyph_string_get_type() : GType;

external (cdecl) pango_glyph_string_copy(arg0:Pointer[PangoGlyphString]) : Pointer[PangoGlyphString];

external (cdecl) pango_glyph_string_free(arg0:Pointer[PangoGlyphString]) : ;

external (cdecl) pango_glyph_string_extents(arg0:Pointer[PangoGlyphString], arg1:Pointer[PangoFont], arg2:Pointer[PangoRectangle], arg3:Pointer[PangoRectangle]) : ;

external (cdecl) pango_glyph_string_get_width(arg0:Pointer[PangoGlyphString]) : Int;

external (cdecl) pango_glyph_string_extents_range(arg0:Pointer[PangoGlyphString], arg1:Int, arg2:Int, arg3:Pointer[PangoFont], arg4:Pointer[PangoRectangle], arg5:Pointer[PangoRectangle]) : ;

external (cdecl) pango_glyph_string_get_logical_widths(arg0:Pointer[PangoGlyphString], arg1:Pointer[CChar], arg2:Int, arg3:Int, arg4:Pointer[Int]) : ;

external (cdecl) pango_glyph_string_index_to_x(arg0:Pointer[PangoGlyphString], arg1:Pointer[CChar], arg2:Int, arg3:Pointer[PangoAnalysis], arg4:Int, arg5:gboolean, arg6:Pointer[Int]) : ;

external (cdecl) pango_glyph_string_x_to_index(arg0:Pointer[PangoGlyphString], arg1:Pointer[CChar], arg2:Int, arg3:Pointer[PangoAnalysis], arg4:Int, arg5:Pointer[Int], arg6:Pointer[Int]) : ;

external (cdecl) pango_shape(arg0:Pointer[gchar], arg1:gint, arg2:Pointer[PangoAnalysis], arg3:Pointer[PangoGlyphString]) : ;

external (cdecl) pango_reorder_items(arg0:Pointer[GList]) : Pointer[GList];

external (cdecl) pango_attr_type_get_type() : GType;

external (cdecl) pango_underline_get_type() : GType;

external (cdecl) pango_bidi_type_get_type() : GType;

external (cdecl) pango_direction_get_type() : GType;

external (cdecl) pango_coverage_level_get_type() : GType;

external (cdecl) pango_style_get_type() : GType;

external (cdecl) pango_variant_get_type() : GType;

external (cdecl) pango_weight_get_type() : GType;

external (cdecl) pango_stretch_get_type() : GType;

external (cdecl) pango_font_mask_get_type() : GType;

external (cdecl) pango_gravity_get_type() : GType;

external (cdecl) pango_gravity_hint_get_type() : GType;

external (cdecl) pango_alignment_get_type() : GType;

external (cdecl) pango_wrap_mode_get_type() : GType;

external (cdecl) pango_ellipsize_mode_get_type() : GType;

external (cdecl) pango_render_part_get_type() : GType;

external (cdecl) pango_script_get_type() : GType;

external (cdecl) pango_tab_align_get_type() : GType;

alias PangoGlyphItem = Struct__PangoGlyphItem;

record Struct__PangoGlyphItem (
    item : Pointer[PangoItem],
    glyphs : Pointer[PangoGlyphString],
);

external (cdecl) pango_glyph_item_get_type() : GType;

external (cdecl) pango_glyph_item_split(arg0:Pointer[PangoGlyphItem], arg1:Pointer[CChar], arg2:Int) : Pointer[PangoGlyphItem];

external (cdecl) pango_glyph_item_copy(arg0:Pointer[PangoGlyphItem]) : Pointer[PangoGlyphItem];

external (cdecl) pango_glyph_item_free(arg0:Pointer[PangoGlyphItem]) : ;

external (cdecl) pango_glyph_item_apply_attrs(arg0:Pointer[PangoGlyphItem], arg1:Pointer[CChar], arg2:Pointer[PangoAttrList]) : Pointer[GSList];

external (cdecl) pango_glyph_item_letter_space(arg0:Pointer[PangoGlyphItem], arg1:Pointer[CChar], arg2:Pointer[PangoLogAttr], arg3:Int) : ;

external (cdecl) pango_glyph_item_get_logical_widths(arg0:Pointer[PangoGlyphItem], arg1:Pointer[CChar], arg2:Pointer[Int]) : ;

alias PangoGlyphItemIter = Struct__PangoGlyphItemIter;

record Struct__PangoGlyphItemIter (
    glyph_item : Pointer[PangoGlyphItem],
    text : Pointer[gchar],
    start_glyph : Int,
    start_index : Int,
    start_char : Int,
    end_glyph : Int,
    end_index : Int,
    end_char : Int,
);

external (cdecl) pango_glyph_item_iter_get_type() : GType;

external (cdecl) pango_glyph_item_iter_copy(arg0:Pointer[PangoGlyphItemIter]) : Pointer[PangoGlyphItemIter];

external (cdecl) pango_glyph_item_iter_free(arg0:Pointer[PangoGlyphItemIter]) : ;

external (cdecl) pango_glyph_item_iter_init_start(arg0:Pointer[PangoGlyphItemIter], arg1:Pointer[PangoGlyphItem], arg2:Pointer[CChar]) : gboolean;

external (cdecl) pango_glyph_item_iter_init_end(arg0:Pointer[PangoGlyphItemIter], arg1:Pointer[PangoGlyphItem], arg2:Pointer[CChar]) : gboolean;

external (cdecl) pango_glyph_item_iter_next_cluster(arg0:Pointer[PangoGlyphItemIter]) : gboolean;

external (cdecl) pango_glyph_item_iter_prev_cluster(arg0:Pointer[PangoGlyphItemIter]) : gboolean;

alias Struct__PangoTabArray = Opaque;

alias PangoTabArray = Struct__PangoTabArray;

alias Enum_Unnamed14 = UInt;
alias PANGO_TAB_LEFT = UInt(0);

alias PangoTabAlign = UInt;

external (cdecl) pango_tab_array_new(arg0:gint, arg1:gboolean) : Pointer[PangoTabArray];

external (cdecl) pango_tab_array_new_with_positions(arg0:gint, arg1:gboolean, arg2:PangoTabAlign, arg3:gint, ..) : Pointer[PangoTabArray];

external (cdecl) pango_tab_array_get_type() : GType;

external (cdecl) pango_tab_array_copy(arg0:Pointer[PangoTabArray]) : Pointer[PangoTabArray];

external (cdecl) pango_tab_array_free(arg0:Pointer[PangoTabArray]) : ;

external (cdecl) pango_tab_array_get_size(arg0:Pointer[PangoTabArray]) : gint;

external (cdecl) pango_tab_array_resize(arg0:Pointer[PangoTabArray], arg1:gint) : ;

external (cdecl) pango_tab_array_set_tab(arg0:Pointer[PangoTabArray], arg1:gint, arg2:PangoTabAlign, arg3:gint) : ;

external (cdecl) pango_tab_array_get_tab(arg0:Pointer[PangoTabArray], arg1:gint, arg2:Pointer[PangoTabAlign], arg3:Pointer[gint]) : ;

external (cdecl) pango_tab_array_get_tabs(arg0:Pointer[PangoTabArray], arg1:Pointer[Pointer[PangoTabAlign]], arg2:Pointer[Pointer[gint]]) : ;

external (cdecl) pango_tab_array_get_positions_in_pixels(arg0:Pointer[PangoTabArray]) : gboolean;

alias Struct__PangoLayout = Opaque;

alias PangoLayout = Struct__PangoLayout;

alias Struct__PangoLayoutClass = Opaque;

alias PangoLayoutClass = Struct__PangoLayoutClass;

alias PangoLayoutLine = Struct__PangoLayoutLine;

alias PangoLayoutRun = PangoGlyphItem;

alias Enum_Unnamed15 = UInt;
alias PANGO_ALIGN_LEFT = UInt(0);
alias PANGO_ALIGN_CENTER = UInt(1);
alias PANGO_ALIGN_RIGHT = UInt(2);

alias PangoAlignment = UInt;

alias Enum_Unnamed16 = UInt;
alias PANGO_WRAP_WORD = UInt(0);
alias PANGO_WRAP_CHAR = UInt(1);
alias PANGO_WRAP_WORD_CHAR = UInt(2);

alias PangoWrapMode = UInt;

alias Enum_Unnamed17 = UInt;
alias PANGO_ELLIPSIZE_NONE = UInt(0);
alias PANGO_ELLIPSIZE_START = UInt(1);
alias PANGO_ELLIPSIZE_MIDDLE = UInt(2);
alias PANGO_ELLIPSIZE_END = UInt(3);

alias PangoEllipsizeMode = UInt;

record Struct__PangoLayoutLine (
    layout : Pointer[PangoLayout],
    start_index : gint,
    length : gint,
    runs : Pointer[GSList],
    is_paragraph_start : guint,
    resolved_dir : guint,
);

external (cdecl) pango_layout_get_type() : GType;

external (cdecl) pango_layout_new(arg0:Pointer[PangoContext]) : Pointer[PangoLayout];

external (cdecl) pango_layout_copy(arg0:Pointer[PangoLayout]) : Pointer[PangoLayout];

external (cdecl) pango_layout_get_context(arg0:Pointer[PangoLayout]) : Pointer[PangoContext];

external (cdecl) pango_layout_set_attributes(arg0:Pointer[PangoLayout], arg1:Pointer[PangoAttrList]) : ;

external (cdecl) pango_layout_get_attributes(arg0:Pointer[PangoLayout]) : Pointer[PangoAttrList];

external (cdecl) pango_layout_set_text(arg0:Pointer[PangoLayout], arg1:Pointer[CChar], arg2:Int) : ;

external (cdecl) pango_layout_get_text(arg0:Pointer[PangoLayout]) : Pointer[CChar];

external (cdecl) pango_layout_get_character_count(arg0:Pointer[PangoLayout]) : gint;

external (cdecl) pango_layout_set_markup(arg0:Pointer[PangoLayout], arg1:Pointer[CChar], arg2:Int) : ;

external (cdecl) pango_layout_set_markup_with_accel(arg0:Pointer[PangoLayout], arg1:Pointer[CChar], arg2:Int, arg3:gunichar, arg4:Pointer[gunichar]) : ;

external (cdecl) pango_layout_set_font_description(arg0:Pointer[PangoLayout], arg1:Pointer[PangoFontDescription]) : ;

external (cdecl) pango_layout_get_font_description(arg0:Pointer[PangoLayout]) : Pointer[PangoFontDescription];

external (cdecl) pango_layout_set_width(arg0:Pointer[PangoLayout], arg1:Int) : ;

external (cdecl) pango_layout_get_width(arg0:Pointer[PangoLayout]) : Int;

external (cdecl) pango_layout_set_height(arg0:Pointer[PangoLayout], arg1:Int) : ;

external (cdecl) pango_layout_get_height(arg0:Pointer[PangoLayout]) : Int;

external (cdecl) pango_layout_set_wrap(arg0:Pointer[PangoLayout], arg1:PangoWrapMode) : ;

external (cdecl) pango_layout_get_wrap(arg0:Pointer[PangoLayout]) : PangoWrapMode;

external (cdecl) pango_layout_is_wrapped(arg0:Pointer[PangoLayout]) : gboolean;

external (cdecl) pango_layout_set_indent(arg0:Pointer[PangoLayout], arg1:Int) : ;

external (cdecl) pango_layout_get_indent(arg0:Pointer[PangoLayout]) : Int;

external (cdecl) pango_layout_set_spacing(arg0:Pointer[PangoLayout], arg1:Int) : ;

external (cdecl) pango_layout_get_spacing(arg0:Pointer[PangoLayout]) : Int;

external (cdecl) pango_layout_set_justify(arg0:Pointer[PangoLayout], arg1:gboolean) : ;

external (cdecl) pango_layout_get_justify(arg0:Pointer[PangoLayout]) : gboolean;

external (cdecl) pango_layout_set_auto_dir(arg0:Pointer[PangoLayout], arg1:gboolean) : ;

external (cdecl) pango_layout_get_auto_dir(arg0:Pointer[PangoLayout]) : gboolean;

external (cdecl) pango_layout_set_alignment(arg0:Pointer[PangoLayout], arg1:PangoAlignment) : ;

external (cdecl) pango_layout_get_alignment(arg0:Pointer[PangoLayout]) : PangoAlignment;

external (cdecl) pango_layout_set_tabs(arg0:Pointer[PangoLayout], arg1:Pointer[PangoTabArray]) : ;

external (cdecl) pango_layout_get_tabs(arg0:Pointer[PangoLayout]) : Pointer[PangoTabArray];

external (cdecl) pango_layout_set_single_paragraph_mode(arg0:Pointer[PangoLayout], arg1:gboolean) : ;

external (cdecl) pango_layout_get_single_paragraph_mode(arg0:Pointer[PangoLayout]) : gboolean;

external (cdecl) pango_layout_set_ellipsize(arg0:Pointer[PangoLayout], arg1:PangoEllipsizeMode) : ;

external (cdecl) pango_layout_get_ellipsize(arg0:Pointer[PangoLayout]) : PangoEllipsizeMode;

external (cdecl) pango_layout_is_ellipsized(arg0:Pointer[PangoLayout]) : gboolean;

external (cdecl) pango_layout_get_unknown_glyphs_count(arg0:Pointer[PangoLayout]) : Int;

external (cdecl) pango_layout_context_changed(arg0:Pointer[PangoLayout]) : ;

external (cdecl) pango_layout_get_log_attrs(arg0:Pointer[PangoLayout], arg1:Pointer[Pointer[PangoLogAttr]], arg2:Pointer[gint]) : ;

external (cdecl) pango_layout_get_log_attrs_readonly(arg0:Pointer[PangoLayout], arg1:Pointer[gint]) : Pointer[PangoLogAttr];

external (cdecl) pango_layout_index_to_pos(arg0:Pointer[PangoLayout], arg1:Int, arg2:Pointer[PangoRectangle]) : ;

external (cdecl) pango_layout_index_to_line_x(arg0:Pointer[PangoLayout], arg1:Int, arg2:gboolean, arg3:Pointer[Int], arg4:Pointer[Int]) : ;

external (cdecl) pango_layout_get_cursor_pos(arg0:Pointer[PangoLayout], arg1:Int, arg2:Pointer[PangoRectangle], arg3:Pointer[PangoRectangle]) : ;

external (cdecl) pango_layout_move_cursor_visually(arg0:Pointer[PangoLayout], arg1:gboolean, arg2:Int, arg3:Int, arg4:Int, arg5:Pointer[Int], arg6:Pointer[Int]) : ;

external (cdecl) pango_layout_xy_to_index(arg0:Pointer[PangoLayout], arg1:Int, arg2:Int, arg3:Pointer[Int], arg4:Pointer[Int]) : gboolean;

external (cdecl) pango_layout_get_extents(arg0:Pointer[PangoLayout], arg1:Pointer[PangoRectangle], arg2:Pointer[PangoRectangle]) : ;

external (cdecl) pango_layout_get_pixel_extents(arg0:Pointer[PangoLayout], arg1:Pointer[PangoRectangle], arg2:Pointer[PangoRectangle]) : ;

external (cdecl) pango_layout_get_size(arg0:Pointer[PangoLayout], arg1:Pointer[Int], arg2:Pointer[Int]) : ;

external (cdecl) pango_layout_get_pixel_size(arg0:Pointer[PangoLayout], arg1:Pointer[Int], arg2:Pointer[Int]) : ;

external (cdecl) pango_layout_get_baseline(arg0:Pointer[PangoLayout]) : Int;

external (cdecl) pango_layout_get_line_count(arg0:Pointer[PangoLayout]) : Int;

external (cdecl) pango_layout_get_line(arg0:Pointer[PangoLayout], arg1:Int) : Pointer[PangoLayoutLine];

external (cdecl) pango_layout_get_line_readonly(arg0:Pointer[PangoLayout], arg1:Int) : Pointer[PangoLayoutLine];

external (cdecl) pango_layout_get_lines(arg0:Pointer[PangoLayout]) : Pointer[GSList];

external (cdecl) pango_layout_get_lines_readonly(arg0:Pointer[PangoLayout]) : Pointer[GSList];

external (cdecl) pango_layout_line_get_type() : GType;

external (cdecl) pango_layout_line_ref(arg0:Pointer[PangoLayoutLine]) : Pointer[PangoLayoutLine];

external (cdecl) pango_layout_line_unref(arg0:Pointer[PangoLayoutLine]) : ;

external (cdecl) pango_layout_line_x_to_index(arg0:Pointer[PangoLayoutLine], arg1:Int, arg2:Pointer[Int], arg3:Pointer[Int]) : gboolean;

external (cdecl) pango_layout_line_index_to_x(arg0:Pointer[PangoLayoutLine], arg1:Int, arg2:gboolean, arg3:Pointer[Int]) : ;

external (cdecl) pango_layout_line_get_x_ranges(arg0:Pointer[PangoLayoutLine], arg1:Int, arg2:Int, arg3:Pointer[Pointer[Int]], arg4:Pointer[Int]) : ;

external (cdecl) pango_layout_line_get_extents(arg0:Pointer[PangoLayoutLine], arg1:Pointer[PangoRectangle], arg2:Pointer[PangoRectangle]) : ;

external (cdecl) pango_layout_line_get_pixel_extents(arg0:Pointer[PangoLayoutLine], arg1:Pointer[PangoRectangle], arg2:Pointer[PangoRectangle]) : ;

alias Struct__PangoLayoutIter = Opaque;

alias PangoLayoutIter = Struct__PangoLayoutIter;

external (cdecl) pango_layout_iter_get_type() : GType;

external (cdecl) pango_layout_get_iter(arg0:Pointer[PangoLayout]) : Pointer[PangoLayoutIter];

external (cdecl) pango_layout_iter_copy(arg0:Pointer[PangoLayoutIter]) : Pointer[PangoLayoutIter];

external (cdecl) pango_layout_iter_free(arg0:Pointer[PangoLayoutIter]) : ;

external (cdecl) pango_layout_iter_get_index(arg0:Pointer[PangoLayoutIter]) : Int;

external (cdecl) pango_layout_iter_get_run(arg0:Pointer[PangoLayoutIter]) : Pointer[PangoLayoutRun];

external (cdecl) pango_layout_iter_get_run_readonly(arg0:Pointer[PangoLayoutIter]) : Pointer[PangoLayoutRun];

external (cdecl) pango_layout_iter_get_line(arg0:Pointer[PangoLayoutIter]) : Pointer[PangoLayoutLine];

external (cdecl) pango_layout_iter_get_line_readonly(arg0:Pointer[PangoLayoutIter]) : Pointer[PangoLayoutLine];

external (cdecl) pango_layout_iter_at_last_line(arg0:Pointer[PangoLayoutIter]) : gboolean;

external (cdecl) pango_layout_iter_get_layout(arg0:Pointer[PangoLayoutIter]) : Pointer[PangoLayout];

external (cdecl) pango_layout_iter_next_char(arg0:Pointer[PangoLayoutIter]) : gboolean;

external (cdecl) pango_layout_iter_next_cluster(arg0:Pointer[PangoLayoutIter]) : gboolean;

external (cdecl) pango_layout_iter_next_run(arg0:Pointer[PangoLayoutIter]) : gboolean;

external (cdecl) pango_layout_iter_next_line(arg0:Pointer[PangoLayoutIter]) : gboolean;

external (cdecl) pango_layout_iter_get_char_extents(arg0:Pointer[PangoLayoutIter], arg1:Pointer[PangoRectangle]) : ;

external (cdecl) pango_layout_iter_get_cluster_extents(arg0:Pointer[PangoLayoutIter], arg1:Pointer[PangoRectangle], arg2:Pointer[PangoRectangle]) : ;

external (cdecl) pango_layout_iter_get_run_extents(arg0:Pointer[PangoLayoutIter], arg1:Pointer[PangoRectangle], arg2:Pointer[PangoRectangle]) : ;

external (cdecl) pango_layout_iter_get_line_extents(arg0:Pointer[PangoLayoutIter], arg1:Pointer[PangoRectangle], arg2:Pointer[PangoRectangle]) : ;

external (cdecl) pango_layout_iter_get_line_yrange(arg0:Pointer[PangoLayoutIter], arg1:Pointer[Int], arg2:Pointer[Int]) : ;

external (cdecl) pango_layout_iter_get_layout_extents(arg0:Pointer[PangoLayoutIter], arg1:Pointer[PangoRectangle], arg2:Pointer[PangoRectangle]) : ;

external (cdecl) pango_layout_iter_get_baseline(arg0:Pointer[PangoLayoutIter]) : Int;

alias PangoRenderer = Struct__PangoRenderer;

alias PangoRendererClass = Struct__PangoRendererClass;

alias Struct__PangoRendererPrivate = Opaque;

alias PangoRendererPrivate = Struct__PangoRendererPrivate;

alias Enum_Unnamed18 = UInt;
alias PANGO_RENDER_PART_FOREGROUND = UInt(0);
alias PANGO_RENDER_PART_BACKGROUND = UInt(1);
alias PANGO_RENDER_PART_UNDERLINE = UInt(2);
alias PANGO_RENDER_PART_STRIKETHROUGH = UInt(3);

alias PangoRenderPart = UInt;

record Struct__PangoRenderer (
    parent_instance : GObject,
    underline : PangoUnderline,
    strikethrough : gboolean,
    active_count : Int,
    matrix : Pointer[PangoMatrix],
    priv : Pointer[PangoRendererPrivate],
);

record Struct__PangoRendererClass (
    parent_class : GObjectClass,
    draw_glyphs : CCodePointer[[Pointer[PangoRenderer], Pointer[PangoFont], Pointer[PangoGlyphString], Int, Int],[]],
    draw_rectangle : CCodePointer[[Pointer[PangoRenderer], PangoRenderPart, Int, Int, Int, Int],[]],
    draw_error_underline : CCodePointer[[Pointer[PangoRenderer], Int, Int, Int, Int],[]],
    draw_shape : CCodePointer[[Pointer[PangoRenderer], Pointer[PangoAttrShape], Int, Int],[]],
    draw_trapezoid : CCodePointer[[Pointer[PangoRenderer], PangoRenderPart, Double, Double, Double, Double, Double, Double],[]],
    draw_glyph : CCodePointer[[Pointer[PangoRenderer], Pointer[PangoFont], PangoGlyph, Double, Double],[]],
    part_changed : CCodePointer[[Pointer[PangoRenderer], PangoRenderPart],[]],
    begin : CCodePointer[[Pointer[PangoRenderer]],[]],
    end : CCodePointer[[Pointer[PangoRenderer]],[]],
    prepare_run : CCodePointer[[Pointer[PangoRenderer], Pointer[PangoLayoutRun]],[]],
    draw_glyph_item : CCodePointer[[Pointer[PangoRenderer], Pointer[CChar], Pointer[PangoGlyphItem], Int, Int],[]],
    _pango_reserved2 : CCodePointer[[],[]],
    _pango_reserved3 : CCodePointer[[],[]],
    _pango_reserved4 : CCodePointer[[],[]],
);

external (cdecl) pango_renderer_get_type() : GType;

external (cdecl) pango_renderer_draw_layout(arg0:Pointer[PangoRenderer], arg1:Pointer[PangoLayout], arg2:Int, arg3:Int) : ;

external (cdecl) pango_renderer_draw_layout_line(arg0:Pointer[PangoRenderer], arg1:Pointer[PangoLayoutLine], arg2:Int, arg3:Int) : ;

external (cdecl) pango_renderer_draw_glyphs(arg0:Pointer[PangoRenderer], arg1:Pointer[PangoFont], arg2:Pointer[PangoGlyphString], arg3:Int, arg4:Int) : ;

external (cdecl) pango_renderer_draw_glyph_item(arg0:Pointer[PangoRenderer], arg1:Pointer[CChar], arg2:Pointer[PangoGlyphItem], arg3:Int, arg4:Int) : ;

external (cdecl) pango_renderer_draw_rectangle(arg0:Pointer[PangoRenderer], arg1:PangoRenderPart, arg2:Int, arg3:Int, arg4:Int, arg5:Int) : ;

external (cdecl) pango_renderer_draw_error_underline(arg0:Pointer[PangoRenderer], arg1:Int, arg2:Int, arg3:Int, arg4:Int) : ;

external (cdecl) pango_renderer_draw_trapezoid(arg0:Pointer[PangoRenderer], arg1:PangoRenderPart, arg2:Double, arg3:Double, arg4:Double, arg5:Double, arg6:Double, arg7:Double) : ;

external (cdecl) pango_renderer_draw_glyph(arg0:Pointer[PangoRenderer], arg1:Pointer[PangoFont], arg2:PangoGlyph, arg3:Double, arg4:Double) : ;

external (cdecl) pango_renderer_activate(arg0:Pointer[PangoRenderer]) : ;

external (cdecl) pango_renderer_deactivate(arg0:Pointer[PangoRenderer]) : ;

external (cdecl) pango_renderer_part_changed(arg0:Pointer[PangoRenderer], arg1:PangoRenderPart) : ;

external (cdecl) pango_renderer_set_color(arg0:Pointer[PangoRenderer], arg1:PangoRenderPart, arg2:Pointer[PangoColor]) : ;

external (cdecl) pango_renderer_get_color(arg0:Pointer[PangoRenderer], arg1:PangoRenderPart) : Pointer[PangoColor];

external (cdecl) pango_renderer_set_matrix(arg0:Pointer[PangoRenderer], arg1:Pointer[PangoMatrix]) : ;

external (cdecl) pango_renderer_get_matrix(arg0:Pointer[PangoRenderer]) : Pointer[PangoMatrix];

external (cdecl) pango_renderer_get_layout(arg0:Pointer[PangoRenderer]) : Pointer[PangoLayout];

external (cdecl) pango_renderer_get_layout_line(arg0:Pointer[PangoRenderer]) : Pointer[PangoLayoutLine];

external (cdecl) pango_split_file_list(arg0:Pointer[CChar]) : Pointer[Pointer[CChar]];

external (cdecl) pango_trim_string(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) pango_read_line(arg0:Pointer[FILE], arg1:Pointer[GString]) : gint;

external (cdecl) pango_skip_space(arg0:Pointer[Pointer[CChar]]) : gboolean;

external (cdecl) pango_scan_word(arg0:Pointer[Pointer[CChar]], arg1:Pointer[GString]) : gboolean;

external (cdecl) pango_scan_string(arg0:Pointer[Pointer[CChar]], arg1:Pointer[GString]) : gboolean;

external (cdecl) pango_scan_int(arg0:Pointer[Pointer[CChar]], arg1:Pointer[Int]) : gboolean;

external (cdecl) pango_parse_enum(arg0:GType, arg1:Pointer[CChar], arg2:Pointer[Int], arg3:gboolean, arg4:Pointer[Pointer[CChar]]) : gboolean;

external (cdecl) pango_parse_style(arg0:Pointer[CChar], arg1:Pointer[PangoStyle], arg2:gboolean) : gboolean;

external (cdecl) pango_parse_variant(arg0:Pointer[CChar], arg1:Pointer[PangoVariant], arg2:gboolean) : gboolean;

external (cdecl) pango_parse_weight(arg0:Pointer[CChar], arg1:Pointer[PangoWeight], arg2:gboolean) : gboolean;

external (cdecl) pango_parse_stretch(arg0:Pointer[CChar], arg1:Pointer[PangoStretch], arg2:gboolean) : gboolean;

external (cdecl) pango_quantize_line_geometry(arg0:Pointer[Int], arg1:Pointer[Int]) : ;

external (cdecl) pango_log2vis_get_embedding_levels(arg0:Pointer[gchar], arg1:Int, arg2:Pointer[PangoDirection]) : Pointer[guint8];

external (cdecl) pango_is_zero_width(arg0:gunichar) : gboolean;

external (cdecl) pango_version() : Int;

external (cdecl) pango_version_string() : Pointer[CChar];

external (cdecl) pango_version_check(arg0:Int, arg1:Int, arg2:Int) : Pointer[CChar];

