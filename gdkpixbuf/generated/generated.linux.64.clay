// Automatically generated by clay-bindgen
// language: c

import glib.generated.*;
import gio.generated.*;

private alias OpaquePointer = RawPointer;
private alias UnknownType = Int;
private alias AUnionType = Int;


external gdk_pixbuf_major_version : UInt;

external gdk_pixbuf_minor_version : UInt;

external gdk_pixbuf_micro_version : UInt;

external gdk_pixbuf_version : Pointer[CChar];

alias GDK_PIXBUF_ALPHA_BILEVEL = 0;
alias GDK_PIXBUF_ALPHA_FULL = 1;

alias GdkPixbufAlphaMode = Int;

alias GDK_COLORSPACE_RGB = 0;

alias GdkColorspace = Int;

alias GdkPixbuf = Opaque;

alias GdkPixbufDestroyNotify = CCodePointer[(Pointer[CUChar],RawPointer),()];

alias GDK_PIXBUF_ERROR_CORRUPT_IMAGE = 0;
alias GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY = 1;
alias GDK_PIXBUF_ERROR_BAD_OPTION = 2;
alias GDK_PIXBUF_ERROR_UNKNOWN_TYPE = 3;
alias GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION = 4;
alias GDK_PIXBUF_ERROR_FAILED = 5;

alias GdkPixbufError = Int;

external gdk_pixbuf_error_quark() UInt;

external gdk_pixbuf_get_type() CULong;

external gdk_pixbuf_ref(
    pixbuf : Pointer[GdkPixbuf]) Pointer[GdkPixbuf];

external gdk_pixbuf_unref(
    pixbuf : Pointer[GdkPixbuf]);

external gdk_pixbuf_get_colorspace(
    pixbuf : Pointer[GdkPixbuf]) GdkColorspace;

external gdk_pixbuf_get_n_channels(
    pixbuf : Pointer[GdkPixbuf]) Int;

external gdk_pixbuf_get_has_alpha(
    pixbuf : Pointer[GdkPixbuf]) Int;

external gdk_pixbuf_get_bits_per_sample(
    pixbuf : Pointer[GdkPixbuf]) Int;

external gdk_pixbuf_get_pixels(
    pixbuf : Pointer[GdkPixbuf]) Pointer[CUChar];

external gdk_pixbuf_get_width(
    pixbuf : Pointer[GdkPixbuf]) Int;

external gdk_pixbuf_get_height(
    pixbuf : Pointer[GdkPixbuf]) Int;

external gdk_pixbuf_get_rowstride(
    pixbuf : Pointer[GdkPixbuf]) Int;

external gdk_pixbuf_new(
    colorspace : GdkColorspace,
    has_alpha : Int,
    bits_per_sample : Int,
    width : Int,
    height : Int) Pointer[GdkPixbuf];

external gdk_pixbuf_copy(
    pixbuf : Pointer[GdkPixbuf]) Pointer[GdkPixbuf];

external gdk_pixbuf_new_subpixbuf(
    src_pixbuf : Pointer[GdkPixbuf],
    src_x : Int,
    src_y : Int,
    width : Int,
    height : Int) Pointer[GdkPixbuf];

external gdk_pixbuf_new_from_file(
    filename : Pointer[CChar],
    error : Pointer[Pointer[GError]]) Pointer[GdkPixbuf];

external gdk_pixbuf_new_from_file_at_size(
    filename : Pointer[CChar],
    width : Int,
    height : Int,
    error : Pointer[Pointer[GError]]) Pointer[GdkPixbuf];

external gdk_pixbuf_new_from_file_at_scale(
    filename : Pointer[CChar],
    width : Int,
    height : Int,
    preserve_aspect_ratio : Int,
    error : Pointer[Pointer[GError]]) Pointer[GdkPixbuf];

external gdk_pixbuf_new_from_data(
    data : Pointer[CUChar],
    colorspace : GdkColorspace,
    has_alpha : Int,
    bits_per_sample : Int,
    width : Int,
    height : Int,
    rowstride : Int,
    destroy_fn : GdkPixbufDestroyNotify,
    destroy_fn_data : gpointer) Pointer[GdkPixbuf];

external gdk_pixbuf_new_from_xpm_data(
    data : Pointer[Pointer[CChar]]) Pointer[GdkPixbuf];

external gdk_pixbuf_new_from_inline(
    data_length : Int,
    data : Pointer[CUChar],
    copy_pixels : Int,
    error : Pointer[Pointer[GError]]) Pointer[GdkPixbuf];

external gdk_pixbuf_fill(
    pixbuf : Pointer[GdkPixbuf],
    pixel : UInt);

external gdk_pixbuf_save(
    pixbuf : Pointer[GdkPixbuf],
    filename : Pointer[CChar],
    type : Pointer[CChar],
    error : Pointer[Pointer[GError]],
    ...) Int;

external gdk_pixbuf_savev(
    pixbuf : Pointer[GdkPixbuf],
    filename : Pointer[CChar],
    type : Pointer[CChar],
    option_keys : Pointer[Pointer[CChar]],
    option_values : Pointer[Pointer[CChar]],
    error : Pointer[Pointer[GError]]) Int;

alias GdkPixbufSaveFunc = CCodePointer[(Pointer[CChar],CULong,Pointer[Pointer[Struct__GError]],RawPointer),(Int)];

external gdk_pixbuf_save_to_callback(
    pixbuf : Pointer[GdkPixbuf],
    save_func : GdkPixbufSaveFunc,
    user_data : gpointer,
    type : Pointer[CChar],
    error : Pointer[Pointer[GError]],
    ...) Int;

external gdk_pixbuf_save_to_callbackv(
    pixbuf : Pointer[GdkPixbuf],
    save_func : GdkPixbufSaveFunc,
    user_data : gpointer,
    type : Pointer[CChar],
    option_keys : Pointer[Pointer[CChar]],
    option_values : Pointer[Pointer[CChar]],
    error : Pointer[Pointer[GError]]) Int;

external gdk_pixbuf_save_to_buffer(
    pixbuf : Pointer[GdkPixbuf],
    buffer : Pointer[Pointer[CChar]],
    buffer_size : Pointer[CULong],
    type : Pointer[CChar],
    error : Pointer[Pointer[GError]],
    ...) Int;

external gdk_pixbuf_save_to_bufferv(
    pixbuf : Pointer[GdkPixbuf],
    buffer : Pointer[Pointer[CChar]],
    buffer_size : Pointer[CULong],
    type : Pointer[CChar],
    option_keys : Pointer[Pointer[CChar]],
    option_values : Pointer[Pointer[CChar]],
    error : Pointer[Pointer[GError]]) Int;

external gdk_pixbuf_new_from_stream(
    stream : Pointer[GInputStream],
    cancellable : Pointer[GCancellable],
    error : Pointer[Pointer[GError]]) Pointer[GdkPixbuf];

external gdk_pixbuf_new_from_stream_at_scale(
    stream : Pointer[GInputStream],
    width : Int,
    height : Int,
    preserve_aspect_ratio : Int,
    cancellable : Pointer[GCancellable],
    error : Pointer[Pointer[GError]]) Pointer[GdkPixbuf];

external gdk_pixbuf_save_to_stream(
    pixbuf : Pointer[GdkPixbuf],
    stream : Pointer[GOutputStream],
    type : Pointer[CChar],
    cancellable : Pointer[GCancellable],
    error : Pointer[Pointer[GError]],
    ...) Int;

external gdk_pixbuf_add_alpha(
    pixbuf : Pointer[GdkPixbuf],
    substitute_color : Int,
    r : CUChar,
    g : CUChar,
    b : CUChar) Pointer[GdkPixbuf];

external gdk_pixbuf_copy_area(
    src_pixbuf : Pointer[GdkPixbuf],
    src_x : Int,
    src_y : Int,
    width : Int,
    height : Int,
    dest_pixbuf : Pointer[GdkPixbuf],
    dest_x : Int,
    dest_y : Int);

external gdk_pixbuf_saturate_and_pixelate(
    src : Pointer[GdkPixbuf],
    dest : Pointer[GdkPixbuf],
    saturation : Float,
    pixelate : Int);

external gdk_pixbuf_apply_embedded_orientation(
    src : Pointer[GdkPixbuf]) Pointer[GdkPixbuf];

external gdk_pixbuf_get_option(
    pixbuf : Pointer[GdkPixbuf],
    key : Pointer[CChar]) Pointer[CChar];

alias GDK_INTERP_NEAREST = 0;
alias GDK_INTERP_TILES = 1;
alias GDK_INTERP_BILINEAR = 2;
alias GDK_INTERP_HYPER = 3;

alias GdkInterpType = Int;

alias GDK_PIXBUF_ROTATE_NONE = 0;
alias GDK_PIXBUF_ROTATE_COUNTERCLOCKWISE = 90;
alias GDK_PIXBUF_ROTATE_UPSIDEDOWN = 180;
alias GDK_PIXBUF_ROTATE_CLOCKWISE = 270;

alias GdkPixbufRotation = Int;

external gdk_pixbuf_scale(
    src : Pointer[GdkPixbuf],
    dest : Pointer[GdkPixbuf],
    dest_x : Int,
    dest_y : Int,
    dest_width : Int,
    dest_height : Int,
    offset_x : Double,
    offset_y : Double,
    scale_x : Double,
    scale_y : Double,
    interp_type : GdkInterpType);

external gdk_pixbuf_composite(
    src : Pointer[GdkPixbuf],
    dest : Pointer[GdkPixbuf],
    dest_x : Int,
    dest_y : Int,
    dest_width : Int,
    dest_height : Int,
    offset_x : Double,
    offset_y : Double,
    scale_x : Double,
    scale_y : Double,
    interp_type : GdkInterpType,
    overall_alpha : Int);

external gdk_pixbuf_composite_color(
    src : Pointer[GdkPixbuf],
    dest : Pointer[GdkPixbuf],
    dest_x : Int,
    dest_y : Int,
    dest_width : Int,
    dest_height : Int,
    offset_x : Double,
    offset_y : Double,
    scale_x : Double,
    scale_y : Double,
    interp_type : GdkInterpType,
    overall_alpha : Int,
    check_x : Int,
    check_y : Int,
    check_size : Int,
    color1 : UInt,
    color2 : UInt);

external gdk_pixbuf_scale_simple(
    src : Pointer[GdkPixbuf],
    dest_width : Int,
    dest_height : Int,
    interp_type : GdkInterpType) Pointer[GdkPixbuf];

external gdk_pixbuf_composite_color_simple(
    src : Pointer[GdkPixbuf],
    dest_width : Int,
    dest_height : Int,
    interp_type : GdkInterpType,
    overall_alpha : Int,
    check_size : Int,
    color1 : UInt,
    color2 : UInt) Pointer[GdkPixbuf];

external gdk_pixbuf_rotate_simple(
    src : Pointer[GdkPixbuf],
    angle : GdkPixbufRotation) Pointer[GdkPixbuf];

external gdk_pixbuf_flip(
    src : Pointer[GdkPixbuf],
    horizontal : Int) Pointer[GdkPixbuf];

alias GdkPixbufAnimation = Opaque;

alias GdkPixbufAnimationIter = Opaque;

external gdk_pixbuf_animation_get_type() CULong;

external gdk_pixbuf_animation_new_from_file(
    filename : Pointer[CChar],
    error : Pointer[Pointer[GError]]) Pointer[GdkPixbufAnimation];

external gdk_pixbuf_animation_ref(
    animation : Pointer[GdkPixbufAnimation]) Pointer[GdkPixbufAnimation];

external gdk_pixbuf_animation_unref(
    animation : Pointer[GdkPixbufAnimation]);

external gdk_pixbuf_animation_get_width(
    animation : Pointer[GdkPixbufAnimation]) Int;

external gdk_pixbuf_animation_get_height(
    animation : Pointer[GdkPixbufAnimation]) Int;

external gdk_pixbuf_animation_is_static_image(
    animation : Pointer[GdkPixbufAnimation]) Int;

external gdk_pixbuf_animation_get_static_image(
    animation : Pointer[GdkPixbufAnimation]) Pointer[GdkPixbuf];

external gdk_pixbuf_animation_get_iter(
    animation : Pointer[GdkPixbufAnimation],
    start_time : Pointer[GTimeVal]) Pointer[GdkPixbufAnimationIter];

external gdk_pixbuf_animation_iter_get_type() CULong;

external gdk_pixbuf_animation_iter_get_delay_time(
    iter : Pointer[GdkPixbufAnimationIter]) Int;

external gdk_pixbuf_animation_iter_get_pixbuf(
    iter : Pointer[GdkPixbufAnimationIter]) Pointer[GdkPixbuf];

external gdk_pixbuf_animation_iter_on_currently_loading_frame(
    iter : Pointer[GdkPixbufAnimationIter]) Int;

external gdk_pixbuf_animation_iter_advance(
    iter : Pointer[GdkPixbufAnimationIter],
    current_time : Pointer[GTimeVal]) Int;

alias GdkPixbufSimpleAnim = Opaque;

alias GdkPixbufSimpleAnimClass = Opaque;

external gdk_pixbuf_simple_anim_get_type() CULong;

external gdk_pixbuf_simple_anim_iter_get_type() CULong;

external gdk_pixbuf_simple_anim_new(
    width : Int,
    height : Int,
    rate : Float) Pointer[GdkPixbufSimpleAnim];

external gdk_pixbuf_simple_anim_add_frame(
    animation : Pointer[GdkPixbufSimpleAnim],
    pixbuf : Pointer[GdkPixbuf]);

external gdk_pixbuf_simple_anim_set_loop(
    animation : Pointer[GdkPixbufSimpleAnim],
    loop : Int);

external gdk_pixbuf_simple_anim_get_loop(
    animation : Pointer[GdkPixbufSimpleAnim]) Int;

alias GdkPixbufFormat = Opaque;

external gdk_pixbuf_format_get_type() CULong;

external gdk_pixbuf_get_formats() Pointer[GSList];

external gdk_pixbuf_format_get_name(
    format : Pointer[GdkPixbufFormat]) Pointer[CChar];

external gdk_pixbuf_format_get_description(
    format : Pointer[GdkPixbufFormat]) Pointer[CChar];

external gdk_pixbuf_format_get_mime_types(
    format : Pointer[GdkPixbufFormat]) Pointer[Pointer[CChar]];

external gdk_pixbuf_format_get_extensions(
    format : Pointer[GdkPixbufFormat]) Pointer[Pointer[CChar]];

external gdk_pixbuf_format_is_writable(
    format : Pointer[GdkPixbufFormat]) Int;

external gdk_pixbuf_format_is_scalable(
    format : Pointer[GdkPixbufFormat]) Int;

external gdk_pixbuf_format_is_disabled(
    format : Pointer[GdkPixbufFormat]) Int;

external gdk_pixbuf_format_set_disabled(
    format : Pointer[GdkPixbufFormat],
    disabled : Int);

external gdk_pixbuf_format_get_license(
    format : Pointer[GdkPixbufFormat]) Pointer[CChar];

external gdk_pixbuf_get_file_info(
    filename : Pointer[CChar],
    width : Pointer[Int],
    height : Pointer[Int]) Pointer[GdkPixbufFormat];

external gdk_pixbuf_format_copy(
    format : Pointer[GdkPixbufFormat]) Pointer[GdkPixbufFormat];

external gdk_pixbuf_format_free(
    format : Pointer[GdkPixbufFormat]);

alias GdkPixbufLoader = Struct__GdkPixbufLoader;

record Struct__GdkPixbufLoader (
    parent_instance : GObject,
    priv : gpointer,
);

alias GdkPixbufLoaderClass = Struct__GdkPixbufLoaderClass;

record Struct__GdkPixbufLoaderClass (
    parent_class : GObjectClass,
    size_prepared : CCodePointer[(Pointer[Struct__GdkPixbufLoader],Int,Int),()],
    area_prepared : CCodePointer[(Pointer[Struct__GdkPixbufLoader]),()],
    area_updated : CCodePointer[(Pointer[Struct__GdkPixbufLoader],Int,Int,Int,Int),()],
    closed : CCodePointer[(Pointer[Struct__GdkPixbufLoader]),()],
);

external gdk_pixbuf_loader_get_type() CULong;

external gdk_pixbuf_loader_new() Pointer[GdkPixbufLoader];

external gdk_pixbuf_loader_new_with_type(
    image_type : Pointer[CChar],
    error : Pointer[Pointer[GError]]) Pointer[GdkPixbufLoader];

external gdk_pixbuf_loader_new_with_mime_type(
    mime_type : Pointer[CChar],
    error : Pointer[Pointer[GError]]) Pointer[GdkPixbufLoader];

external gdk_pixbuf_loader_set_size(
    loader : Pointer[GdkPixbufLoader],
    width : Int,
    height : Int);

external gdk_pixbuf_loader_write(
    loader : Pointer[GdkPixbufLoader],
    buf : Pointer[CUChar],
    count : CULong,
    error : Pointer[Pointer[GError]]) Int;

external gdk_pixbuf_loader_get_pixbuf(
    loader : Pointer[GdkPixbufLoader]) Pointer[GdkPixbuf];

external gdk_pixbuf_loader_get_animation(
    loader : Pointer[GdkPixbufLoader]) Pointer[GdkPixbufAnimation];

external gdk_pixbuf_loader_close(
    loader : Pointer[GdkPixbufLoader],
    error : Pointer[Pointer[GError]]) Int;

external gdk_pixbuf_loader_get_format(
    loader : Pointer[GdkPixbufLoader]) Pointer[GdkPixbufFormat];

external gdk_pixbuf_alpha_mode_get_type() CULong;

external gdk_colorspace_get_type() CULong;

external gdk_pixbuf_error_get_type() CULong;

external gdk_interp_type_get_type() CULong;

external gdk_pixbuf_rotation_get_type() CULong;
