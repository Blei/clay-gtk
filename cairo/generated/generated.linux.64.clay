// Automatically generated by clay-bindgen
// language: c

import glib.generated.*;

private alias OpaquePointer = RawPointer;
private alias UnknownType = Int;
private alias AUnionType = Int;


external cairo_version() : Int;

external cairo_version_string() : Pointer[CChar];

alias cairo_bool_t = Int;

alias cairo_t = Opaque;

alias cairo_surface_t = Opaque;

alias cairo_device_t = Opaque;

record Struct__cairo_matrix (
    xx : Double,
    yx : Double,
    xy : Double,
    yy : Double,
    x0 : Double,
    y0 : Double,
);

alias cairo_matrix_t = Struct__cairo_matrix;

alias cairo_pattern_t = Opaque;

alias cairo_destroy_func_t = CCodePointer[[RawPointer],[]];

record Struct__cairo_user_data_key (
    unused : Int,
);

alias cairo_user_data_key_t = Struct__cairo_user_data_key;

alias CAIRO_STATUS_SUCCESS = 0;
alias CAIRO_STATUS_NO_MEMORY = 1;
alias CAIRO_STATUS_INVALID_RESTORE = 2;
alias CAIRO_STATUS_INVALID_POP_GROUP = 3;
alias CAIRO_STATUS_NO_CURRENT_POINT = 4;
alias CAIRO_STATUS_INVALID_MATRIX = 5;
alias CAIRO_STATUS_INVALID_STATUS = 6;
alias CAIRO_STATUS_NULL_POINTER = 7;
alias CAIRO_STATUS_INVALID_STRING = 8;
alias CAIRO_STATUS_INVALID_PATH_DATA = 9;
alias CAIRO_STATUS_READ_ERROR = 10;
alias CAIRO_STATUS_WRITE_ERROR = 11;
alias CAIRO_STATUS_SURFACE_FINISHED = 12;
alias CAIRO_STATUS_SURFACE_TYPE_MISMATCH = 13;
alias CAIRO_STATUS_PATTERN_TYPE_MISMATCH = 14;
alias CAIRO_STATUS_INVALID_CONTENT = 15;
alias CAIRO_STATUS_INVALID_FORMAT = 16;
alias CAIRO_STATUS_INVALID_VISUAL = 17;
alias CAIRO_STATUS_FILE_NOT_FOUND = 18;
alias CAIRO_STATUS_INVALID_DASH = 19;
alias CAIRO_STATUS_INVALID_DSC_COMMENT = 20;
alias CAIRO_STATUS_INVALID_INDEX = 21;
alias CAIRO_STATUS_CLIP_NOT_REPRESENTABLE = 22;
alias CAIRO_STATUS_TEMP_FILE_ERROR = 23;
alias CAIRO_STATUS_INVALID_STRIDE = 24;
alias CAIRO_STATUS_FONT_TYPE_MISMATCH = 25;
alias CAIRO_STATUS_USER_FONT_IMMUTABLE = 26;
alias CAIRO_STATUS_USER_FONT_ERROR = 27;
alias CAIRO_STATUS_NEGATIVE_COUNT = 28;
alias CAIRO_STATUS_INVALID_CLUSTERS = 29;
alias CAIRO_STATUS_INVALID_SLANT = 30;
alias CAIRO_STATUS_INVALID_WEIGHT = 31;
alias CAIRO_STATUS_INVALID_SIZE = 32;
alias CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED = 33;
alias CAIRO_STATUS_DEVICE_TYPE_MISMATCH = 34;
alias CAIRO_STATUS_DEVICE_ERROR = 35;
alias CAIRO_STATUS_LAST_STATUS = 36;

alias cairo_status_t = Int;

alias CAIRO_CONTENT_COLOR = 4096;
alias CAIRO_CONTENT_ALPHA = 8192;
alias CAIRO_CONTENT_COLOR_ALPHA = 12288;

alias cairo_content_t = Int;

alias cairo_write_func_t = CCodePointer[[RawPointer,Pointer[CUChar],UInt],[Int]];

alias cairo_read_func_t = CCodePointer[[RawPointer,Pointer[CUChar],UInt],[Int]];

external cairo_create(
    target : Pointer[cairo_surface_t]) : Pointer[cairo_t];

external cairo_reference(
    cr : Pointer[cairo_t]) : Pointer[cairo_t];

external cairo_destroy(
    cr : Pointer[cairo_t]);

external cairo_get_reference_count(
    cr : Pointer[cairo_t]) : UInt;

external cairo_get_user_data(
    cr : Pointer[cairo_t],
    key : Pointer[cairo_user_data_key_t]) : RawPointer;

external cairo_set_user_data(
    cr : Pointer[cairo_t],
    key : Pointer[cairo_user_data_key_t],
    user_data : RawPointer,
    destroy : cairo_destroy_func_t) : cairo_status_t;

external cairo_save(
    cr : Pointer[cairo_t]);

external cairo_restore(
    cr : Pointer[cairo_t]);

external cairo_push_group(
    cr : Pointer[cairo_t]);

external cairo_push_group_with_content(
    cr : Pointer[cairo_t],
    content : cairo_content_t);

external cairo_pop_group(
    cr : Pointer[cairo_t]) : Pointer[cairo_pattern_t];

external cairo_pop_group_to_source(
    cr : Pointer[cairo_t]);

alias CAIRO_OPERATOR_CLEAR = 0;
alias CAIRO_OPERATOR_SOURCE = 1;
alias CAIRO_OPERATOR_OVER = 2;
alias CAIRO_OPERATOR_IN = 3;
alias CAIRO_OPERATOR_OUT = 4;
alias CAIRO_OPERATOR_ATOP = 5;
alias CAIRO_OPERATOR_DEST = 6;
alias CAIRO_OPERATOR_DEST_OVER = 7;
alias CAIRO_OPERATOR_DEST_IN = 8;
alias CAIRO_OPERATOR_DEST_OUT = 9;
alias CAIRO_OPERATOR_DEST_ATOP = 10;
alias CAIRO_OPERATOR_XOR = 11;
alias CAIRO_OPERATOR_ADD = 12;
alias CAIRO_OPERATOR_SATURATE = 13;
alias CAIRO_OPERATOR_MULTIPLY = 14;
alias CAIRO_OPERATOR_SCREEN = 15;
alias CAIRO_OPERATOR_OVERLAY = 16;
alias CAIRO_OPERATOR_DARKEN = 17;
alias CAIRO_OPERATOR_LIGHTEN = 18;
alias CAIRO_OPERATOR_COLOR_DODGE = 19;
alias CAIRO_OPERATOR_COLOR_BURN = 20;
alias CAIRO_OPERATOR_HARD_LIGHT = 21;
alias CAIRO_OPERATOR_SOFT_LIGHT = 22;
alias CAIRO_OPERATOR_DIFFERENCE = 23;
alias CAIRO_OPERATOR_EXCLUSION = 24;
alias CAIRO_OPERATOR_HSL_HUE = 25;
alias CAIRO_OPERATOR_HSL_SATURATION = 26;
alias CAIRO_OPERATOR_HSL_COLOR = 27;
alias CAIRO_OPERATOR_HSL_LUMINOSITY = 28;

alias cairo_operator_t = Int;

external cairo_set_operator(
    cr : Pointer[cairo_t],
    op : cairo_operator_t);

external cairo_set_source(
    cr : Pointer[cairo_t],
    source : Pointer[cairo_pattern_t]);

external cairo_set_source_rgb(
    cr : Pointer[cairo_t],
    red : Double,
    green : Double,
    blue : Double);

external cairo_set_source_rgba(
    cr : Pointer[cairo_t],
    red : Double,
    green : Double,
    blue : Double,
    alpha : Double);

external cairo_set_source_surface(
    cr : Pointer[cairo_t],
    surface : Pointer[cairo_surface_t],
    x : Double,
    y : Double);

external cairo_set_tolerance(
    cr : Pointer[cairo_t],
    tolerance : Double);

alias CAIRO_ANTIALIAS_DEFAULT = 0;
alias CAIRO_ANTIALIAS_NONE = 1;
alias CAIRO_ANTIALIAS_GRAY = 2;
alias CAIRO_ANTIALIAS_SUBPIXEL = 3;

alias cairo_antialias_t = Int;

external cairo_set_antialias(
    cr : Pointer[cairo_t],
    antialias : cairo_antialias_t);

alias CAIRO_FILL_RULE_WINDING = 0;
alias CAIRO_FILL_RULE_EVEN_ODD = 1;

alias cairo_fill_rule_t = Int;

external cairo_set_fill_rule(
    cr : Pointer[cairo_t],
    fill_rule : cairo_fill_rule_t);

external cairo_set_line_width(
    cr : Pointer[cairo_t],
    width : Double);

alias CAIRO_LINE_CAP_BUTT = 0;
alias CAIRO_LINE_CAP_ROUND = 1;
alias CAIRO_LINE_CAP_SQUARE = 2;

alias cairo_line_cap_t = Int;

external cairo_set_line_cap(
    cr : Pointer[cairo_t],
    line_cap : cairo_line_cap_t);

alias CAIRO_LINE_JOIN_MITER = 0;
alias CAIRO_LINE_JOIN_ROUND = 1;
alias CAIRO_LINE_JOIN_BEVEL = 2;

alias cairo_line_join_t = Int;

external cairo_set_line_join(
    cr : Pointer[cairo_t],
    line_join : cairo_line_join_t);

external cairo_set_dash(
    cr : Pointer[cairo_t],
    dashes : Pointer[Double],
    num_dashes : Int,
    offset : Double);

external cairo_set_miter_limit(
    cr : Pointer[cairo_t],
    limit : Double);

external cairo_translate(
    cr : Pointer[cairo_t],
    tx : Double,
    ty : Double);

external cairo_scale(
    cr : Pointer[cairo_t],
    sx : Double,
    sy : Double);

external cairo_rotate(
    cr : Pointer[cairo_t],
    angle : Double);

external cairo_transform(
    cr : Pointer[cairo_t],
    matrix : Pointer[cairo_matrix_t]);

external cairo_set_matrix(
    cr : Pointer[cairo_t],
    matrix : Pointer[cairo_matrix_t]);

external cairo_identity_matrix(
    cr : Pointer[cairo_t]);

external cairo_user_to_device(
    cr : Pointer[cairo_t],
    x : Pointer[Double],
    y : Pointer[Double]);

external cairo_user_to_device_distance(
    cr : Pointer[cairo_t],
    dx : Pointer[Double],
    dy : Pointer[Double]);

external cairo_device_to_user(
    cr : Pointer[cairo_t],
    x : Pointer[Double],
    y : Pointer[Double]);

external cairo_device_to_user_distance(
    cr : Pointer[cairo_t],
    dx : Pointer[Double],
    dy : Pointer[Double]);

external cairo_new_path(
    cr : Pointer[cairo_t]);

external cairo_move_to(
    cr : Pointer[cairo_t],
    x : Double,
    y : Double);

external cairo_new_sub_path(
    cr : Pointer[cairo_t]);

external cairo_line_to(
    cr : Pointer[cairo_t],
    x : Double,
    y : Double);

external cairo_curve_to(
    cr : Pointer[cairo_t],
    x1 : Double,
    y1 : Double,
    x2 : Double,
    y2 : Double,
    x3 : Double,
    y3 : Double);

external cairo_arc(
    cr : Pointer[cairo_t],
    xc : Double,
    yc : Double,
    radius : Double,
    angle1 : Double,
    angle2 : Double);

external cairo_arc_negative(
    cr : Pointer[cairo_t],
    xc : Double,
    yc : Double,
    radius : Double,
    angle1 : Double,
    angle2 : Double);

external cairo_rel_move_to(
    cr : Pointer[cairo_t],
    dx : Double,
    dy : Double);

external cairo_rel_line_to(
    cr : Pointer[cairo_t],
    dx : Double,
    dy : Double);

external cairo_rel_curve_to(
    cr : Pointer[cairo_t],
    dx1 : Double,
    dy1 : Double,
    dx2 : Double,
    dy2 : Double,
    dx3 : Double,
    dy3 : Double);

external cairo_rectangle(
    cr : Pointer[cairo_t],
    x : Double,
    y : Double,
    width : Double,
    height : Double);

external cairo_close_path(
    cr : Pointer[cairo_t]);

external cairo_path_extents(
    cr : Pointer[cairo_t],
    x1 : Pointer[Double],
    y1 : Pointer[Double],
    x2 : Pointer[Double],
    y2 : Pointer[Double]);

external cairo_paint(
    cr : Pointer[cairo_t]);

external cairo_paint_with_alpha(
    cr : Pointer[cairo_t],
    alpha : Double);

external cairo_mask(
    cr : Pointer[cairo_t],
    pattern : Pointer[cairo_pattern_t]);

external cairo_mask_surface(
    cr : Pointer[cairo_t],
    surface : Pointer[cairo_surface_t],
    surface_x : Double,
    surface_y : Double);

external cairo_stroke(
    cr : Pointer[cairo_t]);

external cairo_stroke_preserve(
    cr : Pointer[cairo_t]);

external cairo_fill(
    cr : Pointer[cairo_t]);

external cairo_fill_preserve(
    cr : Pointer[cairo_t]);

external cairo_copy_page(
    cr : Pointer[cairo_t]);

external cairo_show_page(
    cr : Pointer[cairo_t]);

external cairo_in_stroke(
    cr : Pointer[cairo_t],
    x : Double,
    y : Double) : Int;

external cairo_in_fill(
    cr : Pointer[cairo_t],
    x : Double,
    y : Double) : Int;

external cairo_in_clip(
    cr : Pointer[cairo_t],
    x : Double,
    y : Double) : Int;

external cairo_stroke_extents(
    cr : Pointer[cairo_t],
    x1 : Pointer[Double],
    y1 : Pointer[Double],
    x2 : Pointer[Double],
    y2 : Pointer[Double]);

external cairo_fill_extents(
    cr : Pointer[cairo_t],
    x1 : Pointer[Double],
    y1 : Pointer[Double],
    x2 : Pointer[Double],
    y2 : Pointer[Double]);

external cairo_reset_clip(
    cr : Pointer[cairo_t]);

external cairo_clip(
    cr : Pointer[cairo_t]);

external cairo_clip_preserve(
    cr : Pointer[cairo_t]);

external cairo_clip_extents(
    cr : Pointer[cairo_t],
    x1 : Pointer[Double],
    y1 : Pointer[Double],
    x2 : Pointer[Double],
    y2 : Pointer[Double]);

record Struct__cairo_rectangle (
    x : Double,
    y : Double,
    width : Double,
    height : Double,
);

alias cairo_rectangle_t = Struct__cairo_rectangle;

record Struct__cairo_rectangle_list (
    status : cairo_status_t,
    rectangles : Pointer[cairo_rectangle_t],
    num_rectangles : Int,
);

alias cairo_rectangle_list_t = Struct__cairo_rectangle_list;

external cairo_copy_clip_rectangle_list(
    cr : Pointer[cairo_t]) : Pointer[cairo_rectangle_list_t];

external cairo_rectangle_list_destroy(
    rectangle_list : Pointer[cairo_rectangle_list_t]);

alias cairo_scaled_font_t = Opaque;

alias cairo_font_face_t = Opaque;

record UnnamedStruct (
    index : CULong,
    x : Double,
    y : Double,
);

alias cairo_glyph_t = UnnamedStruct;

external cairo_glyph_allocate(
    num_glyphs : Int) : Pointer[cairo_glyph_t];

external cairo_glyph_free(
    glyphs : Pointer[cairo_glyph_t]);

record UnnamedStruct2 (
    num_bytes : Int,
    num_glyphs : Int,
);

alias cairo_text_cluster_t = UnnamedStruct2;

external cairo_text_cluster_allocate(
    num_clusters : Int) : Pointer[cairo_text_cluster_t];

external cairo_text_cluster_free(
    clusters : Pointer[cairo_text_cluster_t]);

alias CAIRO_TEXT_CLUSTER_FLAG_BACKWARD = 1;

alias cairo_text_cluster_flags_t = Int;

record UnnamedStruct3 (
    x_bearing : Double,
    y_bearing : Double,
    width : Double,
    height : Double,
    x_advance : Double,
    y_advance : Double,
);

alias cairo_text_extents_t = UnnamedStruct3;

record UnnamedStruct4 (
    ascent : Double,
    descent : Double,
    height : Double,
    max_x_advance : Double,
    max_y_advance : Double,
);

alias cairo_font_extents_t = UnnamedStruct4;

alias CAIRO_FONT_SLANT_NORMAL = 0;
alias CAIRO_FONT_SLANT_ITALIC = 1;
alias CAIRO_FONT_SLANT_OBLIQUE = 2;

alias cairo_font_slant_t = Int;

alias CAIRO_FONT_WEIGHT_NORMAL = 0;
alias CAIRO_FONT_WEIGHT_BOLD = 1;

alias cairo_font_weight_t = Int;

alias CAIRO_SUBPIXEL_ORDER_DEFAULT = 0;
alias CAIRO_SUBPIXEL_ORDER_RGB = 1;
alias CAIRO_SUBPIXEL_ORDER_BGR = 2;
alias CAIRO_SUBPIXEL_ORDER_VRGB = 3;
alias CAIRO_SUBPIXEL_ORDER_VBGR = 4;

alias cairo_subpixel_order_t = Int;

alias CAIRO_HINT_STYLE_DEFAULT = 0;
alias CAIRO_HINT_STYLE_NONE = 1;
alias CAIRO_HINT_STYLE_SLIGHT = 2;
alias CAIRO_HINT_STYLE_MEDIUM = 3;
alias CAIRO_HINT_STYLE_FULL = 4;

alias cairo_hint_style_t = Int;

alias CAIRO_HINT_METRICS_DEFAULT = 0;
alias CAIRO_HINT_METRICS_OFF = 1;
alias CAIRO_HINT_METRICS_ON = 2;

alias cairo_hint_metrics_t = Int;

alias cairo_font_options_t = Opaque;

external cairo_font_options_create() : Pointer[cairo_font_options_t];

external cairo_font_options_copy(
    original : Pointer[cairo_font_options_t]) : Pointer[cairo_font_options_t];

external cairo_font_options_destroy(
    options : Pointer[cairo_font_options_t]);

external cairo_font_options_status(
    options : Pointer[cairo_font_options_t]) : cairo_status_t;

external cairo_font_options_merge(
    options : Pointer[cairo_font_options_t],
    other : Pointer[cairo_font_options_t]);

external cairo_font_options_equal(
    options : Pointer[cairo_font_options_t],
    other : Pointer[cairo_font_options_t]) : Int;

external cairo_font_options_hash(
    options : Pointer[cairo_font_options_t]) : CULong;

external cairo_font_options_set_antialias(
    options : Pointer[cairo_font_options_t],
    antialias : cairo_antialias_t);

external cairo_font_options_get_antialias(
    options : Pointer[cairo_font_options_t]) : cairo_antialias_t;

external cairo_font_options_set_subpixel_order(
    options : Pointer[cairo_font_options_t],
    subpixel_order : cairo_subpixel_order_t);

external cairo_font_options_get_subpixel_order(
    options : Pointer[cairo_font_options_t]) : cairo_subpixel_order_t;

external cairo_font_options_set_hint_style(
    options : Pointer[cairo_font_options_t],
    hint_style : cairo_hint_style_t);

external cairo_font_options_get_hint_style(
    options : Pointer[cairo_font_options_t]) : cairo_hint_style_t;

external cairo_font_options_set_hint_metrics(
    options : Pointer[cairo_font_options_t],
    hint_metrics : cairo_hint_metrics_t);

external cairo_font_options_get_hint_metrics(
    options : Pointer[cairo_font_options_t]) : cairo_hint_metrics_t;

external cairo_select_font_face(
    cr : Pointer[cairo_t],
    family : Pointer[CChar],
    slant : cairo_font_slant_t,
    weight : cairo_font_weight_t);

external cairo_set_font_size(
    cr : Pointer[cairo_t],
    size : Double);

external cairo_set_font_matrix(
    cr : Pointer[cairo_t],
    matrix : Pointer[cairo_matrix_t]);

external cairo_get_font_matrix(
    cr : Pointer[cairo_t],
    matrix : Pointer[cairo_matrix_t]);

external cairo_set_font_options(
    cr : Pointer[cairo_t],
    options : Pointer[cairo_font_options_t]);

external cairo_get_font_options(
    cr : Pointer[cairo_t],
    options : Pointer[cairo_font_options_t]);

external cairo_set_font_face(
    cr : Pointer[cairo_t],
    font_face : Pointer[cairo_font_face_t]);

external cairo_get_font_face(
    cr : Pointer[cairo_t]) : Pointer[cairo_font_face_t];

external cairo_set_scaled_font(
    cr : Pointer[cairo_t],
    scaled_font : Pointer[cairo_scaled_font_t]);

external cairo_get_scaled_font(
    cr : Pointer[cairo_t]) : Pointer[cairo_scaled_font_t];

external cairo_show_text(
    cr : Pointer[cairo_t],
    utf8 : Pointer[CChar]);

external cairo_show_glyphs(
    cr : Pointer[cairo_t],
    glyphs : Pointer[cairo_glyph_t],
    num_glyphs : Int);

external cairo_show_text_glyphs(
    cr : Pointer[cairo_t],
    utf8 : Pointer[CChar],
    utf8_len : Int,
    glyphs : Pointer[cairo_glyph_t],
    num_glyphs : Int,
    clusters : Pointer[cairo_text_cluster_t],
    num_clusters : Int,
    cluster_flags : cairo_text_cluster_flags_t);

external cairo_text_path(
    cr : Pointer[cairo_t],
    utf8 : Pointer[CChar]);

external cairo_glyph_path(
    cr : Pointer[cairo_t],
    glyphs : Pointer[cairo_glyph_t],
    num_glyphs : Int);

external cairo_text_extents(
    cr : Pointer[cairo_t],
    utf8 : Pointer[CChar],
    extents : Pointer[cairo_text_extents_t]);

external cairo_glyph_extents(
    cr : Pointer[cairo_t],
    glyphs : Pointer[cairo_glyph_t],
    num_glyphs : Int,
    extents : Pointer[cairo_text_extents_t]);

external cairo_font_extents(
    cr : Pointer[cairo_t],
    extents : Pointer[cairo_font_extents_t]);

external cairo_font_face_reference(
    font_face : Pointer[cairo_font_face_t]) : Pointer[cairo_font_face_t];

external cairo_font_face_destroy(
    font_face : Pointer[cairo_font_face_t]);

external cairo_font_face_get_reference_count(
    font_face : Pointer[cairo_font_face_t]) : UInt;

external cairo_font_face_status(
    font_face : Pointer[cairo_font_face_t]) : cairo_status_t;

alias CAIRO_FONT_TYPE_TOY = 0;
alias CAIRO_FONT_TYPE_FT = 1;
alias CAIRO_FONT_TYPE_WIN32 = 2;
alias CAIRO_FONT_TYPE_QUARTZ = 3;
alias CAIRO_FONT_TYPE_USER = 4;

alias cairo_font_type_t = Int;

external cairo_font_face_get_type(
    font_face : Pointer[cairo_font_face_t]) : cairo_font_type_t;

external cairo_font_face_get_user_data(
    font_face : Pointer[cairo_font_face_t],
    key : Pointer[cairo_user_data_key_t]) : RawPointer;

external cairo_font_face_set_user_data(
    font_face : Pointer[cairo_font_face_t],
    key : Pointer[cairo_user_data_key_t],
    user_data : RawPointer,
    destroy : cairo_destroy_func_t) : cairo_status_t;

external cairo_scaled_font_create(
    font_face : Pointer[cairo_font_face_t],
    font_matrix : Pointer[cairo_matrix_t],
    ctm : Pointer[cairo_matrix_t],
    options : Pointer[cairo_font_options_t]) : Pointer[cairo_scaled_font_t];

external cairo_scaled_font_reference(
    scaled_font : Pointer[cairo_scaled_font_t]) : Pointer[cairo_scaled_font_t];

external cairo_scaled_font_destroy(
    scaled_font : Pointer[cairo_scaled_font_t]);

external cairo_scaled_font_get_reference_count(
    scaled_font : Pointer[cairo_scaled_font_t]) : UInt;

external cairo_scaled_font_status(
    scaled_font : Pointer[cairo_scaled_font_t]) : cairo_status_t;

external cairo_scaled_font_get_type(
    scaled_font : Pointer[cairo_scaled_font_t]) : cairo_font_type_t;

external cairo_scaled_font_get_user_data(
    scaled_font : Pointer[cairo_scaled_font_t],
    key : Pointer[cairo_user_data_key_t]) : RawPointer;

external cairo_scaled_font_set_user_data(
    scaled_font : Pointer[cairo_scaled_font_t],
    key : Pointer[cairo_user_data_key_t],
    user_data : RawPointer,
    destroy : cairo_destroy_func_t) : cairo_status_t;

external cairo_scaled_font_extents(
    scaled_font : Pointer[cairo_scaled_font_t],
    extents : Pointer[cairo_font_extents_t]);

external cairo_scaled_font_text_extents(
    scaled_font : Pointer[cairo_scaled_font_t],
    utf8 : Pointer[CChar],
    extents : Pointer[cairo_text_extents_t]);

external cairo_scaled_font_glyph_extents(
    scaled_font : Pointer[cairo_scaled_font_t],
    glyphs : Pointer[cairo_glyph_t],
    num_glyphs : Int,
    extents : Pointer[cairo_text_extents_t]);

external cairo_scaled_font_text_to_glyphs(
    scaled_font : Pointer[cairo_scaled_font_t],
    x : Double,
    y : Double,
    utf8 : Pointer[CChar],
    utf8_len : Int,
    glyphs : Pointer[Pointer[cairo_glyph_t]],
    num_glyphs : Pointer[Int],
    clusters : Pointer[Pointer[cairo_text_cluster_t]],
    num_clusters : Pointer[Int],
    cluster_flags : Pointer[cairo_text_cluster_flags_t]) : cairo_status_t;

external cairo_scaled_font_get_font_face(
    scaled_font : Pointer[cairo_scaled_font_t]) : Pointer[cairo_font_face_t];

external cairo_scaled_font_get_font_matrix(
    scaled_font : Pointer[cairo_scaled_font_t],
    font_matrix : Pointer[cairo_matrix_t]);

external cairo_scaled_font_get_ctm(
    scaled_font : Pointer[cairo_scaled_font_t],
    ctm : Pointer[cairo_matrix_t]);

external cairo_scaled_font_get_scale_matrix(
    scaled_font : Pointer[cairo_scaled_font_t],
    scale_matrix : Pointer[cairo_matrix_t]);

external cairo_scaled_font_get_font_options(
    scaled_font : Pointer[cairo_scaled_font_t],
    options : Pointer[cairo_font_options_t]);

external cairo_toy_font_face_create(
    family : Pointer[CChar],
    slant : cairo_font_slant_t,
    weight : cairo_font_weight_t) : Pointer[cairo_font_face_t];

external cairo_toy_font_face_get_family(
    font_face : Pointer[cairo_font_face_t]) : Pointer[CChar];

external cairo_toy_font_face_get_slant(
    font_face : Pointer[cairo_font_face_t]) : cairo_font_slant_t;

external cairo_toy_font_face_get_weight(
    font_face : Pointer[cairo_font_face_t]) : cairo_font_weight_t;

external cairo_user_font_face_create() : Pointer[cairo_font_face_t];

alias cairo_user_scaled_font_init_func_t = CCodePointer[[OpaquePointer,OpaquePointer,Pointer[UnnamedStruct4]],[Int]];

alias cairo_user_scaled_font_render_glyph_func_t = CCodePointer[[OpaquePointer,CULong,OpaquePointer,Pointer[UnnamedStruct3]],[Int]];

alias cairo_user_scaled_font_text_to_glyphs_func_t = CCodePointer[[OpaquePointer,Pointer[CChar],Int,Pointer[Pointer[UnnamedStruct]],Pointer[Int],Pointer[Pointer[UnnamedStruct2]],Pointer[Int],Pointer[Int]],[Int]];

alias cairo_user_scaled_font_unicode_to_glyph_func_t = CCodePointer[[OpaquePointer,CULong,Pointer[CULong]],[Int]];

external cairo_user_font_face_set_init_func(
    font_face : Pointer[cairo_font_face_t],
    init_func : cairo_user_scaled_font_init_func_t);

external cairo_user_font_face_set_render_glyph_func(
    font_face : Pointer[cairo_font_face_t],
    render_glyph_func : cairo_user_scaled_font_render_glyph_func_t);

external cairo_user_font_face_set_text_to_glyphs_func(
    font_face : Pointer[cairo_font_face_t],
    text_to_glyphs_func : cairo_user_scaled_font_text_to_glyphs_func_t);

external cairo_user_font_face_set_unicode_to_glyph_func(
    font_face : Pointer[cairo_font_face_t],
    unicode_to_glyph_func : cairo_user_scaled_font_unicode_to_glyph_func_t);

external cairo_user_font_face_get_init_func(
    font_face : Pointer[cairo_font_face_t]) : cairo_user_scaled_font_init_func_t;

external cairo_user_font_face_get_render_glyph_func(
    font_face : Pointer[cairo_font_face_t]) : cairo_user_scaled_font_render_glyph_func_t;

external cairo_user_font_face_get_text_to_glyphs_func(
    font_face : Pointer[cairo_font_face_t]) : cairo_user_scaled_font_text_to_glyphs_func_t;

external cairo_user_font_face_get_unicode_to_glyph_func(
    font_face : Pointer[cairo_font_face_t]) : cairo_user_scaled_font_unicode_to_glyph_func_t;

external cairo_get_operator(
    cr : Pointer[cairo_t]) : cairo_operator_t;

external cairo_get_source(
    cr : Pointer[cairo_t]) : Pointer[cairo_pattern_t];

external cairo_get_tolerance(
    cr : Pointer[cairo_t]) : Double;

external cairo_get_antialias(
    cr : Pointer[cairo_t]) : cairo_antialias_t;

external cairo_has_current_point(
    cr : Pointer[cairo_t]) : Int;

external cairo_get_current_point(
    cr : Pointer[cairo_t],
    x : Pointer[Double],
    y : Pointer[Double]);

external cairo_get_fill_rule(
    cr : Pointer[cairo_t]) : cairo_fill_rule_t;

external cairo_get_line_width(
    cr : Pointer[cairo_t]) : Double;

external cairo_get_line_cap(
    cr : Pointer[cairo_t]) : cairo_line_cap_t;

external cairo_get_line_join(
    cr : Pointer[cairo_t]) : cairo_line_join_t;

external cairo_get_miter_limit(
    cr : Pointer[cairo_t]) : Double;

external cairo_get_dash_count(
    cr : Pointer[cairo_t]) : Int;

external cairo_get_dash(
    cr : Pointer[cairo_t],
    dashes : Pointer[Double],
    offset : Pointer[Double]);

external cairo_get_matrix(
    cr : Pointer[cairo_t],
    matrix : Pointer[cairo_matrix_t]);

external cairo_get_target(
    cr : Pointer[cairo_t]) : Pointer[cairo_surface_t];

external cairo_get_group_target(
    cr : Pointer[cairo_t]) : Pointer[cairo_surface_t];

alias CAIRO_PATH_MOVE_TO = 0;
alias CAIRO_PATH_LINE_TO = 1;
alias CAIRO_PATH_CURVE_TO = 2;
alias CAIRO_PATH_CLOSE_PATH = 3;

alias cairo_path_data_type_t = Int;

alias cairo_path_data_t = AUnionType;

record Struct_cairo_path (
    status : cairo_status_t,
    data : Pointer[cairo_path_data_t],
    num_data : Int,
);

alias cairo_path_t = Struct_cairo_path;

external cairo_copy_path(
    cr : Pointer[cairo_t]) : Pointer[cairo_path_t];

external cairo_copy_path_flat(
    cr : Pointer[cairo_t]) : Pointer[cairo_path_t];

external cairo_append_path(
    cr : Pointer[cairo_t],
    path : Pointer[cairo_path_t]);

external cairo_path_destroy(
    path : Pointer[cairo_path_t]);

external cairo_status(
    cr : Pointer[cairo_t]) : cairo_status_t;

external cairo_status_to_string(
    status : cairo_status_t) : Pointer[CChar];

external cairo_device_reference(
    device : Pointer[cairo_device_t]) : Pointer[cairo_device_t];

alias CAIRO_DEVICE_TYPE_DRM = 0;
alias CAIRO_DEVICE_TYPE_GL = 1;
alias CAIRO_DEVICE_TYPE_SCRIPT = 2;
alias CAIRO_DEVICE_TYPE_XCB = 3;
alias CAIRO_DEVICE_TYPE_XLIB = 4;
alias CAIRO_DEVICE_TYPE_XML = 5;

alias cairo_device_type_t = Int;

external cairo_device_get_type(
    device : Pointer[cairo_device_t]) : cairo_device_type_t;

external cairo_device_status(
    device : Pointer[cairo_device_t]) : cairo_status_t;

external cairo_device_acquire(
    device : Pointer[cairo_device_t]) : cairo_status_t;

external cairo_device_release(
    device : Pointer[cairo_device_t]);

external cairo_device_flush(
    device : Pointer[cairo_device_t]);

external cairo_device_finish(
    device : Pointer[cairo_device_t]);

external cairo_device_destroy(
    device : Pointer[cairo_device_t]);

external cairo_device_get_reference_count(
    device : Pointer[cairo_device_t]) : UInt;

external cairo_device_get_user_data(
    device : Pointer[cairo_device_t],
    key : Pointer[cairo_user_data_key_t]) : RawPointer;

external cairo_device_set_user_data(
    device : Pointer[cairo_device_t],
    key : Pointer[cairo_user_data_key_t],
    user_data : RawPointer,
    destroy : cairo_destroy_func_t) : cairo_status_t;

external cairo_surface_create_similar(
    other : Pointer[cairo_surface_t],
    content : cairo_content_t,
    width : Int,
    height : Int) : Pointer[cairo_surface_t];

external cairo_surface_create_for_rectangle(
    target : Pointer[cairo_surface_t],
    x : Double,
    y : Double,
    width : Double,
    height : Double) : Pointer[cairo_surface_t];

external cairo_surface_reference(
    surface : Pointer[cairo_surface_t]) : Pointer[cairo_surface_t];

external cairo_surface_finish(
    surface : Pointer[cairo_surface_t]);

external cairo_surface_destroy(
    surface : Pointer[cairo_surface_t]);

external cairo_surface_get_device(
    surface : Pointer[cairo_surface_t]) : Pointer[cairo_device_t];

external cairo_surface_get_reference_count(
    surface : Pointer[cairo_surface_t]) : UInt;

external cairo_surface_status(
    surface : Pointer[cairo_surface_t]) : cairo_status_t;

alias CAIRO_SURFACE_TYPE_IMAGE = 0;
alias CAIRO_SURFACE_TYPE_PDF = 1;
alias CAIRO_SURFACE_TYPE_PS = 2;
alias CAIRO_SURFACE_TYPE_XLIB = 3;
alias CAIRO_SURFACE_TYPE_XCB = 4;
alias CAIRO_SURFACE_TYPE_GLITZ = 5;
alias CAIRO_SURFACE_TYPE_QUARTZ = 6;
alias CAIRO_SURFACE_TYPE_WIN32 = 7;
alias CAIRO_SURFACE_TYPE_BEOS = 8;
alias CAIRO_SURFACE_TYPE_DIRECTFB = 9;
alias CAIRO_SURFACE_TYPE_SVG = 10;
alias CAIRO_SURFACE_TYPE_OS2 = 11;
alias CAIRO_SURFACE_TYPE_WIN32_PRINTING = 12;
alias CAIRO_SURFACE_TYPE_QUARTZ_IMAGE = 13;
alias CAIRO_SURFACE_TYPE_SCRIPT = 14;
alias CAIRO_SURFACE_TYPE_QT = 15;
alias CAIRO_SURFACE_TYPE_RECORDING = 16;
alias CAIRO_SURFACE_TYPE_VG = 17;
alias CAIRO_SURFACE_TYPE_GL = 18;
alias CAIRO_SURFACE_TYPE_DRM = 19;
alias CAIRO_SURFACE_TYPE_TEE = 20;
alias CAIRO_SURFACE_TYPE_XML = 21;
alias CAIRO_SURFACE_TYPE_SKIA = 22;
alias CAIRO_SURFACE_TYPE_SUBSURFACE = 23;

alias cairo_surface_type_t = Int;

external cairo_surface_get_type(
    surface : Pointer[cairo_surface_t]) : cairo_surface_type_t;

external cairo_surface_get_content(
    surface : Pointer[cairo_surface_t]) : cairo_content_t;

external cairo_surface_write_to_png(
    surface : Pointer[cairo_surface_t],
    filename : Pointer[CChar]) : cairo_status_t;

external cairo_surface_write_to_png_stream(
    surface : Pointer[cairo_surface_t],
    write_func : cairo_write_func_t,
    closure : RawPointer) : cairo_status_t;

external cairo_surface_get_user_data(
    surface : Pointer[cairo_surface_t],
    key : Pointer[cairo_user_data_key_t]) : RawPointer;

external cairo_surface_set_user_data(
    surface : Pointer[cairo_surface_t],
    key : Pointer[cairo_user_data_key_t],
    user_data : RawPointer,
    destroy : cairo_destroy_func_t) : cairo_status_t;

external cairo_surface_get_mime_data(
    surface : Pointer[cairo_surface_t],
    mime_type : Pointer[CChar],
    data : Pointer[Pointer[CUChar]],
    length : Pointer[CULong]);

external cairo_surface_set_mime_data(
    surface : Pointer[cairo_surface_t],
    mime_type : Pointer[CChar],
    data : Pointer[CUChar],
    length : CULong,
    destroy : cairo_destroy_func_t,
    closure : RawPointer) : cairo_status_t;

external cairo_surface_get_font_options(
    surface : Pointer[cairo_surface_t],
    options : Pointer[cairo_font_options_t]);

external cairo_surface_flush(
    surface : Pointer[cairo_surface_t]);

external cairo_surface_mark_dirty(
    surface : Pointer[cairo_surface_t]);

external cairo_surface_mark_dirty_rectangle(
    surface : Pointer[cairo_surface_t],
    x : Int,
    y : Int,
    width : Int,
    height : Int);

external cairo_surface_set_device_offset(
    surface : Pointer[cairo_surface_t],
    x_offset : Double,
    y_offset : Double);

external cairo_surface_get_device_offset(
    surface : Pointer[cairo_surface_t],
    x_offset : Pointer[Double],
    y_offset : Pointer[Double]);

external cairo_surface_set_fallback_resolution(
    surface : Pointer[cairo_surface_t],
    x_pixels_per_inch : Double,
    y_pixels_per_inch : Double);

external cairo_surface_get_fallback_resolution(
    surface : Pointer[cairo_surface_t],
    x_pixels_per_inch : Pointer[Double],
    y_pixels_per_inch : Pointer[Double]);

external cairo_surface_copy_page(
    surface : Pointer[cairo_surface_t]);

external cairo_surface_show_page(
    surface : Pointer[cairo_surface_t]);

external cairo_surface_has_show_text_glyphs(
    surface : Pointer[cairo_surface_t]) : Int;

alias CAIRO_FORMAT_INVALID = 4294967295;
alias CAIRO_FORMAT_ARGB32 = 0;
alias CAIRO_FORMAT_RGB24 = 1;
alias CAIRO_FORMAT_A8 = 2;
alias CAIRO_FORMAT_A1 = 3;
alias CAIRO_FORMAT_RGB16_565 = 4;

alias cairo_format_t = Int;

external cairo_image_surface_create(
    format : cairo_format_t,
    width : Int,
    height : Int) : Pointer[cairo_surface_t];

external cairo_format_stride_for_width(
    format : cairo_format_t,
    width : Int) : Int;

external cairo_image_surface_create_for_data(
    data : Pointer[CUChar],
    format : cairo_format_t,
    width : Int,
    height : Int,
    stride : Int) : Pointer[cairo_surface_t];

external cairo_image_surface_get_data(
    surface : Pointer[cairo_surface_t]) : Pointer[CUChar];

external cairo_image_surface_get_format(
    surface : Pointer[cairo_surface_t]) : cairo_format_t;

external cairo_image_surface_get_width(
    surface : Pointer[cairo_surface_t]) : Int;

external cairo_image_surface_get_height(
    surface : Pointer[cairo_surface_t]) : Int;

external cairo_image_surface_get_stride(
    surface : Pointer[cairo_surface_t]) : Int;

external cairo_image_surface_create_from_png(
    filename : Pointer[CChar]) : Pointer[cairo_surface_t];

external cairo_image_surface_create_from_png_stream(
    read_func : cairo_read_func_t,
    closure : RawPointer) : Pointer[cairo_surface_t];

external cairo_recording_surface_create(
    content : cairo_content_t,
    extents : Pointer[cairo_rectangle_t]) : Pointer[cairo_surface_t];

external cairo_recording_surface_ink_extents(
    surface : Pointer[cairo_surface_t],
    x0 : Pointer[Double],
    y0 : Pointer[Double],
    width : Pointer[Double],
    height : Pointer[Double]);

external cairo_pattern_create_rgb(
    red : Double,
    green : Double,
    blue : Double) : Pointer[cairo_pattern_t];

external cairo_pattern_create_rgba(
    red : Double,
    green : Double,
    blue : Double,
    alpha : Double) : Pointer[cairo_pattern_t];

external cairo_pattern_create_for_surface(
    surface : Pointer[cairo_surface_t]) : Pointer[cairo_pattern_t];

external cairo_pattern_create_linear(
    x0 : Double,
    y0 : Double,
    x1 : Double,
    y1 : Double) : Pointer[cairo_pattern_t];

external cairo_pattern_create_radial(
    cx0 : Double,
    cy0 : Double,
    radius0 : Double,
    cx1 : Double,
    cy1 : Double,
    radius1 : Double) : Pointer[cairo_pattern_t];

external cairo_pattern_reference(
    pattern : Pointer[cairo_pattern_t]) : Pointer[cairo_pattern_t];

external cairo_pattern_destroy(
    pattern : Pointer[cairo_pattern_t]);

external cairo_pattern_get_reference_count(
    pattern : Pointer[cairo_pattern_t]) : UInt;

external cairo_pattern_status(
    pattern : Pointer[cairo_pattern_t]) : cairo_status_t;

external cairo_pattern_get_user_data(
    pattern : Pointer[cairo_pattern_t],
    key : Pointer[cairo_user_data_key_t]) : RawPointer;

external cairo_pattern_set_user_data(
    pattern : Pointer[cairo_pattern_t],
    key : Pointer[cairo_user_data_key_t],
    user_data : RawPointer,
    destroy : cairo_destroy_func_t) : cairo_status_t;

alias CAIRO_PATTERN_TYPE_SOLID = 0;
alias CAIRO_PATTERN_TYPE_SURFACE = 1;
alias CAIRO_PATTERN_TYPE_LINEAR = 2;
alias CAIRO_PATTERN_TYPE_RADIAL = 3;

alias cairo_pattern_type_t = Int;

external cairo_pattern_get_type(
    pattern : Pointer[cairo_pattern_t]) : cairo_pattern_type_t;

external cairo_pattern_add_color_stop_rgb(
    pattern : Pointer[cairo_pattern_t],
    offset : Double,
    red : Double,
    green : Double,
    blue : Double);

external cairo_pattern_add_color_stop_rgba(
    pattern : Pointer[cairo_pattern_t],
    offset : Double,
    red : Double,
    green : Double,
    blue : Double,
    alpha : Double);

external cairo_pattern_set_matrix(
    pattern : Pointer[cairo_pattern_t],
    matrix : Pointer[cairo_matrix_t]);

external cairo_pattern_get_matrix(
    pattern : Pointer[cairo_pattern_t],
    matrix : Pointer[cairo_matrix_t]);

alias CAIRO_EXTEND_NONE = 0;
alias CAIRO_EXTEND_REPEAT = 1;
alias CAIRO_EXTEND_REFLECT = 2;
alias CAIRO_EXTEND_PAD = 3;

alias cairo_extend_t = Int;

external cairo_pattern_set_extend(
    pattern : Pointer[cairo_pattern_t],
    extend : cairo_extend_t);

external cairo_pattern_get_extend(
    pattern : Pointer[cairo_pattern_t]) : cairo_extend_t;

alias CAIRO_FILTER_FAST = 0;
alias CAIRO_FILTER_GOOD = 1;
alias CAIRO_FILTER_BEST = 2;
alias CAIRO_FILTER_NEAREST = 3;
alias CAIRO_FILTER_BILINEAR = 4;
alias CAIRO_FILTER_GAUSSIAN = 5;

alias cairo_filter_t = Int;

external cairo_pattern_set_filter(
    pattern : Pointer[cairo_pattern_t],
    filter : cairo_filter_t);

external cairo_pattern_get_filter(
    pattern : Pointer[cairo_pattern_t]) : cairo_filter_t;

external cairo_pattern_get_rgba(
    pattern : Pointer[cairo_pattern_t],
    red : Pointer[Double],
    green : Pointer[Double],
    blue : Pointer[Double],
    alpha : Pointer[Double]) : cairo_status_t;

external cairo_pattern_get_surface(
    pattern : Pointer[cairo_pattern_t],
    surface : Pointer[Pointer[cairo_surface_t]]) : cairo_status_t;

external cairo_pattern_get_color_stop_rgba(
    pattern : Pointer[cairo_pattern_t],
    index : Int,
    offset : Pointer[Double],
    red : Pointer[Double],
    green : Pointer[Double],
    blue : Pointer[Double],
    alpha : Pointer[Double]) : cairo_status_t;

external cairo_pattern_get_color_stop_count(
    pattern : Pointer[cairo_pattern_t],
    count : Pointer[Int]) : cairo_status_t;

external cairo_pattern_get_linear_points(
    pattern : Pointer[cairo_pattern_t],
    x0 : Pointer[Double],
    y0 : Pointer[Double],
    x1 : Pointer[Double],
    y1 : Pointer[Double]) : cairo_status_t;

external cairo_pattern_get_radial_circles(
    pattern : Pointer[cairo_pattern_t],
    x0 : Pointer[Double],
    y0 : Pointer[Double],
    r0 : Pointer[Double],
    x1 : Pointer[Double],
    y1 : Pointer[Double],
    r1 : Pointer[Double]) : cairo_status_t;

external cairo_matrix_init(
    matrix : Pointer[cairo_matrix_t],
    xx : Double,
    yx : Double,
    xy : Double,
    yy : Double,
    x0 : Double,
    y0 : Double);

external cairo_matrix_init_identity(
    matrix : Pointer[cairo_matrix_t]);

external cairo_matrix_init_translate(
    matrix : Pointer[cairo_matrix_t],
    tx : Double,
    ty : Double);

external cairo_matrix_init_scale(
    matrix : Pointer[cairo_matrix_t],
    sx : Double,
    sy : Double);

external cairo_matrix_init_rotate(
    matrix : Pointer[cairo_matrix_t],
    radians : Double);

external cairo_matrix_translate(
    matrix : Pointer[cairo_matrix_t],
    tx : Double,
    ty : Double);

external cairo_matrix_scale(
    matrix : Pointer[cairo_matrix_t],
    sx : Double,
    sy : Double);

external cairo_matrix_rotate(
    matrix : Pointer[cairo_matrix_t],
    radians : Double);

external cairo_matrix_invert(
    matrix : Pointer[cairo_matrix_t]) : cairo_status_t;

external cairo_matrix_multiply(
    result : Pointer[cairo_matrix_t],
    a : Pointer[cairo_matrix_t],
    b : Pointer[cairo_matrix_t]);

external cairo_matrix_transform_distance(
    matrix : Pointer[cairo_matrix_t],
    dx : Pointer[Double],
    dy : Pointer[Double]);

external cairo_matrix_transform_point(
    matrix : Pointer[cairo_matrix_t],
    x : Pointer[Double],
    y : Pointer[Double]);

alias cairo_region_t = Opaque;

record Struct__cairo_rectangle_int (
    x : Int,
    y : Int,
    width : Int,
    height : Int,
);

alias cairo_rectangle_int_t = Struct__cairo_rectangle_int;

alias CAIRO_REGION_OVERLAP_IN = 0;
alias CAIRO_REGION_OVERLAP_OUT = 1;
alias CAIRO_REGION_OVERLAP_PART = 2;

alias cairo_region_overlap_t = Int;

external cairo_region_create() : Pointer[cairo_region_t];

external cairo_region_create_rectangle(
    rectangle : Pointer[cairo_rectangle_int_t]) : Pointer[cairo_region_t];

external cairo_region_create_rectangles(
    rects : Pointer[cairo_rectangle_int_t],
    count : Int) : Pointer[cairo_region_t];

external cairo_region_copy(
    original : Pointer[cairo_region_t]) : Pointer[cairo_region_t];

external cairo_region_reference(
    region : Pointer[cairo_region_t]) : Pointer[cairo_region_t];

external cairo_region_destroy(
    region : Pointer[cairo_region_t]);

external cairo_region_equal(
    a : Pointer[cairo_region_t],
    b : Pointer[cairo_region_t]) : Int;

external cairo_region_status(
    region : Pointer[cairo_region_t]) : cairo_status_t;

external cairo_region_get_extents(
    region : Pointer[cairo_region_t],
    extents : Pointer[cairo_rectangle_int_t]);

external cairo_region_num_rectangles(
    region : Pointer[cairo_region_t]) : Int;

external cairo_region_get_rectangle(
    region : Pointer[cairo_region_t],
    nth : Int,
    rectangle : Pointer[cairo_rectangle_int_t]);

external cairo_region_is_empty(
    region : Pointer[cairo_region_t]) : Int;

external cairo_region_contains_rectangle(
    region : Pointer[cairo_region_t],
    rectangle : Pointer[cairo_rectangle_int_t]) : cairo_region_overlap_t;

external cairo_region_contains_point(
    region : Pointer[cairo_region_t],
    x : Int,
    y : Int) : Int;

external cairo_region_translate(
    region : Pointer[cairo_region_t],
    dx : Int,
    dy : Int);

external cairo_region_subtract(
    dst : Pointer[cairo_region_t],
    other : Pointer[cairo_region_t]) : cairo_status_t;

external cairo_region_subtract_rectangle(
    dst : Pointer[cairo_region_t],
    rectangle : Pointer[cairo_rectangle_int_t]) : cairo_status_t;

external cairo_region_intersect(
    dst : Pointer[cairo_region_t],
    other : Pointer[cairo_region_t]) : cairo_status_t;

external cairo_region_intersect_rectangle(
    dst : Pointer[cairo_region_t],
    rectangle : Pointer[cairo_rectangle_int_t]) : cairo_status_t;

external cairo_region_union(
    dst : Pointer[cairo_region_t],
    other : Pointer[cairo_region_t]) : cairo_status_t;

external cairo_region_union_rectangle(
    dst : Pointer[cairo_region_t],
    rectangle : Pointer[cairo_rectangle_int_t]) : cairo_status_t;

external cairo_region_xor(
    dst : Pointer[cairo_region_t],
    other : Pointer[cairo_region_t]) : cairo_status_t;

external cairo_region_xor_rectangle(
    dst : Pointer[cairo_region_t],
    rectangle : Pointer[cairo_rectangle_int_t]) : cairo_status_t;

external cairo_debug_reset_static_data();
