// automatically generated by clay-bindgen
import glib.generated.*;

external (cdecl) cairo_version() : CInt;

external (cdecl) cairo_version_string() : Pointer[CChar];

alias cairo_bool_t = CInt;

alias Struct__cairo = Opaque;

alias cairo_t = Struct__cairo;

alias Struct__cairo_surface = Opaque;

alias cairo_surface_t = Struct__cairo_surface;

alias Struct__cairo_device = Opaque;

alias cairo_device_t = Struct__cairo_device;

record Struct__cairo_matrix (
    xx : CDouble,
    yx : CDouble,
    xy : CDouble,
    yy : CDouble,
    x0 : CDouble,
    y0 : CDouble,
);

alias cairo_matrix_t = Struct__cairo_matrix;

alias Struct__cairo_pattern = Opaque;

alias cairo_pattern_t = Struct__cairo_pattern;

alias cairo_destroy_func_t = CCodePointer[[OpaquePointer],[]];

record Struct__cairo_user_data_key (
    unused : CInt,
);

alias cairo_user_data_key_t = Struct__cairo_user_data_key;

alias Enum__cairo_status = CUInt;
alias CAIRO_STATUS_SUCCESS = CUInt(0);
alias CAIRO_STATUS_NO_MEMORY = CUInt(1);
alias CAIRO_STATUS_INVALID_RESTORE = CUInt(2);
alias CAIRO_STATUS_INVALID_POP_GROUP = CUInt(3);
alias CAIRO_STATUS_NO_CURRENT_POINT = CUInt(4);
alias CAIRO_STATUS_INVALID_MATRIX = CUInt(5);
alias CAIRO_STATUS_INVALID_STATUS = CUInt(6);
alias CAIRO_STATUS_NULL_POINTER = CUInt(7);
alias CAIRO_STATUS_INVALID_STRING = CUInt(8);
alias CAIRO_STATUS_INVALID_PATH_DATA = CUInt(9);
alias CAIRO_STATUS_READ_ERROR = CUInt(10);
alias CAIRO_STATUS_WRITE_ERROR = CUInt(11);
alias CAIRO_STATUS_SURFACE_FINISHED = CUInt(12);
alias CAIRO_STATUS_SURFACE_TYPE_MISMATCH = CUInt(13);
alias CAIRO_STATUS_PATTERN_TYPE_MISMATCH = CUInt(14);
alias CAIRO_STATUS_INVALID_CONTENT = CUInt(15);
alias CAIRO_STATUS_INVALID_FORMAT = CUInt(16);
alias CAIRO_STATUS_INVALID_VISUAL = CUInt(17);
alias CAIRO_STATUS_FILE_NOT_FOUND = CUInt(18);
alias CAIRO_STATUS_INVALID_DASH = CUInt(19);
alias CAIRO_STATUS_INVALID_DSC_COMMENT = CUInt(20);
alias CAIRO_STATUS_INVALID_INDEX = CUInt(21);
alias CAIRO_STATUS_CLIP_NOT_REPRESENTABLE = CUInt(22);
alias CAIRO_STATUS_TEMP_FILE_ERROR = CUInt(23);
alias CAIRO_STATUS_INVALID_STRIDE = CUInt(24);
alias CAIRO_STATUS_FONT_TYPE_MISMATCH = CUInt(25);
alias CAIRO_STATUS_USER_FONT_IMMUTABLE = CUInt(26);
alias CAIRO_STATUS_USER_FONT_ERROR = CUInt(27);
alias CAIRO_STATUS_NEGATIVE_COUNT = CUInt(28);
alias CAIRO_STATUS_INVALID_CLUSTERS = CUInt(29);
alias CAIRO_STATUS_INVALID_SLANT = CUInt(30);
alias CAIRO_STATUS_INVALID_WEIGHT = CUInt(31);
alias CAIRO_STATUS_INVALID_SIZE = CUInt(32);
alias CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED = CUInt(33);
alias CAIRO_STATUS_DEVICE_TYPE_MISMATCH = CUInt(34);
alias CAIRO_STATUS_DEVICE_ERROR = CUInt(35);
alias CAIRO_STATUS_INVALID_MESH_CONSTRUCTION = CUInt(36);
alias CAIRO_STATUS_DEVICE_FINISHED = CUInt(37);
alias CAIRO_STATUS_LAST_STATUS = CUInt(38);

alias cairo_status_t = Enum__cairo_status;

alias Enum__cairo_content = CUInt;
alias CAIRO_CONTENT_COLOR = CUInt(4096);
alias CAIRO_CONTENT_ALPHA = CUInt(8192);
alias CAIRO_CONTENT_COLOR_ALPHA = CUInt(12288);

alias cairo_content_t = Enum__cairo_content;

alias Enum__cairo_format = CInt;
alias CAIRO_FORMAT_INVALID = CInt(-1);
alias CAIRO_FORMAT_ARGB32 = CInt(0);
alias CAIRO_FORMAT_RGB24 = CInt(1);
alias CAIRO_FORMAT_A8 = CInt(2);
alias CAIRO_FORMAT_A1 = CInt(3);
alias CAIRO_FORMAT_RGB16_565 = CInt(4);
alias CAIRO_FORMAT_RGB30 = CInt(5);

alias cairo_format_t = Enum__cairo_format;

alias cairo_write_func_t = CCodePointer[[OpaquePointer, Pointer[CUChar], CUInt],[cairo_status_t]];

alias cairo_read_func_t = CCodePointer[[OpaquePointer, Pointer[CUChar], CUInt],[cairo_status_t]];

record Struct__cairo_rectangle_int (
    x : CInt,
    y : CInt,
    width : CInt,
    height : CInt,
);

alias cairo_rectangle_int_t = Struct__cairo_rectangle_int;

external (cdecl) cairo_create(arg0:Pointer[cairo_surface_t]) : Pointer[cairo_t];

external (cdecl) cairo_reference(arg0:Pointer[cairo_t]) : Pointer[cairo_t];

external (cdecl) cairo_destroy(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_get_reference_count(arg0:Pointer[cairo_t]) : CUInt;

external (cdecl) cairo_get_user_data(arg0:Pointer[cairo_t], arg1:Pointer[cairo_user_data_key_t]) : OpaquePointer;

external (cdecl) cairo_set_user_data(arg0:Pointer[cairo_t], arg1:Pointer[cairo_user_data_key_t], arg2:OpaquePointer, arg3:cairo_destroy_func_t) : cairo_status_t;

external (cdecl) cairo_save(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_restore(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_push_group(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_push_group_with_content(arg0:Pointer[cairo_t], arg1:cairo_content_t) : ;

external (cdecl) cairo_pop_group(arg0:Pointer[cairo_t]) : Pointer[cairo_pattern_t];

external (cdecl) cairo_pop_group_to_source(arg0:Pointer[cairo_t]) : ;

alias Enum__cairo_operator = CUInt;
alias CAIRO_OPERATOR_CLEAR = CUInt(0);
alias CAIRO_OPERATOR_SOURCE = CUInt(1);
alias CAIRO_OPERATOR_OVER = CUInt(2);
alias CAIRO_OPERATOR_IN = CUInt(3);
alias CAIRO_OPERATOR_OUT = CUInt(4);
alias CAIRO_OPERATOR_ATOP = CUInt(5);
alias CAIRO_OPERATOR_DEST = CUInt(6);
alias CAIRO_OPERATOR_DEST_OVER = CUInt(7);
alias CAIRO_OPERATOR_DEST_IN = CUInt(8);
alias CAIRO_OPERATOR_DEST_OUT = CUInt(9);
alias CAIRO_OPERATOR_DEST_ATOP = CUInt(10);
alias CAIRO_OPERATOR_XOR = CUInt(11);
alias CAIRO_OPERATOR_ADD = CUInt(12);
alias CAIRO_OPERATOR_SATURATE = CUInt(13);
alias CAIRO_OPERATOR_MULTIPLY = CUInt(14);
alias CAIRO_OPERATOR_SCREEN = CUInt(15);
alias CAIRO_OPERATOR_OVERLAY = CUInt(16);
alias CAIRO_OPERATOR_DARKEN = CUInt(17);
alias CAIRO_OPERATOR_LIGHTEN = CUInt(18);
alias CAIRO_OPERATOR_COLOR_DODGE = CUInt(19);
alias CAIRO_OPERATOR_COLOR_BURN = CUInt(20);
alias CAIRO_OPERATOR_HARD_LIGHT = CUInt(21);
alias CAIRO_OPERATOR_SOFT_LIGHT = CUInt(22);
alias CAIRO_OPERATOR_DIFFERENCE = CUInt(23);
alias CAIRO_OPERATOR_EXCLUSION = CUInt(24);
alias CAIRO_OPERATOR_HSL_HUE = CUInt(25);
alias CAIRO_OPERATOR_HSL_SATURATION = CUInt(26);
alias CAIRO_OPERATOR_HSL_COLOR = CUInt(27);
alias CAIRO_OPERATOR_HSL_LUMINOSITY = CUInt(28);

alias cairo_operator_t = Enum__cairo_operator;

external (cdecl) cairo_set_operator(arg0:Pointer[cairo_t], arg1:cairo_operator_t) : ;

external (cdecl) cairo_set_source(arg0:Pointer[cairo_t], arg1:Pointer[cairo_pattern_t]) : ;

external (cdecl) cairo_set_source_rgb(arg0:Pointer[cairo_t], arg1:CDouble, arg2:CDouble, arg3:CDouble) : ;

external (cdecl) cairo_set_source_rgba(arg0:Pointer[cairo_t], arg1:CDouble, arg2:CDouble, arg3:CDouble, arg4:CDouble) : ;

external (cdecl) cairo_set_source_surface(arg0:Pointer[cairo_t], arg1:Pointer[cairo_surface_t], arg2:CDouble, arg3:CDouble) : ;

external (cdecl) cairo_set_tolerance(arg0:Pointer[cairo_t], arg1:CDouble) : ;

alias Enum__cairo_antialias = CUInt;
alias CAIRO_ANTIALIAS_DEFAULT = CUInt(0);
alias CAIRO_ANTIALIAS_NONE = CUInt(1);
alias CAIRO_ANTIALIAS_GRAY = CUInt(2);
alias CAIRO_ANTIALIAS_SUBPIXEL = CUInt(3);
alias CAIRO_ANTIALIAS_FAST = CUInt(4);
alias CAIRO_ANTIALIAS_GOOD = CUInt(5);
alias CAIRO_ANTIALIAS_BEST = CUInt(6);

alias cairo_antialias_t = Enum__cairo_antialias;

external (cdecl) cairo_set_antialias(arg0:Pointer[cairo_t], arg1:cairo_antialias_t) : ;

alias Enum__cairo_fill_rule = CUInt;
alias CAIRO_FILL_RULE_WINDING = CUInt(0);
alias CAIRO_FILL_RULE_EVEN_ODD = CUInt(1);

alias cairo_fill_rule_t = Enum__cairo_fill_rule;

external (cdecl) cairo_set_fill_rule(arg0:Pointer[cairo_t], arg1:cairo_fill_rule_t) : ;

external (cdecl) cairo_set_line_width(arg0:Pointer[cairo_t], arg1:CDouble) : ;

alias Enum__cairo_line_cap = CUInt;
alias CAIRO_LINE_CAP_BUTT = CUInt(0);
alias CAIRO_LINE_CAP_ROUND = CUInt(1);
alias CAIRO_LINE_CAP_SQUARE = CUInt(2);

alias cairo_line_cap_t = Enum__cairo_line_cap;

external (cdecl) cairo_set_line_cap(arg0:Pointer[cairo_t], arg1:cairo_line_cap_t) : ;

alias Enum__cairo_line_join = CUInt;
alias CAIRO_LINE_JOIN_MITER = CUInt(0);
alias CAIRO_LINE_JOIN_ROUND = CUInt(1);
alias CAIRO_LINE_JOIN_BEVEL = CUInt(2);

alias cairo_line_join_t = Enum__cairo_line_join;

external (cdecl) cairo_set_line_join(arg0:Pointer[cairo_t], arg1:cairo_line_join_t) : ;

external (cdecl) cairo_set_dash(arg0:Pointer[cairo_t], arg1:Pointer[CDouble], arg2:CInt, arg3:CDouble) : ;

external (cdecl) cairo_set_miter_limit(arg0:Pointer[cairo_t], arg1:CDouble) : ;

external (cdecl) cairo_translate(arg0:Pointer[cairo_t], arg1:CDouble, arg2:CDouble) : ;

external (cdecl) cairo_scale(arg0:Pointer[cairo_t], arg1:CDouble, arg2:CDouble) : ;

external (cdecl) cairo_rotate(arg0:Pointer[cairo_t], arg1:CDouble) : ;

external (cdecl) cairo_transform(arg0:Pointer[cairo_t], arg1:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_set_matrix(arg0:Pointer[cairo_t], arg1:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_identity_matrix(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_user_to_device(arg0:Pointer[cairo_t], arg1:Pointer[CDouble], arg2:Pointer[CDouble]) : ;

external (cdecl) cairo_user_to_device_distance(arg0:Pointer[cairo_t], arg1:Pointer[CDouble], arg2:Pointer[CDouble]) : ;

external (cdecl) cairo_device_to_user(arg0:Pointer[cairo_t], arg1:Pointer[CDouble], arg2:Pointer[CDouble]) : ;

external (cdecl) cairo_device_to_user_distance(arg0:Pointer[cairo_t], arg1:Pointer[CDouble], arg2:Pointer[CDouble]) : ;

external (cdecl) cairo_new_path(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_move_to(arg0:Pointer[cairo_t], arg1:CDouble, arg2:CDouble) : ;

external (cdecl) cairo_new_sub_path(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_line_to(arg0:Pointer[cairo_t], arg1:CDouble, arg2:CDouble) : ;

external (cdecl) cairo_curve_to(arg0:Pointer[cairo_t], arg1:CDouble, arg2:CDouble, arg3:CDouble, arg4:CDouble, arg5:CDouble, arg6:CDouble) : ;

external (cdecl) cairo_arc(arg0:Pointer[cairo_t], arg1:CDouble, arg2:CDouble, arg3:CDouble, arg4:CDouble, arg5:CDouble) : ;

external (cdecl) cairo_arc_negative(arg0:Pointer[cairo_t], arg1:CDouble, arg2:CDouble, arg3:CDouble, arg4:CDouble, arg5:CDouble) : ;

external (cdecl) cairo_rel_move_to(arg0:Pointer[cairo_t], arg1:CDouble, arg2:CDouble) : ;

external (cdecl) cairo_rel_line_to(arg0:Pointer[cairo_t], arg1:CDouble, arg2:CDouble) : ;

external (cdecl) cairo_rel_curve_to(arg0:Pointer[cairo_t], arg1:CDouble, arg2:CDouble, arg3:CDouble, arg4:CDouble, arg5:CDouble, arg6:CDouble) : ;

external (cdecl) cairo_rectangle(arg0:Pointer[cairo_t], arg1:CDouble, arg2:CDouble, arg3:CDouble, arg4:CDouble) : ;

external (cdecl) cairo_close_path(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_path_extents(arg0:Pointer[cairo_t], arg1:Pointer[CDouble], arg2:Pointer[CDouble], arg3:Pointer[CDouble], arg4:Pointer[CDouble]) : ;

external (cdecl) cairo_paint(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_paint_with_alpha(arg0:Pointer[cairo_t], arg1:CDouble) : ;

external (cdecl) cairo_mask(arg0:Pointer[cairo_t], arg1:Pointer[cairo_pattern_t]) : ;

external (cdecl) cairo_mask_surface(arg0:Pointer[cairo_t], arg1:Pointer[cairo_surface_t], arg2:CDouble, arg3:CDouble) : ;

external (cdecl) cairo_stroke(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_stroke_preserve(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_fill(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_fill_preserve(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_copy_page(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_show_page(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_in_stroke(arg0:Pointer[cairo_t], arg1:CDouble, arg2:CDouble) : cairo_bool_t;

external (cdecl) cairo_in_fill(arg0:Pointer[cairo_t], arg1:CDouble, arg2:CDouble) : cairo_bool_t;

external (cdecl) cairo_in_clip(arg0:Pointer[cairo_t], arg1:CDouble, arg2:CDouble) : cairo_bool_t;

external (cdecl) cairo_stroke_extents(arg0:Pointer[cairo_t], arg1:Pointer[CDouble], arg2:Pointer[CDouble], arg3:Pointer[CDouble], arg4:Pointer[CDouble]) : ;

external (cdecl) cairo_fill_extents(arg0:Pointer[cairo_t], arg1:Pointer[CDouble], arg2:Pointer[CDouble], arg3:Pointer[CDouble], arg4:Pointer[CDouble]) : ;

external (cdecl) cairo_reset_clip(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_clip(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_clip_preserve(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_clip_extents(arg0:Pointer[cairo_t], arg1:Pointer[CDouble], arg2:Pointer[CDouble], arg3:Pointer[CDouble], arg4:Pointer[CDouble]) : ;

record Struct__cairo_rectangle (
    x : CDouble,
    y : CDouble,
    width : CDouble,
    height : CDouble,
);

alias cairo_rectangle_t = Struct__cairo_rectangle;

record Struct__cairo_rectangle_list (
    status : cairo_status_t,
    rectangles : Pointer[cairo_rectangle_t],
    num_rectangles : CInt,
);

alias cairo_rectangle_list_t = Struct__cairo_rectangle_list;

external (cdecl) cairo_copy_clip_rectangle_list(arg0:Pointer[cairo_t]) : Pointer[cairo_rectangle_list_t];

external (cdecl) cairo_rectangle_list_destroy(arg0:Pointer[cairo_rectangle_list_t]) : ;

alias Struct__cairo_scaled_font = Opaque;

alias cairo_scaled_font_t = Struct__cairo_scaled_font;

alias Struct__cairo_font_face = Opaque;

alias cairo_font_face_t = Struct__cairo_font_face;

record cairo_glyph_t (
    index : CULong,
    x : CDouble,
    y : CDouble,
);

external (cdecl) cairo_glyph_allocate(arg0:CInt) : Pointer[cairo_glyph_t];

external (cdecl) cairo_glyph_free(arg0:Pointer[cairo_glyph_t]) : ;

record cairo_text_cluster_t (
    num_bytes : CInt,
    num_glyphs : CInt,
);

external (cdecl) cairo_text_cluster_allocate(arg0:CInt) : Pointer[cairo_text_cluster_t];

external (cdecl) cairo_text_cluster_free(arg0:Pointer[cairo_text_cluster_t]) : ;

alias Enum__cairo_text_cluster_flags = CUInt;
alias CAIRO_TEXT_CLUSTER_FLAG_BACKWARD = CUInt(1);

alias cairo_text_cluster_flags_t = Enum__cairo_text_cluster_flags;

record cairo_text_extents_t (
    x_bearing : CDouble,
    y_bearing : CDouble,
    width : CDouble,
    height : CDouble,
    x_advance : CDouble,
    y_advance : CDouble,
);

record cairo_font_extents_t (
    ascent : CDouble,
    descent : CDouble,
    height : CDouble,
    max_x_advance : CDouble,
    max_y_advance : CDouble,
);

alias Enum__cairo_font_slant = CUInt;
alias CAIRO_FONT_SLANT_NORMAL = CUInt(0);
alias CAIRO_FONT_SLANT_ITALIC = CUInt(1);
alias CAIRO_FONT_SLANT_OBLIQUE = CUInt(2);

alias cairo_font_slant_t = Enum__cairo_font_slant;

alias Enum__cairo_font_weight = CUInt;
alias CAIRO_FONT_WEIGHT_NORMAL = CUInt(0);
alias CAIRO_FONT_WEIGHT_BOLD = CUInt(1);

alias cairo_font_weight_t = Enum__cairo_font_weight;

alias Enum__cairo_subpixel_order = CUInt;
alias CAIRO_SUBPIXEL_ORDER_DEFAULT = CUInt(0);
alias CAIRO_SUBPIXEL_ORDER_RGB = CUInt(1);
alias CAIRO_SUBPIXEL_ORDER_BGR = CUInt(2);
alias CAIRO_SUBPIXEL_ORDER_VRGB = CUInt(3);
alias CAIRO_SUBPIXEL_ORDER_VBGR = CUInt(4);

alias cairo_subpixel_order_t = Enum__cairo_subpixel_order;

alias Enum__cairo_hint_style = CUInt;
alias CAIRO_HINT_STYLE_DEFAULT = CUInt(0);
alias CAIRO_HINT_STYLE_NONE = CUInt(1);
alias CAIRO_HINT_STYLE_SLIGHT = CUInt(2);
alias CAIRO_HINT_STYLE_MEDIUM = CUInt(3);
alias CAIRO_HINT_STYLE_FULL = CUInt(4);

alias cairo_hint_style_t = Enum__cairo_hint_style;

alias Enum__cairo_hint_metrics = CUInt;
alias CAIRO_HINT_METRICS_DEFAULT = CUInt(0);
alias CAIRO_HINT_METRICS_OFF = CUInt(1);
alias CAIRO_HINT_METRICS_ON = CUInt(2);

alias cairo_hint_metrics_t = Enum__cairo_hint_metrics;

alias Struct__cairo_font_options = Opaque;

alias cairo_font_options_t = Struct__cairo_font_options;

external (cdecl) cairo_font_options_create() : Pointer[cairo_font_options_t];

external (cdecl) cairo_font_options_copy(arg0:Pointer[cairo_font_options_t]) : Pointer[cairo_font_options_t];

external (cdecl) cairo_font_options_destroy(arg0:Pointer[cairo_font_options_t]) : ;

external (cdecl) cairo_font_options_status(arg0:Pointer[cairo_font_options_t]) : cairo_status_t;

external (cdecl) cairo_font_options_merge(arg0:Pointer[cairo_font_options_t], arg1:Pointer[cairo_font_options_t]) : ;

external (cdecl) cairo_font_options_equal(arg0:Pointer[cairo_font_options_t], arg1:Pointer[cairo_font_options_t]) : cairo_bool_t;

external (cdecl) cairo_font_options_hash(arg0:Pointer[cairo_font_options_t]) : CULong;

external (cdecl) cairo_font_options_set_antialias(arg0:Pointer[cairo_font_options_t], arg1:cairo_antialias_t) : ;

external (cdecl) cairo_font_options_get_antialias(arg0:Pointer[cairo_font_options_t]) : cairo_antialias_t;

external (cdecl) cairo_font_options_set_subpixel_order(arg0:Pointer[cairo_font_options_t], arg1:cairo_subpixel_order_t) : ;

external (cdecl) cairo_font_options_get_subpixel_order(arg0:Pointer[cairo_font_options_t]) : cairo_subpixel_order_t;

external (cdecl) cairo_font_options_set_hint_style(arg0:Pointer[cairo_font_options_t], arg1:cairo_hint_style_t) : ;

external (cdecl) cairo_font_options_get_hint_style(arg0:Pointer[cairo_font_options_t]) : cairo_hint_style_t;

external (cdecl) cairo_font_options_set_hint_metrics(arg0:Pointer[cairo_font_options_t], arg1:cairo_hint_metrics_t) : ;

external (cdecl) cairo_font_options_get_hint_metrics(arg0:Pointer[cairo_font_options_t]) : cairo_hint_metrics_t;

external (cdecl) cairo_select_font_face(arg0:Pointer[cairo_t], arg1:Pointer[CChar], arg2:cairo_font_slant_t, arg3:cairo_font_weight_t) : ;

external (cdecl) cairo_set_font_size(arg0:Pointer[cairo_t], arg1:CDouble) : ;

external (cdecl) cairo_set_font_matrix(arg0:Pointer[cairo_t], arg1:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_get_font_matrix(arg0:Pointer[cairo_t], arg1:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_set_font_options(arg0:Pointer[cairo_t], arg1:Pointer[cairo_font_options_t]) : ;

external (cdecl) cairo_get_font_options(arg0:Pointer[cairo_t], arg1:Pointer[cairo_font_options_t]) : ;

external (cdecl) cairo_set_font_face(arg0:Pointer[cairo_t], arg1:Pointer[cairo_font_face_t]) : ;

external (cdecl) cairo_get_font_face(arg0:Pointer[cairo_t]) : Pointer[cairo_font_face_t];

external (cdecl) cairo_set_scaled_font(arg0:Pointer[cairo_t], arg1:Pointer[cairo_scaled_font_t]) : ;

external (cdecl) cairo_get_scaled_font(arg0:Pointer[cairo_t]) : Pointer[cairo_scaled_font_t];

external (cdecl) cairo_show_text(arg0:Pointer[cairo_t], arg1:Pointer[CChar]) : ;

external (cdecl) cairo_show_glyphs(arg0:Pointer[cairo_t], arg1:Pointer[cairo_glyph_t], arg2:CInt) : ;

external (cdecl) cairo_show_text_glyphs(arg0:Pointer[cairo_t], arg1:Pointer[CChar], arg2:CInt, arg3:Pointer[cairo_glyph_t], arg4:CInt, arg5:Pointer[cairo_text_cluster_t], arg6:CInt, arg7:cairo_text_cluster_flags_t) : ;

external (cdecl) cairo_text_path(arg0:Pointer[cairo_t], arg1:Pointer[CChar]) : ;

external (cdecl) cairo_glyph_path(arg0:Pointer[cairo_t], arg1:Pointer[cairo_glyph_t], arg2:CInt) : ;

external (cdecl) cairo_text_extents(arg0:Pointer[cairo_t], arg1:Pointer[CChar], arg2:Pointer[cairo_text_extents_t]) : ;

external (cdecl) cairo_glyph_extents(arg0:Pointer[cairo_t], arg1:Pointer[cairo_glyph_t], arg2:CInt, arg3:Pointer[cairo_text_extents_t]) : ;

external (cdecl) cairo_font_extents(arg0:Pointer[cairo_t], arg1:Pointer[cairo_font_extents_t]) : ;

external (cdecl) cairo_font_face_reference(arg0:Pointer[cairo_font_face_t]) : Pointer[cairo_font_face_t];

external (cdecl) cairo_font_face_destroy(arg0:Pointer[cairo_font_face_t]) : ;

external (cdecl) cairo_font_face_get_reference_count(arg0:Pointer[cairo_font_face_t]) : CUInt;

external (cdecl) cairo_font_face_status(arg0:Pointer[cairo_font_face_t]) : cairo_status_t;

alias Enum__cairo_font_type = CUInt;
alias CAIRO_FONT_TYPE_TOY = CUInt(0);
alias CAIRO_FONT_TYPE_FT = CUInt(1);
alias CAIRO_FONT_TYPE_WIN32 = CUInt(2);
alias CAIRO_FONT_TYPE_QUARTZ = CUInt(3);
alias CAIRO_FONT_TYPE_USER = CUInt(4);

alias cairo_font_type_t = Enum__cairo_font_type;

external (cdecl) cairo_font_face_get_type(arg0:Pointer[cairo_font_face_t]) : cairo_font_type_t;

external (cdecl) cairo_font_face_get_user_data(arg0:Pointer[cairo_font_face_t], arg1:Pointer[cairo_user_data_key_t]) : OpaquePointer;

external (cdecl) cairo_font_face_set_user_data(arg0:Pointer[cairo_font_face_t], arg1:Pointer[cairo_user_data_key_t], arg2:OpaquePointer, arg3:cairo_destroy_func_t) : cairo_status_t;

external (cdecl) cairo_scaled_font_create(arg0:Pointer[cairo_font_face_t], arg1:Pointer[cairo_matrix_t], arg2:Pointer[cairo_matrix_t], arg3:Pointer[cairo_font_options_t]) : Pointer[cairo_scaled_font_t];

external (cdecl) cairo_scaled_font_reference(arg0:Pointer[cairo_scaled_font_t]) : Pointer[cairo_scaled_font_t];

external (cdecl) cairo_scaled_font_destroy(arg0:Pointer[cairo_scaled_font_t]) : ;

external (cdecl) cairo_scaled_font_get_reference_count(arg0:Pointer[cairo_scaled_font_t]) : CUInt;

external (cdecl) cairo_scaled_font_status(arg0:Pointer[cairo_scaled_font_t]) : cairo_status_t;

external (cdecl) cairo_scaled_font_get_type(arg0:Pointer[cairo_scaled_font_t]) : cairo_font_type_t;

external (cdecl) cairo_scaled_font_get_user_data(arg0:Pointer[cairo_scaled_font_t], arg1:Pointer[cairo_user_data_key_t]) : OpaquePointer;

external (cdecl) cairo_scaled_font_set_user_data(arg0:Pointer[cairo_scaled_font_t], arg1:Pointer[cairo_user_data_key_t], arg2:OpaquePointer, arg3:cairo_destroy_func_t) : cairo_status_t;

external (cdecl) cairo_scaled_font_extents(arg0:Pointer[cairo_scaled_font_t], arg1:Pointer[cairo_font_extents_t]) : ;

external (cdecl) cairo_scaled_font_text_extents(arg0:Pointer[cairo_scaled_font_t], arg1:Pointer[CChar], arg2:Pointer[cairo_text_extents_t]) : ;

external (cdecl) cairo_scaled_font_glyph_extents(arg0:Pointer[cairo_scaled_font_t], arg1:Pointer[cairo_glyph_t], arg2:CInt, arg3:Pointer[cairo_text_extents_t]) : ;

external (cdecl) cairo_scaled_font_text_to_glyphs(arg0:Pointer[cairo_scaled_font_t], arg1:CDouble, arg2:CDouble, arg3:Pointer[CChar], arg4:CInt, arg5:Pointer[Pointer[cairo_glyph_t]], arg6:Pointer[CInt], arg7:Pointer[Pointer[cairo_text_cluster_t]], arg8:Pointer[CInt], arg9:Pointer[cairo_text_cluster_flags_t]) : cairo_status_t;

external (cdecl) cairo_scaled_font_get_font_face(arg0:Pointer[cairo_scaled_font_t]) : Pointer[cairo_font_face_t];

external (cdecl) cairo_scaled_font_get_font_matrix(arg0:Pointer[cairo_scaled_font_t], arg1:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_scaled_font_get_ctm(arg0:Pointer[cairo_scaled_font_t], arg1:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_scaled_font_get_scale_matrix(arg0:Pointer[cairo_scaled_font_t], arg1:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_scaled_font_get_font_options(arg0:Pointer[cairo_scaled_font_t], arg1:Pointer[cairo_font_options_t]) : ;

external (cdecl) cairo_toy_font_face_create(arg0:Pointer[CChar], arg1:cairo_font_slant_t, arg2:cairo_font_weight_t) : Pointer[cairo_font_face_t];

external (cdecl) cairo_toy_font_face_get_family(arg0:Pointer[cairo_font_face_t]) : Pointer[CChar];

external (cdecl) cairo_toy_font_face_get_slant(arg0:Pointer[cairo_font_face_t]) : cairo_font_slant_t;

external (cdecl) cairo_toy_font_face_get_weight(arg0:Pointer[cairo_font_face_t]) : cairo_font_weight_t;

external (cdecl) cairo_user_font_face_create() : Pointer[cairo_font_face_t];

alias cairo_user_scaled_font_init_func_t = CCodePointer[[Pointer[cairo_scaled_font_t], Pointer[cairo_t], Pointer[cairo_font_extents_t]],[cairo_status_t]];

alias cairo_user_scaled_font_render_glyph_func_t = CCodePointer[[Pointer[cairo_scaled_font_t], CULong, Pointer[cairo_t], Pointer[cairo_text_extents_t]],[cairo_status_t]];

alias cairo_user_scaled_font_text_to_glyphs_func_t = CCodePointer[[Pointer[cairo_scaled_font_t], Pointer[CChar], CInt, Pointer[Pointer[cairo_glyph_t]], Pointer[CInt], Pointer[Pointer[cairo_text_cluster_t]], Pointer[CInt], Pointer[cairo_text_cluster_flags_t]],[cairo_status_t]];

alias cairo_user_scaled_font_unicode_to_glyph_func_t = CCodePointer[[Pointer[cairo_scaled_font_t], CULong, Pointer[CULong]],[cairo_status_t]];

external (cdecl) cairo_user_font_face_set_init_func(arg0:Pointer[cairo_font_face_t], arg1:cairo_user_scaled_font_init_func_t) : ;

external (cdecl) cairo_user_font_face_set_render_glyph_func(arg0:Pointer[cairo_font_face_t], arg1:cairo_user_scaled_font_render_glyph_func_t) : ;

external (cdecl) cairo_user_font_face_set_text_to_glyphs_func(arg0:Pointer[cairo_font_face_t], arg1:cairo_user_scaled_font_text_to_glyphs_func_t) : ;

external (cdecl) cairo_user_font_face_set_unicode_to_glyph_func(arg0:Pointer[cairo_font_face_t], arg1:cairo_user_scaled_font_unicode_to_glyph_func_t) : ;

external (cdecl) cairo_user_font_face_get_init_func(arg0:Pointer[cairo_font_face_t]) : cairo_user_scaled_font_init_func_t;

external (cdecl) cairo_user_font_face_get_render_glyph_func(arg0:Pointer[cairo_font_face_t]) : cairo_user_scaled_font_render_glyph_func_t;

external (cdecl) cairo_user_font_face_get_text_to_glyphs_func(arg0:Pointer[cairo_font_face_t]) : cairo_user_scaled_font_text_to_glyphs_func_t;

external (cdecl) cairo_user_font_face_get_unicode_to_glyph_func(arg0:Pointer[cairo_font_face_t]) : cairo_user_scaled_font_unicode_to_glyph_func_t;

external (cdecl) cairo_get_operator(arg0:Pointer[cairo_t]) : cairo_operator_t;

external (cdecl) cairo_get_source(arg0:Pointer[cairo_t]) : Pointer[cairo_pattern_t];

external (cdecl) cairo_get_tolerance(arg0:Pointer[cairo_t]) : CDouble;

external (cdecl) cairo_get_antialias(arg0:Pointer[cairo_t]) : cairo_antialias_t;

external (cdecl) cairo_has_current_point(arg0:Pointer[cairo_t]) : cairo_bool_t;

external (cdecl) cairo_get_current_point(arg0:Pointer[cairo_t], arg1:Pointer[CDouble], arg2:Pointer[CDouble]) : ;

external (cdecl) cairo_get_fill_rule(arg0:Pointer[cairo_t]) : cairo_fill_rule_t;

external (cdecl) cairo_get_line_width(arg0:Pointer[cairo_t]) : CDouble;

external (cdecl) cairo_get_line_cap(arg0:Pointer[cairo_t]) : cairo_line_cap_t;

external (cdecl) cairo_get_line_join(arg0:Pointer[cairo_t]) : cairo_line_join_t;

external (cdecl) cairo_get_miter_limit(arg0:Pointer[cairo_t]) : CDouble;

external (cdecl) cairo_get_dash_count(arg0:Pointer[cairo_t]) : CInt;

external (cdecl) cairo_get_dash(arg0:Pointer[cairo_t], arg1:Pointer[CDouble], arg2:Pointer[CDouble]) : ;

external (cdecl) cairo_get_matrix(arg0:Pointer[cairo_t], arg1:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_get_target(arg0:Pointer[cairo_t]) : Pointer[cairo_surface_t];

external (cdecl) cairo_get_group_target(arg0:Pointer[cairo_t]) : Pointer[cairo_surface_t];

alias Enum__cairo_path_data_type = CUInt;
alias CAIRO_PATH_MOVE_TO = CUInt(0);
alias CAIRO_PATH_LINE_TO = CUInt(1);
alias CAIRO_PATH_CURVE_TO = CUInt(2);
alias CAIRO_PATH_CLOSE_PATH = CUInt(3);

alias cairo_path_data_type_t = Enum__cairo_path_data_type;

alias cairo_path_data_t = Union__cairo_path_data_t;

alias Union__cairo_path_data_t = Union[
    /* header */ Struct_Unnamed1,
    /* point */ Struct_Unnamed2,
];

record Struct_cairo_path (
    status : cairo_status_t,
    data : Pointer[cairo_path_data_t],
    num_data : CInt,
);

alias cairo_path_t = Struct_cairo_path;

external (cdecl) cairo_copy_path(arg0:Pointer[cairo_t]) : Pointer[cairo_path_t];

external (cdecl) cairo_copy_path_flat(arg0:Pointer[cairo_t]) : Pointer[cairo_path_t];

external (cdecl) cairo_append_path(arg0:Pointer[cairo_t], arg1:Pointer[cairo_path_t]) : ;

external (cdecl) cairo_path_destroy(arg0:Pointer[cairo_path_t]) : ;

external (cdecl) cairo_status(arg0:Pointer[cairo_t]) : cairo_status_t;

external (cdecl) cairo_status_to_string(arg0:cairo_status_t) : Pointer[CChar];

external (cdecl) cairo_device_reference(arg0:Pointer[cairo_device_t]) : Pointer[cairo_device_t];

alias Enum__cairo_device_type = CInt;
alias CAIRO_DEVICE_TYPE_DRM = CInt(0);
alias CAIRO_DEVICE_TYPE_GL = CInt(1);
alias CAIRO_DEVICE_TYPE_SCRIPT = CInt(2);
alias CAIRO_DEVICE_TYPE_XCB = CInt(3);
alias CAIRO_DEVICE_TYPE_XLIB = CInt(4);
alias CAIRO_DEVICE_TYPE_XML = CInt(5);
alias CAIRO_DEVICE_TYPE_COGL = CInt(6);
alias CAIRO_DEVICE_TYPE_WIN32 = CInt(7);
alias CAIRO_DEVICE_TYPE_INVALID = CInt(-1);

alias cairo_device_type_t = Enum__cairo_device_type;

external (cdecl) cairo_device_get_type(arg0:Pointer[cairo_device_t]) : cairo_device_type_t;

external (cdecl) cairo_device_status(arg0:Pointer[cairo_device_t]) : cairo_status_t;

external (cdecl) cairo_device_acquire(arg0:Pointer[cairo_device_t]) : cairo_status_t;

external (cdecl) cairo_device_release(arg0:Pointer[cairo_device_t]) : ;

external (cdecl) cairo_device_flush(arg0:Pointer[cairo_device_t]) : ;

external (cdecl) cairo_device_finish(arg0:Pointer[cairo_device_t]) : ;

external (cdecl) cairo_device_destroy(arg0:Pointer[cairo_device_t]) : ;

external (cdecl) cairo_device_get_reference_count(arg0:Pointer[cairo_device_t]) : CUInt;

external (cdecl) cairo_device_get_user_data(arg0:Pointer[cairo_device_t], arg1:Pointer[cairo_user_data_key_t]) : OpaquePointer;

external (cdecl) cairo_device_set_user_data(arg0:Pointer[cairo_device_t], arg1:Pointer[cairo_user_data_key_t], arg2:OpaquePointer, arg3:cairo_destroy_func_t) : cairo_status_t;

external (cdecl) cairo_surface_create_similar(arg0:Pointer[cairo_surface_t], arg1:cairo_content_t, arg2:CInt, arg3:CInt) : Pointer[cairo_surface_t];

external (cdecl) cairo_surface_create_similar_image(arg0:Pointer[cairo_surface_t], arg1:cairo_format_t, arg2:CInt, arg3:CInt) : Pointer[cairo_surface_t];

external (cdecl) cairo_surface_map_to_image(arg0:Pointer[cairo_surface_t], arg1:Pointer[cairo_rectangle_int_t]) : Pointer[cairo_surface_t];

external (cdecl) cairo_surface_unmap_image(arg0:Pointer[cairo_surface_t], arg1:Pointer[cairo_surface_t]) : ;

external (cdecl) cairo_surface_create_for_rectangle(arg0:Pointer[cairo_surface_t], arg1:CDouble, arg2:CDouble, arg3:CDouble, arg4:CDouble) : Pointer[cairo_surface_t];


alias cairo_surface_observer_mode_t = CUInt;
alias CAIRO_SURFACE_OBSERVER_NORMAL = CUInt(0);
alias CAIRO_SURFACE_OBSERVER_RECORD_OPERATIONS = CUInt(1);

external (cdecl) cairo_surface_create_observer(arg0:Pointer[cairo_surface_t], arg1:cairo_surface_observer_mode_t) : Pointer[cairo_surface_t];

alias cairo_surface_observer_callback_t = CCodePointer[[Pointer[cairo_surface_t], Pointer[cairo_surface_t], OpaquePointer],[]];

external (cdecl) cairo_surface_observer_add_paint_callback(arg0:Pointer[cairo_surface_t], arg1:cairo_surface_observer_callback_t, arg2:OpaquePointer) : cairo_status_t;

external (cdecl) cairo_surface_observer_add_mask_callback(arg0:Pointer[cairo_surface_t], arg1:cairo_surface_observer_callback_t, arg2:OpaquePointer) : cairo_status_t;

external (cdecl) cairo_surface_observer_add_fill_callback(arg0:Pointer[cairo_surface_t], arg1:cairo_surface_observer_callback_t, arg2:OpaquePointer) : cairo_status_t;

external (cdecl) cairo_surface_observer_add_stroke_callback(arg0:Pointer[cairo_surface_t], arg1:cairo_surface_observer_callback_t, arg2:OpaquePointer) : cairo_status_t;

external (cdecl) cairo_surface_observer_add_glyphs_callback(arg0:Pointer[cairo_surface_t], arg1:cairo_surface_observer_callback_t, arg2:OpaquePointer) : cairo_status_t;

external (cdecl) cairo_surface_observer_add_flush_callback(arg0:Pointer[cairo_surface_t], arg1:cairo_surface_observer_callback_t, arg2:OpaquePointer) : cairo_status_t;

external (cdecl) cairo_surface_observer_add_finish_callback(arg0:Pointer[cairo_surface_t], arg1:cairo_surface_observer_callback_t, arg2:OpaquePointer) : cairo_status_t;

external (cdecl) cairo_surface_observer_print(arg0:Pointer[cairo_surface_t], arg1:cairo_write_func_t, arg2:OpaquePointer) : cairo_status_t;

external (cdecl) cairo_surface_observer_elapsed(arg0:Pointer[cairo_surface_t]) : CDouble;

external (cdecl) cairo_device_observer_print(arg0:Pointer[cairo_device_t], arg1:cairo_write_func_t, arg2:OpaquePointer) : cairo_status_t;

external (cdecl) cairo_device_observer_elapsed(arg0:Pointer[cairo_device_t]) : CDouble;

external (cdecl) cairo_device_observer_paint_elapsed(arg0:Pointer[cairo_device_t]) : CDouble;

external (cdecl) cairo_device_observer_mask_elapsed(arg0:Pointer[cairo_device_t]) : CDouble;

external (cdecl) cairo_device_observer_fill_elapsed(arg0:Pointer[cairo_device_t]) : CDouble;

external (cdecl) cairo_device_observer_stroke_elapsed(arg0:Pointer[cairo_device_t]) : CDouble;

external (cdecl) cairo_device_observer_glyphs_elapsed(arg0:Pointer[cairo_device_t]) : CDouble;

external (cdecl) cairo_surface_reference(arg0:Pointer[cairo_surface_t]) : Pointer[cairo_surface_t];

external (cdecl) cairo_surface_finish(arg0:Pointer[cairo_surface_t]) : ;

external (cdecl) cairo_surface_destroy(arg0:Pointer[cairo_surface_t]) : ;

external (cdecl) cairo_surface_get_device(arg0:Pointer[cairo_surface_t]) : Pointer[cairo_device_t];

external (cdecl) cairo_surface_get_reference_count(arg0:Pointer[cairo_surface_t]) : CUInt;

external (cdecl) cairo_surface_status(arg0:Pointer[cairo_surface_t]) : cairo_status_t;

alias Enum__cairo_surface_type = CUInt;
alias CAIRO_SURFACE_TYPE_IMAGE = CUInt(0);
alias CAIRO_SURFACE_TYPE_PDF = CUInt(1);
alias CAIRO_SURFACE_TYPE_PS = CUInt(2);
alias CAIRO_SURFACE_TYPE_XLIB = CUInt(3);
alias CAIRO_SURFACE_TYPE_XCB = CUInt(4);
alias CAIRO_SURFACE_TYPE_GLITZ = CUInt(5);
alias CAIRO_SURFACE_TYPE_QUARTZ = CUInt(6);
alias CAIRO_SURFACE_TYPE_WIN32 = CUInt(7);
alias CAIRO_SURFACE_TYPE_BEOS = CUInt(8);
alias CAIRO_SURFACE_TYPE_DIRECTFB = CUInt(9);
alias CAIRO_SURFACE_TYPE_SVG = CUInt(10);
alias CAIRO_SURFACE_TYPE_OS2 = CUInt(11);
alias CAIRO_SURFACE_TYPE_WIN32_PRINTING = CUInt(12);
alias CAIRO_SURFACE_TYPE_QUARTZ_IMAGE = CUInt(13);
alias CAIRO_SURFACE_TYPE_SCRIPT = CUInt(14);
alias CAIRO_SURFACE_TYPE_QT = CUInt(15);
alias CAIRO_SURFACE_TYPE_RECORDING = CUInt(16);
alias CAIRO_SURFACE_TYPE_VG = CUInt(17);
alias CAIRO_SURFACE_TYPE_GL = CUInt(18);
alias CAIRO_SURFACE_TYPE_DRM = CUInt(19);
alias CAIRO_SURFACE_TYPE_TEE = CUInt(20);
alias CAIRO_SURFACE_TYPE_XML = CUInt(21);
alias CAIRO_SURFACE_TYPE_SKIA = CUInt(22);
alias CAIRO_SURFACE_TYPE_SUBSURFACE = CUInt(23);
alias CAIRO_SURFACE_TYPE_COGL = CUInt(24);

alias cairo_surface_type_t = Enum__cairo_surface_type;

external (cdecl) cairo_surface_get_type(arg0:Pointer[cairo_surface_t]) : cairo_surface_type_t;

external (cdecl) cairo_surface_get_content(arg0:Pointer[cairo_surface_t]) : cairo_content_t;

external (cdecl) cairo_surface_write_to_png(arg0:Pointer[cairo_surface_t], arg1:Pointer[CChar]) : cairo_status_t;

external (cdecl) cairo_surface_write_to_png_stream(arg0:Pointer[cairo_surface_t], arg1:cairo_write_func_t, arg2:OpaquePointer) : cairo_status_t;

external (cdecl) cairo_surface_get_user_data(arg0:Pointer[cairo_surface_t], arg1:Pointer[cairo_user_data_key_t]) : OpaquePointer;

external (cdecl) cairo_surface_set_user_data(arg0:Pointer[cairo_surface_t], arg1:Pointer[cairo_user_data_key_t], arg2:OpaquePointer, arg3:cairo_destroy_func_t) : cairo_status_t;

external (cdecl) cairo_surface_get_mime_data(arg0:Pointer[cairo_surface_t], arg1:Pointer[CChar], arg2:Pointer[Pointer[CUChar]], arg3:Pointer[CULong]) : ;

external (cdecl) cairo_surface_set_mime_data(arg0:Pointer[cairo_surface_t], arg1:Pointer[CChar], arg2:Pointer[CUChar], arg3:CULong, arg4:cairo_destroy_func_t, arg5:OpaquePointer) : cairo_status_t;

external (cdecl) cairo_surface_supports_mime_type(arg0:Pointer[cairo_surface_t], arg1:Pointer[CChar]) : cairo_bool_t;

external (cdecl) cairo_surface_get_font_options(arg0:Pointer[cairo_surface_t], arg1:Pointer[cairo_font_options_t]) : ;

external (cdecl) cairo_surface_flush(arg0:Pointer[cairo_surface_t]) : ;

external (cdecl) cairo_surface_mark_dirty(arg0:Pointer[cairo_surface_t]) : ;

external (cdecl) cairo_surface_mark_dirty_rectangle(arg0:Pointer[cairo_surface_t], arg1:CInt, arg2:CInt, arg3:CInt, arg4:CInt) : ;

external (cdecl) cairo_surface_set_device_offset(arg0:Pointer[cairo_surface_t], arg1:CDouble, arg2:CDouble) : ;

external (cdecl) cairo_surface_get_device_offset(arg0:Pointer[cairo_surface_t], arg1:Pointer[CDouble], arg2:Pointer[CDouble]) : ;

external (cdecl) cairo_surface_set_fallback_resolution(arg0:Pointer[cairo_surface_t], arg1:CDouble, arg2:CDouble) : ;

external (cdecl) cairo_surface_get_fallback_resolution(arg0:Pointer[cairo_surface_t], arg1:Pointer[CDouble], arg2:Pointer[CDouble]) : ;

external (cdecl) cairo_surface_copy_page(arg0:Pointer[cairo_surface_t]) : ;

external (cdecl) cairo_surface_show_page(arg0:Pointer[cairo_surface_t]) : ;

external (cdecl) cairo_surface_has_show_text_glyphs(arg0:Pointer[cairo_surface_t]) : cairo_bool_t;

external (cdecl) cairo_image_surface_create(arg0:cairo_format_t, arg1:CInt, arg2:CInt) : Pointer[cairo_surface_t];

external (cdecl) cairo_format_stride_for_width(arg0:cairo_format_t, arg1:CInt) : CInt;

external (cdecl) cairo_image_surface_create_for_data(arg0:Pointer[CUChar], arg1:cairo_format_t, arg2:CInt, arg3:CInt, arg4:CInt) : Pointer[cairo_surface_t];

external (cdecl) cairo_image_surface_get_data(arg0:Pointer[cairo_surface_t]) : Pointer[CUChar];

external (cdecl) cairo_image_surface_get_format(arg0:Pointer[cairo_surface_t]) : cairo_format_t;

external (cdecl) cairo_image_surface_get_width(arg0:Pointer[cairo_surface_t]) : CInt;

external (cdecl) cairo_image_surface_get_height(arg0:Pointer[cairo_surface_t]) : CInt;

external (cdecl) cairo_image_surface_get_stride(arg0:Pointer[cairo_surface_t]) : CInt;

external (cdecl) cairo_image_surface_create_from_png(arg0:Pointer[CChar]) : Pointer[cairo_surface_t];

external (cdecl) cairo_image_surface_create_from_png_stream(arg0:cairo_read_func_t, arg1:OpaquePointer) : Pointer[cairo_surface_t];

external (cdecl) cairo_recording_surface_create(arg0:cairo_content_t, arg1:Pointer[cairo_rectangle_t]) : Pointer[cairo_surface_t];

external (cdecl) cairo_recording_surface_ink_extents(arg0:Pointer[cairo_surface_t], arg1:Pointer[CDouble], arg2:Pointer[CDouble], arg3:Pointer[CDouble], arg4:Pointer[CDouble]) : ;

external (cdecl) cairo_recording_surface_get_extents(arg0:Pointer[cairo_surface_t], arg1:Pointer[cairo_rectangle_t]) : cairo_bool_t;

alias cairo_raster_source_acquire_func_t = CCodePointer[[Pointer[cairo_pattern_t], OpaquePointer, Pointer[cairo_surface_t], Pointer[cairo_rectangle_int_t]],[Pointer[cairo_surface_t]]];

alias cairo_raster_source_release_func_t = CCodePointer[[Pointer[cairo_pattern_t], OpaquePointer, Pointer[cairo_surface_t]],[]];

alias cairo_raster_source_snapshot_func_t = CCodePointer[[Pointer[cairo_pattern_t], OpaquePointer],[cairo_status_t]];

alias cairo_raster_source_copy_func_t = CCodePointer[[Pointer[cairo_pattern_t], OpaquePointer, Pointer[cairo_pattern_t]],[cairo_status_t]];

alias cairo_raster_source_finish_func_t = CCodePointer[[Pointer[cairo_pattern_t], OpaquePointer],[]];

external (cdecl) cairo_pattern_create_raster_source(arg0:OpaquePointer, arg1:cairo_content_t, arg2:CInt, arg3:CInt) : Pointer[cairo_pattern_t];

external (cdecl) cairo_raster_source_pattern_set_callback_data(arg0:Pointer[cairo_pattern_t], arg1:OpaquePointer) : ;

external (cdecl) cairo_raster_source_pattern_get_callback_data(arg0:Pointer[cairo_pattern_t]) : OpaquePointer;

external (cdecl) cairo_raster_source_pattern_set_acquire(arg0:Pointer[cairo_pattern_t], arg1:cairo_raster_source_acquire_func_t, arg2:cairo_raster_source_release_func_t) : ;

external (cdecl) cairo_raster_source_pattern_get_acquire(arg0:Pointer[cairo_pattern_t], arg1:Pointer[cairo_raster_source_acquire_func_t], arg2:Pointer[cairo_raster_source_release_func_t]) : ;

external (cdecl) cairo_raster_source_pattern_set_snapshot(arg0:Pointer[cairo_pattern_t], arg1:cairo_raster_source_snapshot_func_t) : ;

external (cdecl) cairo_raster_source_pattern_get_snapshot(arg0:Pointer[cairo_pattern_t]) : cairo_raster_source_snapshot_func_t;

external (cdecl) cairo_raster_source_pattern_set_copy(arg0:Pointer[cairo_pattern_t], arg1:cairo_raster_source_copy_func_t) : ;

external (cdecl) cairo_raster_source_pattern_get_copy(arg0:Pointer[cairo_pattern_t]) : cairo_raster_source_copy_func_t;

external (cdecl) cairo_raster_source_pattern_set_finish(arg0:Pointer[cairo_pattern_t], arg1:cairo_raster_source_finish_func_t) : ;

external (cdecl) cairo_raster_source_pattern_get_finish(arg0:Pointer[cairo_pattern_t]) : cairo_raster_source_finish_func_t;

external (cdecl) cairo_pattern_create_rgb(arg0:CDouble, arg1:CDouble, arg2:CDouble) : Pointer[cairo_pattern_t];

external (cdecl) cairo_pattern_create_rgba(arg0:CDouble, arg1:CDouble, arg2:CDouble, arg3:CDouble) : Pointer[cairo_pattern_t];

external (cdecl) cairo_pattern_create_for_surface(arg0:Pointer[cairo_surface_t]) : Pointer[cairo_pattern_t];

external (cdecl) cairo_pattern_create_linear(arg0:CDouble, arg1:CDouble, arg2:CDouble, arg3:CDouble) : Pointer[cairo_pattern_t];

external (cdecl) cairo_pattern_create_radial(arg0:CDouble, arg1:CDouble, arg2:CDouble, arg3:CDouble, arg4:CDouble, arg5:CDouble) : Pointer[cairo_pattern_t];

external (cdecl) cairo_pattern_create_mesh() : Pointer[cairo_pattern_t];

external (cdecl) cairo_pattern_reference(arg0:Pointer[cairo_pattern_t]) : Pointer[cairo_pattern_t];

external (cdecl) cairo_pattern_destroy(arg0:Pointer[cairo_pattern_t]) : ;

external (cdecl) cairo_pattern_get_reference_count(arg0:Pointer[cairo_pattern_t]) : CUInt;

external (cdecl) cairo_pattern_status(arg0:Pointer[cairo_pattern_t]) : cairo_status_t;

external (cdecl) cairo_pattern_get_user_data(arg0:Pointer[cairo_pattern_t], arg1:Pointer[cairo_user_data_key_t]) : OpaquePointer;

external (cdecl) cairo_pattern_set_user_data(arg0:Pointer[cairo_pattern_t], arg1:Pointer[cairo_user_data_key_t], arg2:OpaquePointer, arg3:cairo_destroy_func_t) : cairo_status_t;

alias Enum__cairo_pattern_type = CUInt;
alias CAIRO_PATTERN_TYPE_SOLID = CUInt(0);
alias CAIRO_PATTERN_TYPE_SURFACE = CUInt(1);
alias CAIRO_PATTERN_TYPE_LINEAR = CUInt(2);
alias CAIRO_PATTERN_TYPE_RADIAL = CUInt(3);
alias CAIRO_PATTERN_TYPE_MESH = CUInt(4);
alias CAIRO_PATTERN_TYPE_RASTER_SOURCE = CUInt(5);

alias cairo_pattern_type_t = Enum__cairo_pattern_type;

external (cdecl) cairo_pattern_get_type(arg0:Pointer[cairo_pattern_t]) : cairo_pattern_type_t;

external (cdecl) cairo_pattern_add_color_stop_rgb(arg0:Pointer[cairo_pattern_t], arg1:CDouble, arg2:CDouble, arg3:CDouble, arg4:CDouble) : ;

external (cdecl) cairo_pattern_add_color_stop_rgba(arg0:Pointer[cairo_pattern_t], arg1:CDouble, arg2:CDouble, arg3:CDouble, arg4:CDouble, arg5:CDouble) : ;

external (cdecl) cairo_mesh_pattern_begin_patch(arg0:Pointer[cairo_pattern_t]) : ;

external (cdecl) cairo_mesh_pattern_end_patch(arg0:Pointer[cairo_pattern_t]) : ;

external (cdecl) cairo_mesh_pattern_curve_to(arg0:Pointer[cairo_pattern_t], arg1:CDouble, arg2:CDouble, arg3:CDouble, arg4:CDouble, arg5:CDouble, arg6:CDouble) : ;

external (cdecl) cairo_mesh_pattern_line_to(arg0:Pointer[cairo_pattern_t], arg1:CDouble, arg2:CDouble) : ;

external (cdecl) cairo_mesh_pattern_move_to(arg0:Pointer[cairo_pattern_t], arg1:CDouble, arg2:CDouble) : ;

external (cdecl) cairo_mesh_pattern_set_control_point(arg0:Pointer[cairo_pattern_t], arg1:CUInt, arg2:CDouble, arg3:CDouble) : ;

external (cdecl) cairo_mesh_pattern_set_corner_color_rgb(arg0:Pointer[cairo_pattern_t], arg1:CUInt, arg2:CDouble, arg3:CDouble, arg4:CDouble) : ;

external (cdecl) cairo_mesh_pattern_set_corner_color_rgba(arg0:Pointer[cairo_pattern_t], arg1:CUInt, arg2:CDouble, arg3:CDouble, arg4:CDouble, arg5:CDouble) : ;

external (cdecl) cairo_pattern_set_matrix(arg0:Pointer[cairo_pattern_t], arg1:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_pattern_get_matrix(arg0:Pointer[cairo_pattern_t], arg1:Pointer[cairo_matrix_t]) : ;

alias Enum__cairo_extend = CUInt;
alias CAIRO_EXTEND_NONE = CUInt(0);
alias CAIRO_EXTEND_REPEAT = CUInt(1);
alias CAIRO_EXTEND_REFLECT = CUInt(2);
alias CAIRO_EXTEND_PAD = CUInt(3);

alias cairo_extend_t = Enum__cairo_extend;

external (cdecl) cairo_pattern_set_extend(arg0:Pointer[cairo_pattern_t], arg1:cairo_extend_t) : ;

external (cdecl) cairo_pattern_get_extend(arg0:Pointer[cairo_pattern_t]) : cairo_extend_t;

alias Enum__cairo_filter = CUInt;
alias CAIRO_FILTER_FAST = CUInt(0);
alias CAIRO_FILTER_GOOD = CUInt(1);
alias CAIRO_FILTER_BEST = CUInt(2);
alias CAIRO_FILTER_NEAREST = CUInt(3);
alias CAIRO_FILTER_BILINEAR = CUInt(4);
alias CAIRO_FILTER_GAUSSIAN = CUInt(5);

alias cairo_filter_t = Enum__cairo_filter;

external (cdecl) cairo_pattern_set_filter(arg0:Pointer[cairo_pattern_t], arg1:cairo_filter_t) : ;

external (cdecl) cairo_pattern_get_filter(arg0:Pointer[cairo_pattern_t]) : cairo_filter_t;

external (cdecl) cairo_pattern_get_rgba(arg0:Pointer[cairo_pattern_t], arg1:Pointer[CDouble], arg2:Pointer[CDouble], arg3:Pointer[CDouble], arg4:Pointer[CDouble]) : cairo_status_t;

external (cdecl) cairo_pattern_get_surface(arg0:Pointer[cairo_pattern_t], arg1:Pointer[Pointer[cairo_surface_t]]) : cairo_status_t;

external (cdecl) cairo_pattern_get_color_stop_rgba(arg0:Pointer[cairo_pattern_t], arg1:CInt, arg2:Pointer[CDouble], arg3:Pointer[CDouble], arg4:Pointer[CDouble], arg5:Pointer[CDouble], arg6:Pointer[CDouble]) : cairo_status_t;

external (cdecl) cairo_pattern_get_color_stop_count(arg0:Pointer[cairo_pattern_t], arg1:Pointer[CInt]) : cairo_status_t;

external (cdecl) cairo_pattern_get_linear_points(arg0:Pointer[cairo_pattern_t], arg1:Pointer[CDouble], arg2:Pointer[CDouble], arg3:Pointer[CDouble], arg4:Pointer[CDouble]) : cairo_status_t;

external (cdecl) cairo_pattern_get_radial_circles(arg0:Pointer[cairo_pattern_t], arg1:Pointer[CDouble], arg2:Pointer[CDouble], arg3:Pointer[CDouble], arg4:Pointer[CDouble], arg5:Pointer[CDouble], arg6:Pointer[CDouble]) : cairo_status_t;

external (cdecl) cairo_mesh_pattern_get_patch_count(arg0:Pointer[cairo_pattern_t], arg1:Pointer[CUInt]) : cairo_status_t;

external (cdecl) cairo_mesh_pattern_get_path(arg0:Pointer[cairo_pattern_t], arg1:CUInt) : Pointer[cairo_path_t];

external (cdecl) cairo_mesh_pattern_get_corner_color_rgba(arg0:Pointer[cairo_pattern_t], arg1:CUInt, arg2:CUInt, arg3:Pointer[CDouble], arg4:Pointer[CDouble], arg5:Pointer[CDouble], arg6:Pointer[CDouble]) : cairo_status_t;

external (cdecl) cairo_mesh_pattern_get_control_point(arg0:Pointer[cairo_pattern_t], arg1:CUInt, arg2:CUInt, arg3:Pointer[CDouble], arg4:Pointer[CDouble]) : cairo_status_t;

external (cdecl) cairo_matrix_init(arg0:Pointer[cairo_matrix_t], arg1:CDouble, arg2:CDouble, arg3:CDouble, arg4:CDouble, arg5:CDouble, arg6:CDouble) : ;

external (cdecl) cairo_matrix_init_identity(arg0:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_matrix_init_translate(arg0:Pointer[cairo_matrix_t], arg1:CDouble, arg2:CDouble) : ;

external (cdecl) cairo_matrix_init_scale(arg0:Pointer[cairo_matrix_t], arg1:CDouble, arg2:CDouble) : ;

external (cdecl) cairo_matrix_init_rotate(arg0:Pointer[cairo_matrix_t], arg1:CDouble) : ;

external (cdecl) cairo_matrix_translate(arg0:Pointer[cairo_matrix_t], arg1:CDouble, arg2:CDouble) : ;

external (cdecl) cairo_matrix_scale(arg0:Pointer[cairo_matrix_t], arg1:CDouble, arg2:CDouble) : ;

external (cdecl) cairo_matrix_rotate(arg0:Pointer[cairo_matrix_t], arg1:CDouble) : ;

external (cdecl) cairo_matrix_invert(arg0:Pointer[cairo_matrix_t]) : cairo_status_t;

external (cdecl) cairo_matrix_multiply(arg0:Pointer[cairo_matrix_t], arg1:Pointer[cairo_matrix_t], arg2:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_matrix_transform_distance(arg0:Pointer[cairo_matrix_t], arg1:Pointer[CDouble], arg2:Pointer[CDouble]) : ;

external (cdecl) cairo_matrix_transform_point(arg0:Pointer[cairo_matrix_t], arg1:Pointer[CDouble], arg2:Pointer[CDouble]) : ;

alias Struct__cairo_region = Opaque;

alias cairo_region_t = Struct__cairo_region;

alias Enum__cairo_region_overlap = CUInt;
alias CAIRO_REGION_OVERLAP_IN = CUInt(0);
alias CAIRO_REGION_OVERLAP_OUT = CUInt(1);
alias CAIRO_REGION_OVERLAP_PART = CUInt(2);

alias cairo_region_overlap_t = Enum__cairo_region_overlap;

external (cdecl) cairo_region_create() : Pointer[cairo_region_t];

external (cdecl) cairo_region_create_rectangle(arg0:Pointer[cairo_rectangle_int_t]) : Pointer[cairo_region_t];

external (cdecl) cairo_region_create_rectangles(arg0:Pointer[cairo_rectangle_int_t], arg1:CInt) : Pointer[cairo_region_t];

external (cdecl) cairo_region_copy(arg0:Pointer[cairo_region_t]) : Pointer[cairo_region_t];

external (cdecl) cairo_region_reference(arg0:Pointer[cairo_region_t]) : Pointer[cairo_region_t];

external (cdecl) cairo_region_destroy(arg0:Pointer[cairo_region_t]) : ;

external (cdecl) cairo_region_equal(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_region_t]) : cairo_bool_t;

external (cdecl) cairo_region_status(arg0:Pointer[cairo_region_t]) : cairo_status_t;

external (cdecl) cairo_region_get_extents(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_rectangle_int_t]) : ;

external (cdecl) cairo_region_num_rectangles(arg0:Pointer[cairo_region_t]) : CInt;

external (cdecl) cairo_region_get_rectangle(arg0:Pointer[cairo_region_t], arg1:CInt, arg2:Pointer[cairo_rectangle_int_t]) : ;

external (cdecl) cairo_region_is_empty(arg0:Pointer[cairo_region_t]) : cairo_bool_t;

external (cdecl) cairo_region_contains_rectangle(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_rectangle_int_t]) : cairo_region_overlap_t;

external (cdecl) cairo_region_contains_point(arg0:Pointer[cairo_region_t], arg1:CInt, arg2:CInt) : cairo_bool_t;

external (cdecl) cairo_region_translate(arg0:Pointer[cairo_region_t], arg1:CInt, arg2:CInt) : ;

external (cdecl) cairo_region_subtract(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_region_t]) : cairo_status_t;

external (cdecl) cairo_region_subtract_rectangle(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_rectangle_int_t]) : cairo_status_t;

external (cdecl) cairo_region_intersect(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_region_t]) : cairo_status_t;

external (cdecl) cairo_region_intersect_rectangle(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_rectangle_int_t]) : cairo_status_t;

external (cdecl) cairo_region_union(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_region_t]) : cairo_status_t;

external (cdecl) cairo_region_union_rectangle(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_rectangle_int_t]) : cairo_status_t;

external (cdecl) cairo_region_xor(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_region_t]) : cairo_status_t;

external (cdecl) cairo_region_xor_rectangle(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_rectangle_int_t]) : cairo_status_t;

external (cdecl) cairo_debug_reset_static_data() : ;

record Struct_Unnamed2 (
    x : CDouble,
    y : CDouble,
);

record Struct_Unnamed1 (
    type : cairo_path_data_type_t,
    length : CInt,
);

