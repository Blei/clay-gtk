/* automatically generated by clay-bindgen */
import glib.generated.*;

external (cdecl) cairo_version() : Int;

external (cdecl) cairo_version_string() : Pointer[CChar];

alias cairo_bool_t = Int;

alias Struct__cairo = Opaque;

alias cairo_t = Struct__cairo;

alias Struct__cairo_surface = Opaque;

alias cairo_surface_t = Struct__cairo_surface;

alias Struct__cairo_device = Opaque;

alias cairo_device_t = Struct__cairo_device;

record Struct__cairo_matrix (
    xx : Double,
    yx : Double,
    xy : Double,
    yy : Double,
    x0 : Double,
    y0 : Double,
);

alias cairo_matrix_t = Struct__cairo_matrix;

alias Struct__cairo_pattern = Opaque;

alias cairo_pattern_t = Struct__cairo_pattern;

alias cairo_destroy_func_t = CCodePointer[[OpaquePointer],[]];

record Struct__cairo_user_data_key (
    unused : Int,
);

alias cairo_user_data_key_t = Struct__cairo_user_data_key;

alias Enum__cairo_status = UInt;
alias CAIRO_STATUS_SUCCESS = UInt(0);
alias CAIRO_STATUS_NO_MEMORY = UInt(1);
alias CAIRO_STATUS_INVALID_RESTORE = UInt(2);
alias CAIRO_STATUS_INVALID_POP_GROUP = UInt(3);
alias CAIRO_STATUS_NO_CURRENT_POINT = UInt(4);
alias CAIRO_STATUS_INVALID_MATRIX = UInt(5);
alias CAIRO_STATUS_INVALID_STATUS = UInt(6);
alias CAIRO_STATUS_NULL_POINTER = UInt(7);
alias CAIRO_STATUS_INVALID_STRING = UInt(8);
alias CAIRO_STATUS_INVALID_PATH_DATA = UInt(9);
alias CAIRO_STATUS_READ_ERROR = UInt(10);
alias CAIRO_STATUS_WRITE_ERROR = UInt(11);
alias CAIRO_STATUS_SURFACE_FINISHED = UInt(12);
alias CAIRO_STATUS_SURFACE_TYPE_MISMATCH = UInt(13);
alias CAIRO_STATUS_PATTERN_TYPE_MISMATCH = UInt(14);
alias CAIRO_STATUS_INVALID_CONTENT = UInt(15);
alias CAIRO_STATUS_INVALID_FORMAT = UInt(16);
alias CAIRO_STATUS_INVALID_VISUAL = UInt(17);
alias CAIRO_STATUS_FILE_NOT_FOUND = UInt(18);
alias CAIRO_STATUS_INVALID_DASH = UInt(19);
alias CAIRO_STATUS_INVALID_DSC_COMMENT = UInt(20);
alias CAIRO_STATUS_INVALID_INDEX = UInt(21);
alias CAIRO_STATUS_CLIP_NOT_REPRESENTABLE = UInt(22);
alias CAIRO_STATUS_TEMP_FILE_ERROR = UInt(23);
alias CAIRO_STATUS_INVALID_STRIDE = UInt(24);
alias CAIRO_STATUS_FONT_TYPE_MISMATCH = UInt(25);
alias CAIRO_STATUS_USER_FONT_IMMUTABLE = UInt(26);
alias CAIRO_STATUS_USER_FONT_ERROR = UInt(27);
alias CAIRO_STATUS_NEGATIVE_COUNT = UInt(28);
alias CAIRO_STATUS_INVALID_CLUSTERS = UInt(29);
alias CAIRO_STATUS_INVALID_SLANT = UInt(30);
alias CAIRO_STATUS_INVALID_WEIGHT = UInt(31);
alias CAIRO_STATUS_INVALID_SIZE = UInt(32);
alias CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED = UInt(33);
alias CAIRO_STATUS_DEVICE_TYPE_MISMATCH = UInt(34);
alias CAIRO_STATUS_DEVICE_ERROR = UInt(35);
alias CAIRO_STATUS_LAST_STATUS = UInt(36);

alias cairo_status_t = UInt;

alias Enum__cairo_content = UInt;
alias CAIRO_CONTENT_COLOR = UInt(4096);
alias CAIRO_CONTENT_ALPHA = UInt(8192);
alias CAIRO_CONTENT_COLOR_ALPHA = UInt(12288);

alias cairo_content_t = UInt;

alias cairo_write_func_t = CCodePointer[[OpaquePointer, Pointer[CUChar], UInt],[cairo_status_t]];

alias cairo_read_func_t = CCodePointer[[OpaquePointer, Pointer[CUChar], UInt],[cairo_status_t]];

external (cdecl) cairo_create(arg0:Pointer[cairo_surface_t]) : Pointer[cairo_t];

external (cdecl) cairo_reference(arg0:Pointer[cairo_t]) : Pointer[cairo_t];

external (cdecl) cairo_destroy(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_get_reference_count(arg0:Pointer[cairo_t]) : UInt;

external (cdecl) cairo_get_user_data(arg0:Pointer[cairo_t], arg1:Pointer[cairo_user_data_key_t]) : OpaquePointer;

external (cdecl) cairo_set_user_data(arg0:Pointer[cairo_t], arg1:Pointer[cairo_user_data_key_t], arg2:OpaquePointer, arg3:cairo_destroy_func_t) : cairo_status_t;

external (cdecl) cairo_save(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_restore(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_push_group(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_push_group_with_content(arg0:Pointer[cairo_t], arg1:cairo_content_t) : ;

external (cdecl) cairo_pop_group(arg0:Pointer[cairo_t]) : Pointer[cairo_pattern_t];

external (cdecl) cairo_pop_group_to_source(arg0:Pointer[cairo_t]) : ;

alias Enum__cairo_operator = UInt;
alias CAIRO_OPERATOR_CLEAR = UInt(0);
alias CAIRO_OPERATOR_SOURCE = UInt(1);
alias CAIRO_OPERATOR_OVER = UInt(2);
alias CAIRO_OPERATOR_IN = UInt(3);
alias CAIRO_OPERATOR_OUT = UInt(4);
alias CAIRO_OPERATOR_ATOP = UInt(5);
alias CAIRO_OPERATOR_DEST = UInt(6);
alias CAIRO_OPERATOR_DEST_OVER = UInt(7);
alias CAIRO_OPERATOR_DEST_IN = UInt(8);
alias CAIRO_OPERATOR_DEST_OUT = UInt(9);
alias CAIRO_OPERATOR_DEST_ATOP = UInt(10);
alias CAIRO_OPERATOR_XOR = UInt(11);
alias CAIRO_OPERATOR_ADD = UInt(12);
alias CAIRO_OPERATOR_SATURATE = UInt(13);
alias CAIRO_OPERATOR_MULTIPLY = UInt(14);
alias CAIRO_OPERATOR_SCREEN = UInt(15);
alias CAIRO_OPERATOR_OVERLAY = UInt(16);
alias CAIRO_OPERATOR_DARKEN = UInt(17);
alias CAIRO_OPERATOR_LIGHTEN = UInt(18);
alias CAIRO_OPERATOR_COLOR_DODGE = UInt(19);
alias CAIRO_OPERATOR_COLOR_BURN = UInt(20);
alias CAIRO_OPERATOR_HARD_LIGHT = UInt(21);
alias CAIRO_OPERATOR_SOFT_LIGHT = UInt(22);
alias CAIRO_OPERATOR_DIFFERENCE = UInt(23);
alias CAIRO_OPERATOR_EXCLUSION = UInt(24);
alias CAIRO_OPERATOR_HSL_HUE = UInt(25);
alias CAIRO_OPERATOR_HSL_SATURATION = UInt(26);
alias CAIRO_OPERATOR_HSL_COLOR = UInt(27);
alias CAIRO_OPERATOR_HSL_LUMINOSITY = UInt(28);

alias cairo_operator_t = UInt;

external (cdecl) cairo_set_operator(arg0:Pointer[cairo_t], arg1:cairo_operator_t) : ;

external (cdecl) cairo_set_source(arg0:Pointer[cairo_t], arg1:Pointer[cairo_pattern_t]) : ;

external (cdecl) cairo_set_source_rgb(arg0:Pointer[cairo_t], arg1:Double, arg2:Double, arg3:Double) : ;

external (cdecl) cairo_set_source_rgba(arg0:Pointer[cairo_t], arg1:Double, arg2:Double, arg3:Double, arg4:Double) : ;

external (cdecl) cairo_set_source_surface(arg0:Pointer[cairo_t], arg1:Pointer[cairo_surface_t], arg2:Double, arg3:Double) : ;

external (cdecl) cairo_set_tolerance(arg0:Pointer[cairo_t], arg1:Double) : ;

alias Enum__cairo_antialias = UInt;
alias CAIRO_ANTIALIAS_DEFAULT = UInt(0);
alias CAIRO_ANTIALIAS_NONE = UInt(1);
alias CAIRO_ANTIALIAS_GRAY = UInt(2);
alias CAIRO_ANTIALIAS_SUBPIXEL = UInt(3);

alias cairo_antialias_t = UInt;

external (cdecl) cairo_set_antialias(arg0:Pointer[cairo_t], arg1:cairo_antialias_t) : ;

alias Enum__cairo_fill_rule = UInt;
alias CAIRO_FILL_RULE_WINDING = UInt(0);
alias CAIRO_FILL_RULE_EVEN_ODD = UInt(1);

alias cairo_fill_rule_t = UInt;

external (cdecl) cairo_set_fill_rule(arg0:Pointer[cairo_t], arg1:cairo_fill_rule_t) : ;

external (cdecl) cairo_set_line_width(arg0:Pointer[cairo_t], arg1:Double) : ;

alias Enum__cairo_line_cap = UInt;
alias CAIRO_LINE_CAP_BUTT = UInt(0);
alias CAIRO_LINE_CAP_ROUND = UInt(1);
alias CAIRO_LINE_CAP_SQUARE = UInt(2);

alias cairo_line_cap_t = UInt;

external (cdecl) cairo_set_line_cap(arg0:Pointer[cairo_t], arg1:cairo_line_cap_t) : ;

alias Enum__cairo_line_join = UInt;
alias CAIRO_LINE_JOIN_MITER = UInt(0);
alias CAIRO_LINE_JOIN_ROUND = UInt(1);
alias CAIRO_LINE_JOIN_BEVEL = UInt(2);

alias cairo_line_join_t = UInt;

external (cdecl) cairo_set_line_join(arg0:Pointer[cairo_t], arg1:cairo_line_join_t) : ;

external (cdecl) cairo_set_dash(arg0:Pointer[cairo_t], arg1:Pointer[Double], arg2:Int, arg3:Double) : ;

external (cdecl) cairo_set_miter_limit(arg0:Pointer[cairo_t], arg1:Double) : ;

external (cdecl) cairo_translate(arg0:Pointer[cairo_t], arg1:Double, arg2:Double) : ;

external (cdecl) cairo_scale(arg0:Pointer[cairo_t], arg1:Double, arg2:Double) : ;

external (cdecl) cairo_rotate(arg0:Pointer[cairo_t], arg1:Double) : ;

external (cdecl) cairo_transform(arg0:Pointer[cairo_t], arg1:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_set_matrix(arg0:Pointer[cairo_t], arg1:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_identity_matrix(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_user_to_device(arg0:Pointer[cairo_t], arg1:Pointer[Double], arg2:Pointer[Double]) : ;

external (cdecl) cairo_user_to_device_distance(arg0:Pointer[cairo_t], arg1:Pointer[Double], arg2:Pointer[Double]) : ;

external (cdecl) cairo_device_to_user(arg0:Pointer[cairo_t], arg1:Pointer[Double], arg2:Pointer[Double]) : ;

external (cdecl) cairo_device_to_user_distance(arg0:Pointer[cairo_t], arg1:Pointer[Double], arg2:Pointer[Double]) : ;

external (cdecl) cairo_new_path(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_move_to(arg0:Pointer[cairo_t], arg1:Double, arg2:Double) : ;

external (cdecl) cairo_new_sub_path(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_line_to(arg0:Pointer[cairo_t], arg1:Double, arg2:Double) : ;

external (cdecl) cairo_curve_to(arg0:Pointer[cairo_t], arg1:Double, arg2:Double, arg3:Double, arg4:Double, arg5:Double, arg6:Double) : ;

external (cdecl) cairo_arc(arg0:Pointer[cairo_t], arg1:Double, arg2:Double, arg3:Double, arg4:Double, arg5:Double) : ;

external (cdecl) cairo_arc_negative(arg0:Pointer[cairo_t], arg1:Double, arg2:Double, arg3:Double, arg4:Double, arg5:Double) : ;

external (cdecl) cairo_rel_move_to(arg0:Pointer[cairo_t], arg1:Double, arg2:Double) : ;

external (cdecl) cairo_rel_line_to(arg0:Pointer[cairo_t], arg1:Double, arg2:Double) : ;

external (cdecl) cairo_rel_curve_to(arg0:Pointer[cairo_t], arg1:Double, arg2:Double, arg3:Double, arg4:Double, arg5:Double, arg6:Double) : ;

external (cdecl) cairo_rectangle(arg0:Pointer[cairo_t], arg1:Double, arg2:Double, arg3:Double, arg4:Double) : ;

external (cdecl) cairo_close_path(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_path_extents(arg0:Pointer[cairo_t], arg1:Pointer[Double], arg2:Pointer[Double], arg3:Pointer[Double], arg4:Pointer[Double]) : ;

external (cdecl) cairo_paint(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_paint_with_alpha(arg0:Pointer[cairo_t], arg1:Double) : ;

external (cdecl) cairo_mask(arg0:Pointer[cairo_t], arg1:Pointer[cairo_pattern_t]) : ;

external (cdecl) cairo_mask_surface(arg0:Pointer[cairo_t], arg1:Pointer[cairo_surface_t], arg2:Double, arg3:Double) : ;

external (cdecl) cairo_stroke(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_stroke_preserve(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_fill(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_fill_preserve(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_copy_page(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_show_page(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_in_stroke(arg0:Pointer[cairo_t], arg1:Double, arg2:Double) : cairo_bool_t;

external (cdecl) cairo_in_fill(arg0:Pointer[cairo_t], arg1:Double, arg2:Double) : cairo_bool_t;

external (cdecl) cairo_in_clip(arg0:Pointer[cairo_t], arg1:Double, arg2:Double) : cairo_bool_t;

external (cdecl) cairo_stroke_extents(arg0:Pointer[cairo_t], arg1:Pointer[Double], arg2:Pointer[Double], arg3:Pointer[Double], arg4:Pointer[Double]) : ;

external (cdecl) cairo_fill_extents(arg0:Pointer[cairo_t], arg1:Pointer[Double], arg2:Pointer[Double], arg3:Pointer[Double], arg4:Pointer[Double]) : ;

external (cdecl) cairo_reset_clip(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_clip(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_clip_preserve(arg0:Pointer[cairo_t]) : ;

external (cdecl) cairo_clip_extents(arg0:Pointer[cairo_t], arg1:Pointer[Double], arg2:Pointer[Double], arg3:Pointer[Double], arg4:Pointer[Double]) : ;

record Struct__cairo_rectangle (
    x : Double,
    y : Double,
    width : Double,
    height : Double,
);

alias cairo_rectangle_t = Struct__cairo_rectangle;

record Struct__cairo_rectangle_list (
    status : cairo_status_t,
    rectangles : Pointer[cairo_rectangle_t],
    num_rectangles : Int,
);

alias cairo_rectangle_list_t = Struct__cairo_rectangle_list;

external (cdecl) cairo_copy_clip_rectangle_list(arg0:Pointer[cairo_t]) : Pointer[cairo_rectangle_list_t];

external (cdecl) cairo_rectangle_list_destroy(arg0:Pointer[cairo_rectangle_list_t]) : ;

alias Struct__cairo_scaled_font = Opaque;

alias cairo_scaled_font_t = Struct__cairo_scaled_font;

alias Struct__cairo_font_face = Opaque;

alias cairo_font_face_t = Struct__cairo_font_face;

record Struct_Unnamed1 (
    index : CULong,
    x : Double,
    y : Double,
);

alias cairo_glyph_t = Struct_Unnamed1;

external (cdecl) cairo_glyph_allocate(arg0:Int) : Pointer[cairo_glyph_t];

external (cdecl) cairo_glyph_free(arg0:Pointer[cairo_glyph_t]) : ;

record Struct_Unnamed2 (
    num_bytes : Int,
    num_glyphs : Int,
);

alias cairo_text_cluster_t = Struct_Unnamed2;

external (cdecl) cairo_text_cluster_allocate(arg0:Int) : Pointer[cairo_text_cluster_t];

external (cdecl) cairo_text_cluster_free(arg0:Pointer[cairo_text_cluster_t]) : ;

alias Enum__cairo_text_cluster_flags = UInt;
alias CAIRO_TEXT_CLUSTER_FLAG_BACKWARD = UInt(1);

alias cairo_text_cluster_flags_t = UInt;

record Struct_Unnamed3 (
    x_bearing : Double,
    y_bearing : Double,
    width : Double,
    height : Double,
    x_advance : Double,
    y_advance : Double,
);

alias cairo_text_extents_t = Struct_Unnamed3;

record Struct_Unnamed4 (
    ascent : Double,
    descent : Double,
    height : Double,
    max_x_advance : Double,
    max_y_advance : Double,
);

alias cairo_font_extents_t = Struct_Unnamed4;

alias Enum__cairo_font_slant = UInt;
alias CAIRO_FONT_SLANT_NORMAL = UInt(0);
alias CAIRO_FONT_SLANT_ITALIC = UInt(1);
alias CAIRO_FONT_SLANT_OBLIQUE = UInt(2);

alias cairo_font_slant_t = UInt;

alias Enum__cairo_font_weight = UInt;
alias CAIRO_FONT_WEIGHT_NORMAL = UInt(0);
alias CAIRO_FONT_WEIGHT_BOLD = UInt(1);

alias cairo_font_weight_t = UInt;

alias Enum__cairo_subpixel_order = UInt;
alias CAIRO_SUBPIXEL_ORDER_DEFAULT = UInt(0);
alias CAIRO_SUBPIXEL_ORDER_RGB = UInt(1);
alias CAIRO_SUBPIXEL_ORDER_BGR = UInt(2);
alias CAIRO_SUBPIXEL_ORDER_VRGB = UInt(3);
alias CAIRO_SUBPIXEL_ORDER_VBGR = UInt(4);

alias cairo_subpixel_order_t = UInt;

alias Enum__cairo_hint_style = UInt;
alias CAIRO_HINT_STYLE_DEFAULT = UInt(0);
alias CAIRO_HINT_STYLE_NONE = UInt(1);
alias CAIRO_HINT_STYLE_SLIGHT = UInt(2);
alias CAIRO_HINT_STYLE_MEDIUM = UInt(3);
alias CAIRO_HINT_STYLE_FULL = UInt(4);

alias cairo_hint_style_t = UInt;

alias Enum__cairo_hint_metrics = UInt;
alias CAIRO_HINT_METRICS_DEFAULT = UInt(0);
alias CAIRO_HINT_METRICS_OFF = UInt(1);
alias CAIRO_HINT_METRICS_ON = UInt(2);

alias cairo_hint_metrics_t = UInt;

alias Struct__cairo_font_options = Opaque;

alias cairo_font_options_t = Struct__cairo_font_options;

external (cdecl) cairo_font_options_create() : Pointer[cairo_font_options_t];

external (cdecl) cairo_font_options_copy(arg0:Pointer[cairo_font_options_t]) : Pointer[cairo_font_options_t];

external (cdecl) cairo_font_options_destroy(arg0:Pointer[cairo_font_options_t]) : ;

external (cdecl) cairo_font_options_status(arg0:Pointer[cairo_font_options_t]) : cairo_status_t;

external (cdecl) cairo_font_options_merge(arg0:Pointer[cairo_font_options_t], arg1:Pointer[cairo_font_options_t]) : ;

external (cdecl) cairo_font_options_equal(arg0:Pointer[cairo_font_options_t], arg1:Pointer[cairo_font_options_t]) : cairo_bool_t;

external (cdecl) cairo_font_options_hash(arg0:Pointer[cairo_font_options_t]) : CULong;

external (cdecl) cairo_font_options_set_antialias(arg0:Pointer[cairo_font_options_t], arg1:cairo_antialias_t) : ;

external (cdecl) cairo_font_options_get_antialias(arg0:Pointer[cairo_font_options_t]) : cairo_antialias_t;

external (cdecl) cairo_font_options_set_subpixel_order(arg0:Pointer[cairo_font_options_t], arg1:cairo_subpixel_order_t) : ;

external (cdecl) cairo_font_options_get_subpixel_order(arg0:Pointer[cairo_font_options_t]) : cairo_subpixel_order_t;

external (cdecl) cairo_font_options_set_hint_style(arg0:Pointer[cairo_font_options_t], arg1:cairo_hint_style_t) : ;

external (cdecl) cairo_font_options_get_hint_style(arg0:Pointer[cairo_font_options_t]) : cairo_hint_style_t;

external (cdecl) cairo_font_options_set_hint_metrics(arg0:Pointer[cairo_font_options_t], arg1:cairo_hint_metrics_t) : ;

external (cdecl) cairo_font_options_get_hint_metrics(arg0:Pointer[cairo_font_options_t]) : cairo_hint_metrics_t;

external (cdecl) cairo_select_font_face(arg0:Pointer[cairo_t], arg1:Pointer[CChar], arg2:cairo_font_slant_t, arg3:cairo_font_weight_t) : ;

external (cdecl) cairo_set_font_size(arg0:Pointer[cairo_t], arg1:Double) : ;

external (cdecl) cairo_set_font_matrix(arg0:Pointer[cairo_t], arg1:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_get_font_matrix(arg0:Pointer[cairo_t], arg1:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_set_font_options(arg0:Pointer[cairo_t], arg1:Pointer[cairo_font_options_t]) : ;

external (cdecl) cairo_get_font_options(arg0:Pointer[cairo_t], arg1:Pointer[cairo_font_options_t]) : ;

external (cdecl) cairo_set_font_face(arg0:Pointer[cairo_t], arg1:Pointer[cairo_font_face_t]) : ;

external (cdecl) cairo_get_font_face(arg0:Pointer[cairo_t]) : Pointer[cairo_font_face_t];

external (cdecl) cairo_set_scaled_font(arg0:Pointer[cairo_t], arg1:Pointer[cairo_scaled_font_t]) : ;

external (cdecl) cairo_get_scaled_font(arg0:Pointer[cairo_t]) : Pointer[cairo_scaled_font_t];

external (cdecl) cairo_show_text(arg0:Pointer[cairo_t], arg1:Pointer[CChar]) : ;

external (cdecl) cairo_show_glyphs(arg0:Pointer[cairo_t], arg1:Pointer[cairo_glyph_t], arg2:Int) : ;

external (cdecl) cairo_show_text_glyphs(arg0:Pointer[cairo_t], arg1:Pointer[CChar], arg2:Int, arg3:Pointer[cairo_glyph_t], arg4:Int, arg5:Pointer[cairo_text_cluster_t], arg6:Int, arg7:cairo_text_cluster_flags_t) : ;

external (cdecl) cairo_text_path(arg0:Pointer[cairo_t], arg1:Pointer[CChar]) : ;

external (cdecl) cairo_glyph_path(arg0:Pointer[cairo_t], arg1:Pointer[cairo_glyph_t], arg2:Int) : ;

external (cdecl) cairo_text_extents(arg0:Pointer[cairo_t], arg1:Pointer[CChar], arg2:Pointer[cairo_text_extents_t]) : ;

external (cdecl) cairo_glyph_extents(arg0:Pointer[cairo_t], arg1:Pointer[cairo_glyph_t], arg2:Int, arg3:Pointer[cairo_text_extents_t]) : ;

external (cdecl) cairo_font_extents(arg0:Pointer[cairo_t], arg1:Pointer[cairo_font_extents_t]) : ;

external (cdecl) cairo_font_face_reference(arg0:Pointer[cairo_font_face_t]) : Pointer[cairo_font_face_t];

external (cdecl) cairo_font_face_destroy(arg0:Pointer[cairo_font_face_t]) : ;

external (cdecl) cairo_font_face_get_reference_count(arg0:Pointer[cairo_font_face_t]) : UInt;

external (cdecl) cairo_font_face_status(arg0:Pointer[cairo_font_face_t]) : cairo_status_t;

alias Enum__cairo_font_type = UInt;
alias CAIRO_FONT_TYPE_TOY = UInt(0);
alias CAIRO_FONT_TYPE_FT = UInt(1);
alias CAIRO_FONT_TYPE_WIN32 = UInt(2);
alias CAIRO_FONT_TYPE_QUARTZ = UInt(3);
alias CAIRO_FONT_TYPE_USER = UInt(4);

alias cairo_font_type_t = UInt;

external (cdecl) cairo_font_face_get_type(arg0:Pointer[cairo_font_face_t]) : cairo_font_type_t;

external (cdecl) cairo_font_face_get_user_data(arg0:Pointer[cairo_font_face_t], arg1:Pointer[cairo_user_data_key_t]) : OpaquePointer;

external (cdecl) cairo_font_face_set_user_data(arg0:Pointer[cairo_font_face_t], arg1:Pointer[cairo_user_data_key_t], arg2:OpaquePointer, arg3:cairo_destroy_func_t) : cairo_status_t;

external (cdecl) cairo_scaled_font_create(arg0:Pointer[cairo_font_face_t], arg1:Pointer[cairo_matrix_t], arg2:Pointer[cairo_matrix_t], arg3:Pointer[cairo_font_options_t]) : Pointer[cairo_scaled_font_t];

external (cdecl) cairo_scaled_font_reference(arg0:Pointer[cairo_scaled_font_t]) : Pointer[cairo_scaled_font_t];

external (cdecl) cairo_scaled_font_destroy(arg0:Pointer[cairo_scaled_font_t]) : ;

external (cdecl) cairo_scaled_font_get_reference_count(arg0:Pointer[cairo_scaled_font_t]) : UInt;

external (cdecl) cairo_scaled_font_status(arg0:Pointer[cairo_scaled_font_t]) : cairo_status_t;

external (cdecl) cairo_scaled_font_get_type(arg0:Pointer[cairo_scaled_font_t]) : cairo_font_type_t;

external (cdecl) cairo_scaled_font_get_user_data(arg0:Pointer[cairo_scaled_font_t], arg1:Pointer[cairo_user_data_key_t]) : OpaquePointer;

external (cdecl) cairo_scaled_font_set_user_data(arg0:Pointer[cairo_scaled_font_t], arg1:Pointer[cairo_user_data_key_t], arg2:OpaquePointer, arg3:cairo_destroy_func_t) : cairo_status_t;

external (cdecl) cairo_scaled_font_extents(arg0:Pointer[cairo_scaled_font_t], arg1:Pointer[cairo_font_extents_t]) : ;

external (cdecl) cairo_scaled_font_text_extents(arg0:Pointer[cairo_scaled_font_t], arg1:Pointer[CChar], arg2:Pointer[cairo_text_extents_t]) : ;

external (cdecl) cairo_scaled_font_glyph_extents(arg0:Pointer[cairo_scaled_font_t], arg1:Pointer[cairo_glyph_t], arg2:Int, arg3:Pointer[cairo_text_extents_t]) : ;

external (cdecl) cairo_scaled_font_text_to_glyphs(arg0:Pointer[cairo_scaled_font_t], arg1:Double, arg2:Double, arg3:Pointer[CChar], arg4:Int, arg5:Pointer[Pointer[cairo_glyph_t]], arg6:Pointer[Int], arg7:Pointer[Pointer[cairo_text_cluster_t]], arg8:Pointer[Int], arg9:Pointer[cairo_text_cluster_flags_t]) : cairo_status_t;

external (cdecl) cairo_scaled_font_get_font_face(arg0:Pointer[cairo_scaled_font_t]) : Pointer[cairo_font_face_t];

external (cdecl) cairo_scaled_font_get_font_matrix(arg0:Pointer[cairo_scaled_font_t], arg1:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_scaled_font_get_ctm(arg0:Pointer[cairo_scaled_font_t], arg1:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_scaled_font_get_scale_matrix(arg0:Pointer[cairo_scaled_font_t], arg1:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_scaled_font_get_font_options(arg0:Pointer[cairo_scaled_font_t], arg1:Pointer[cairo_font_options_t]) : ;

external (cdecl) cairo_toy_font_face_create(arg0:Pointer[CChar], arg1:cairo_font_slant_t, arg2:cairo_font_weight_t) : Pointer[cairo_font_face_t];

external (cdecl) cairo_toy_font_face_get_family(arg0:Pointer[cairo_font_face_t]) : Pointer[CChar];

external (cdecl) cairo_toy_font_face_get_slant(arg0:Pointer[cairo_font_face_t]) : cairo_font_slant_t;

external (cdecl) cairo_toy_font_face_get_weight(arg0:Pointer[cairo_font_face_t]) : cairo_font_weight_t;

external (cdecl) cairo_user_font_face_create() : Pointer[cairo_font_face_t];

alias cairo_user_scaled_font_init_func_t = CCodePointer[[Pointer[cairo_scaled_font_t], Pointer[cairo_t], Pointer[cairo_font_extents_t]],[cairo_status_t]];

alias cairo_user_scaled_font_render_glyph_func_t = CCodePointer[[Pointer[cairo_scaled_font_t], CULong, Pointer[cairo_t], Pointer[cairo_text_extents_t]],[cairo_status_t]];

alias cairo_user_scaled_font_text_to_glyphs_func_t = CCodePointer[[Pointer[cairo_scaled_font_t], Pointer[CChar], Int, Pointer[Pointer[cairo_glyph_t]], Pointer[Int], Pointer[Pointer[cairo_text_cluster_t]], Pointer[Int], Pointer[cairo_text_cluster_flags_t]],[cairo_status_t]];

alias cairo_user_scaled_font_unicode_to_glyph_func_t = CCodePointer[[Pointer[cairo_scaled_font_t], CULong, Pointer[CULong]],[cairo_status_t]];

external (cdecl) cairo_user_font_face_set_init_func(arg0:Pointer[cairo_font_face_t], arg1:cairo_user_scaled_font_init_func_t) : ;

external (cdecl) cairo_user_font_face_set_render_glyph_func(arg0:Pointer[cairo_font_face_t], arg1:cairo_user_scaled_font_render_glyph_func_t) : ;

external (cdecl) cairo_user_font_face_set_text_to_glyphs_func(arg0:Pointer[cairo_font_face_t], arg1:cairo_user_scaled_font_text_to_glyphs_func_t) : ;

external (cdecl) cairo_user_font_face_set_unicode_to_glyph_func(arg0:Pointer[cairo_font_face_t], arg1:cairo_user_scaled_font_unicode_to_glyph_func_t) : ;

external (cdecl) cairo_user_font_face_get_init_func(arg0:Pointer[cairo_font_face_t]) : cairo_user_scaled_font_init_func_t;

external (cdecl) cairo_user_font_face_get_render_glyph_func(arg0:Pointer[cairo_font_face_t]) : cairo_user_scaled_font_render_glyph_func_t;

external (cdecl) cairo_user_font_face_get_text_to_glyphs_func(arg0:Pointer[cairo_font_face_t]) : cairo_user_scaled_font_text_to_glyphs_func_t;

external (cdecl) cairo_user_font_face_get_unicode_to_glyph_func(arg0:Pointer[cairo_font_face_t]) : cairo_user_scaled_font_unicode_to_glyph_func_t;

external (cdecl) cairo_get_operator(arg0:Pointer[cairo_t]) : cairo_operator_t;

external (cdecl) cairo_get_source(arg0:Pointer[cairo_t]) : Pointer[cairo_pattern_t];

external (cdecl) cairo_get_tolerance(arg0:Pointer[cairo_t]) : Double;

external (cdecl) cairo_get_antialias(arg0:Pointer[cairo_t]) : cairo_antialias_t;

external (cdecl) cairo_has_current_point(arg0:Pointer[cairo_t]) : cairo_bool_t;

external (cdecl) cairo_get_current_point(arg0:Pointer[cairo_t], arg1:Pointer[Double], arg2:Pointer[Double]) : ;

external (cdecl) cairo_get_fill_rule(arg0:Pointer[cairo_t]) : cairo_fill_rule_t;

external (cdecl) cairo_get_line_width(arg0:Pointer[cairo_t]) : Double;

external (cdecl) cairo_get_line_cap(arg0:Pointer[cairo_t]) : cairo_line_cap_t;

external (cdecl) cairo_get_line_join(arg0:Pointer[cairo_t]) : cairo_line_join_t;

external (cdecl) cairo_get_miter_limit(arg0:Pointer[cairo_t]) : Double;

external (cdecl) cairo_get_dash_count(arg0:Pointer[cairo_t]) : Int;

external (cdecl) cairo_get_dash(arg0:Pointer[cairo_t], arg1:Pointer[Double], arg2:Pointer[Double]) : ;

external (cdecl) cairo_get_matrix(arg0:Pointer[cairo_t], arg1:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_get_target(arg0:Pointer[cairo_t]) : Pointer[cairo_surface_t];

external (cdecl) cairo_get_group_target(arg0:Pointer[cairo_t]) : Pointer[cairo_surface_t];

alias Enum__cairo_path_data_type = UInt;
alias CAIRO_PATH_MOVE_TO = UInt(0);
alias CAIRO_PATH_LINE_TO = UInt(1);
alias CAIRO_PATH_CURVE_TO = UInt(2);
alias CAIRO_PATH_CLOSE_PATH = UInt(3);

alias cairo_path_data_type_t = UInt;

alias cairo_path_data_t = Union__cairo_path_data_t;

alias Union__cairo_path_data_t = Union[
    /* header */ Struct_Unnamed5,
    /* point */ Struct_Unnamed6,
];

record Struct_Unnamed5 (
    type : cairo_path_data_type_t,
    length : Int,
);

record Struct_Unnamed6 (
    x : Double,
    y : Double,
);

record Struct_cairo_path (
    status : cairo_status_t,
    data : Pointer[cairo_path_data_t],
    num_data : Int,
);

alias cairo_path_t = Struct_cairo_path;

external (cdecl) cairo_copy_path(arg0:Pointer[cairo_t]) : Pointer[cairo_path_t];

external (cdecl) cairo_copy_path_flat(arg0:Pointer[cairo_t]) : Pointer[cairo_path_t];

external (cdecl) cairo_append_path(arg0:Pointer[cairo_t], arg1:Pointer[cairo_path_t]) : ;

external (cdecl) cairo_path_destroy(arg0:Pointer[cairo_path_t]) : ;

external (cdecl) cairo_status(arg0:Pointer[cairo_t]) : cairo_status_t;

external (cdecl) cairo_status_to_string(arg0:cairo_status_t) : Pointer[CChar];

external (cdecl) cairo_device_reference(arg0:Pointer[cairo_device_t]) : Pointer[cairo_device_t];

alias Enum__cairo_device_type = UInt;
alias CAIRO_DEVICE_TYPE_DRM = UInt(0);
alias CAIRO_DEVICE_TYPE_GL = UInt(1);
alias CAIRO_DEVICE_TYPE_SCRIPT = UInt(2);
alias CAIRO_DEVICE_TYPE_XCB = UInt(3);
alias CAIRO_DEVICE_TYPE_XLIB = UInt(4);
alias CAIRO_DEVICE_TYPE_XML = UInt(5);

alias cairo_device_type_t = UInt;

external (cdecl) cairo_device_get_type(arg0:Pointer[cairo_device_t]) : cairo_device_type_t;

external (cdecl) cairo_device_status(arg0:Pointer[cairo_device_t]) : cairo_status_t;

external (cdecl) cairo_device_acquire(arg0:Pointer[cairo_device_t]) : cairo_status_t;

external (cdecl) cairo_device_release(arg0:Pointer[cairo_device_t]) : ;

external (cdecl) cairo_device_flush(arg0:Pointer[cairo_device_t]) : ;

external (cdecl) cairo_device_finish(arg0:Pointer[cairo_device_t]) : ;

external (cdecl) cairo_device_destroy(arg0:Pointer[cairo_device_t]) : ;

external (cdecl) cairo_device_get_reference_count(arg0:Pointer[cairo_device_t]) : UInt;

external (cdecl) cairo_device_get_user_data(arg0:Pointer[cairo_device_t], arg1:Pointer[cairo_user_data_key_t]) : OpaquePointer;

external (cdecl) cairo_device_set_user_data(arg0:Pointer[cairo_device_t], arg1:Pointer[cairo_user_data_key_t], arg2:OpaquePointer, arg3:cairo_destroy_func_t) : cairo_status_t;

external (cdecl) cairo_surface_create_similar(arg0:Pointer[cairo_surface_t], arg1:cairo_content_t, arg2:Int, arg3:Int) : Pointer[cairo_surface_t];

external (cdecl) cairo_surface_create_for_rectangle(arg0:Pointer[cairo_surface_t], arg1:Double, arg2:Double, arg3:Double, arg4:Double) : Pointer[cairo_surface_t];

external (cdecl) cairo_surface_reference(arg0:Pointer[cairo_surface_t]) : Pointer[cairo_surface_t];

external (cdecl) cairo_surface_finish(arg0:Pointer[cairo_surface_t]) : ;

external (cdecl) cairo_surface_destroy(arg0:Pointer[cairo_surface_t]) : ;

external (cdecl) cairo_surface_get_device(arg0:Pointer[cairo_surface_t]) : Pointer[cairo_device_t];

external (cdecl) cairo_surface_get_reference_count(arg0:Pointer[cairo_surface_t]) : UInt;

external (cdecl) cairo_surface_status(arg0:Pointer[cairo_surface_t]) : cairo_status_t;

alias Enum__cairo_surface_type = UInt;
alias CAIRO_SURFACE_TYPE_IMAGE = UInt(0);
alias CAIRO_SURFACE_TYPE_PDF = UInt(1);
alias CAIRO_SURFACE_TYPE_PS = UInt(2);
alias CAIRO_SURFACE_TYPE_XLIB = UInt(3);
alias CAIRO_SURFACE_TYPE_XCB = UInt(4);
alias CAIRO_SURFACE_TYPE_GLITZ = UInt(5);
alias CAIRO_SURFACE_TYPE_QUARTZ = UInt(6);
alias CAIRO_SURFACE_TYPE_WIN32 = UInt(7);
alias CAIRO_SURFACE_TYPE_BEOS = UInt(8);
alias CAIRO_SURFACE_TYPE_DIRECTFB = UInt(9);
alias CAIRO_SURFACE_TYPE_SVG = UInt(10);
alias CAIRO_SURFACE_TYPE_OS2 = UInt(11);
alias CAIRO_SURFACE_TYPE_WIN32_PRINTING = UInt(12);
alias CAIRO_SURFACE_TYPE_QUARTZ_IMAGE = UInt(13);
alias CAIRO_SURFACE_TYPE_SCRIPT = UInt(14);
alias CAIRO_SURFACE_TYPE_QT = UInt(15);
alias CAIRO_SURFACE_TYPE_RECORDING = UInt(16);
alias CAIRO_SURFACE_TYPE_VG = UInt(17);
alias CAIRO_SURFACE_TYPE_GL = UInt(18);
alias CAIRO_SURFACE_TYPE_DRM = UInt(19);
alias CAIRO_SURFACE_TYPE_TEE = UInt(20);
alias CAIRO_SURFACE_TYPE_XML = UInt(21);
alias CAIRO_SURFACE_TYPE_SKIA = UInt(22);
alias CAIRO_SURFACE_TYPE_SUBSURFACE = UInt(23);

alias cairo_surface_type_t = UInt;

external (cdecl) cairo_surface_get_type(arg0:Pointer[cairo_surface_t]) : cairo_surface_type_t;

external (cdecl) cairo_surface_get_content(arg0:Pointer[cairo_surface_t]) : cairo_content_t;

external (cdecl) cairo_surface_write_to_png(arg0:Pointer[cairo_surface_t], arg1:Pointer[CChar]) : cairo_status_t;

external (cdecl) cairo_surface_write_to_png_stream(arg0:Pointer[cairo_surface_t], arg1:cairo_write_func_t, arg2:OpaquePointer) : cairo_status_t;

external (cdecl) cairo_surface_get_user_data(arg0:Pointer[cairo_surface_t], arg1:Pointer[cairo_user_data_key_t]) : OpaquePointer;

external (cdecl) cairo_surface_set_user_data(arg0:Pointer[cairo_surface_t], arg1:Pointer[cairo_user_data_key_t], arg2:OpaquePointer, arg3:cairo_destroy_func_t) : cairo_status_t;

external (cdecl) cairo_surface_get_mime_data(arg0:Pointer[cairo_surface_t], arg1:Pointer[CChar], arg2:Pointer[Pointer[CUChar]], arg3:Pointer[CULong]) : ;

external (cdecl) cairo_surface_set_mime_data(arg0:Pointer[cairo_surface_t], arg1:Pointer[CChar], arg2:Pointer[CUChar], arg3:CULong, arg4:cairo_destroy_func_t, arg5:OpaquePointer) : cairo_status_t;

external (cdecl) cairo_surface_get_font_options(arg0:Pointer[cairo_surface_t], arg1:Pointer[cairo_font_options_t]) : ;

external (cdecl) cairo_surface_flush(arg0:Pointer[cairo_surface_t]) : ;

external (cdecl) cairo_surface_mark_dirty(arg0:Pointer[cairo_surface_t]) : ;

external (cdecl) cairo_surface_mark_dirty_rectangle(arg0:Pointer[cairo_surface_t], arg1:Int, arg2:Int, arg3:Int, arg4:Int) : ;

external (cdecl) cairo_surface_set_device_offset(arg0:Pointer[cairo_surface_t], arg1:Double, arg2:Double) : ;

external (cdecl) cairo_surface_get_device_offset(arg0:Pointer[cairo_surface_t], arg1:Pointer[Double], arg2:Pointer[Double]) : ;

external (cdecl) cairo_surface_set_fallback_resolution(arg0:Pointer[cairo_surface_t], arg1:Double, arg2:Double) : ;

external (cdecl) cairo_surface_get_fallback_resolution(arg0:Pointer[cairo_surface_t], arg1:Pointer[Double], arg2:Pointer[Double]) : ;

external (cdecl) cairo_surface_copy_page(arg0:Pointer[cairo_surface_t]) : ;

external (cdecl) cairo_surface_show_page(arg0:Pointer[cairo_surface_t]) : ;

external (cdecl) cairo_surface_has_show_text_glyphs(arg0:Pointer[cairo_surface_t]) : cairo_bool_t;

alias Enum__cairo_format = Int;
alias CAIRO_FORMAT_INVALID = Int(-1);
alias CAIRO_FORMAT_ARGB32 = Int(0);
alias CAIRO_FORMAT_RGB24 = Int(1);
alias CAIRO_FORMAT_A8 = Int(2);
alias CAIRO_FORMAT_A1 = Int(3);
alias CAIRO_FORMAT_RGB16_565 = Int(4);

alias cairo_format_t = Int;

external (cdecl) cairo_image_surface_create(arg0:cairo_format_t, arg1:Int, arg2:Int) : Pointer[cairo_surface_t];

external (cdecl) cairo_format_stride_for_width(arg0:cairo_format_t, arg1:Int) : Int;

external (cdecl) cairo_image_surface_create_for_data(arg0:Pointer[CUChar], arg1:cairo_format_t, arg2:Int, arg3:Int, arg4:Int) : Pointer[cairo_surface_t];

external (cdecl) cairo_image_surface_get_data(arg0:Pointer[cairo_surface_t]) : Pointer[CUChar];

external (cdecl) cairo_image_surface_get_format(arg0:Pointer[cairo_surface_t]) : cairo_format_t;

external (cdecl) cairo_image_surface_get_width(arg0:Pointer[cairo_surface_t]) : Int;

external (cdecl) cairo_image_surface_get_height(arg0:Pointer[cairo_surface_t]) : Int;

external (cdecl) cairo_image_surface_get_stride(arg0:Pointer[cairo_surface_t]) : Int;

external (cdecl) cairo_image_surface_create_from_png(arg0:Pointer[CChar]) : Pointer[cairo_surface_t];

external (cdecl) cairo_image_surface_create_from_png_stream(arg0:cairo_read_func_t, arg1:OpaquePointer) : Pointer[cairo_surface_t];

external (cdecl) cairo_recording_surface_create(arg0:cairo_content_t, arg1:Pointer[cairo_rectangle_t]) : Pointer[cairo_surface_t];

external (cdecl) cairo_recording_surface_ink_extents(arg0:Pointer[cairo_surface_t], arg1:Pointer[Double], arg2:Pointer[Double], arg3:Pointer[Double], arg4:Pointer[Double]) : ;

external (cdecl) cairo_pattern_create_rgb(arg0:Double, arg1:Double, arg2:Double) : Pointer[cairo_pattern_t];

external (cdecl) cairo_pattern_create_rgba(arg0:Double, arg1:Double, arg2:Double, arg3:Double) : Pointer[cairo_pattern_t];

external (cdecl) cairo_pattern_create_for_surface(arg0:Pointer[cairo_surface_t]) : Pointer[cairo_pattern_t];

external (cdecl) cairo_pattern_create_linear(arg0:Double, arg1:Double, arg2:Double, arg3:Double) : Pointer[cairo_pattern_t];

external (cdecl) cairo_pattern_create_radial(arg0:Double, arg1:Double, arg2:Double, arg3:Double, arg4:Double, arg5:Double) : Pointer[cairo_pattern_t];

external (cdecl) cairo_pattern_reference(arg0:Pointer[cairo_pattern_t]) : Pointer[cairo_pattern_t];

external (cdecl) cairo_pattern_destroy(arg0:Pointer[cairo_pattern_t]) : ;

external (cdecl) cairo_pattern_get_reference_count(arg0:Pointer[cairo_pattern_t]) : UInt;

external (cdecl) cairo_pattern_status(arg0:Pointer[cairo_pattern_t]) : cairo_status_t;

external (cdecl) cairo_pattern_get_user_data(arg0:Pointer[cairo_pattern_t], arg1:Pointer[cairo_user_data_key_t]) : OpaquePointer;

external (cdecl) cairo_pattern_set_user_data(arg0:Pointer[cairo_pattern_t], arg1:Pointer[cairo_user_data_key_t], arg2:OpaquePointer, arg3:cairo_destroy_func_t) : cairo_status_t;

alias Enum__cairo_pattern_type = UInt;
alias CAIRO_PATTERN_TYPE_SOLID = UInt(0);
alias CAIRO_PATTERN_TYPE_SURFACE = UInt(1);
alias CAIRO_PATTERN_TYPE_LINEAR = UInt(2);
alias CAIRO_PATTERN_TYPE_RADIAL = UInt(3);

alias cairo_pattern_type_t = UInt;

external (cdecl) cairo_pattern_get_type(arg0:Pointer[cairo_pattern_t]) : cairo_pattern_type_t;

external (cdecl) cairo_pattern_add_color_stop_rgb(arg0:Pointer[cairo_pattern_t], arg1:Double, arg2:Double, arg3:Double, arg4:Double) : ;

external (cdecl) cairo_pattern_add_color_stop_rgba(arg0:Pointer[cairo_pattern_t], arg1:Double, arg2:Double, arg3:Double, arg4:Double, arg5:Double) : ;

external (cdecl) cairo_pattern_set_matrix(arg0:Pointer[cairo_pattern_t], arg1:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_pattern_get_matrix(arg0:Pointer[cairo_pattern_t], arg1:Pointer[cairo_matrix_t]) : ;

alias Enum__cairo_extend = UInt;
alias CAIRO_EXTEND_NONE = UInt(0);
alias CAIRO_EXTEND_REPEAT = UInt(1);
alias CAIRO_EXTEND_REFLECT = UInt(2);
alias CAIRO_EXTEND_PAD = UInt(3);

alias cairo_extend_t = UInt;

external (cdecl) cairo_pattern_set_extend(arg0:Pointer[cairo_pattern_t], arg1:cairo_extend_t) : ;

external (cdecl) cairo_pattern_get_extend(arg0:Pointer[cairo_pattern_t]) : cairo_extend_t;

alias Enum__cairo_filter = UInt;
alias CAIRO_FILTER_FAST = UInt(0);
alias CAIRO_FILTER_GOOD = UInt(1);
alias CAIRO_FILTER_BEST = UInt(2);
alias CAIRO_FILTER_NEAREST = UInt(3);
alias CAIRO_FILTER_BILINEAR = UInt(4);
alias CAIRO_FILTER_GAUSSIAN = UInt(5);

alias cairo_filter_t = UInt;

external (cdecl) cairo_pattern_set_filter(arg0:Pointer[cairo_pattern_t], arg1:cairo_filter_t) : ;

external (cdecl) cairo_pattern_get_filter(arg0:Pointer[cairo_pattern_t]) : cairo_filter_t;

external (cdecl) cairo_pattern_get_rgba(arg0:Pointer[cairo_pattern_t], arg1:Pointer[Double], arg2:Pointer[Double], arg3:Pointer[Double], arg4:Pointer[Double]) : cairo_status_t;

external (cdecl) cairo_pattern_get_surface(arg0:Pointer[cairo_pattern_t], arg1:Pointer[Pointer[cairo_surface_t]]) : cairo_status_t;

external (cdecl) cairo_pattern_get_color_stop_rgba(arg0:Pointer[cairo_pattern_t], arg1:Int, arg2:Pointer[Double], arg3:Pointer[Double], arg4:Pointer[Double], arg5:Pointer[Double], arg6:Pointer[Double]) : cairo_status_t;

external (cdecl) cairo_pattern_get_color_stop_count(arg0:Pointer[cairo_pattern_t], arg1:Pointer[Int]) : cairo_status_t;

external (cdecl) cairo_pattern_get_linear_points(arg0:Pointer[cairo_pattern_t], arg1:Pointer[Double], arg2:Pointer[Double], arg3:Pointer[Double], arg4:Pointer[Double]) : cairo_status_t;

external (cdecl) cairo_pattern_get_radial_circles(arg0:Pointer[cairo_pattern_t], arg1:Pointer[Double], arg2:Pointer[Double], arg3:Pointer[Double], arg4:Pointer[Double], arg5:Pointer[Double], arg6:Pointer[Double]) : cairo_status_t;

external (cdecl) cairo_matrix_init(arg0:Pointer[cairo_matrix_t], arg1:Double, arg2:Double, arg3:Double, arg4:Double, arg5:Double, arg6:Double) : ;

external (cdecl) cairo_matrix_init_identity(arg0:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_matrix_init_translate(arg0:Pointer[cairo_matrix_t], arg1:Double, arg2:Double) : ;

external (cdecl) cairo_matrix_init_scale(arg0:Pointer[cairo_matrix_t], arg1:Double, arg2:Double) : ;

external (cdecl) cairo_matrix_init_rotate(arg0:Pointer[cairo_matrix_t], arg1:Double) : ;

external (cdecl) cairo_matrix_translate(arg0:Pointer[cairo_matrix_t], arg1:Double, arg2:Double) : ;

external (cdecl) cairo_matrix_scale(arg0:Pointer[cairo_matrix_t], arg1:Double, arg2:Double) : ;

external (cdecl) cairo_matrix_rotate(arg0:Pointer[cairo_matrix_t], arg1:Double) : ;

external (cdecl) cairo_matrix_invert(arg0:Pointer[cairo_matrix_t]) : cairo_status_t;

external (cdecl) cairo_matrix_multiply(arg0:Pointer[cairo_matrix_t], arg1:Pointer[cairo_matrix_t], arg2:Pointer[cairo_matrix_t]) : ;

external (cdecl) cairo_matrix_transform_distance(arg0:Pointer[cairo_matrix_t], arg1:Pointer[Double], arg2:Pointer[Double]) : ;

external (cdecl) cairo_matrix_transform_point(arg0:Pointer[cairo_matrix_t], arg1:Pointer[Double], arg2:Pointer[Double]) : ;

alias Struct__cairo_region = Opaque;

alias cairo_region_t = Struct__cairo_region;

record Struct__cairo_rectangle_int (
    x : Int,
    y : Int,
    width : Int,
    height : Int,
);

alias cairo_rectangle_int_t = Struct__cairo_rectangle_int;

alias Enum__cairo_region_overlap = UInt;
alias CAIRO_REGION_OVERLAP_IN = UInt(0);
alias CAIRO_REGION_OVERLAP_OUT = UInt(1);
alias CAIRO_REGION_OVERLAP_PART = UInt(2);

alias cairo_region_overlap_t = UInt;

external (cdecl) cairo_region_create() : Pointer[cairo_region_t];

external (cdecl) cairo_region_create_rectangle(arg0:Pointer[cairo_rectangle_int_t]) : Pointer[cairo_region_t];

external (cdecl) cairo_region_create_rectangles(arg0:Pointer[cairo_rectangle_int_t], arg1:Int) : Pointer[cairo_region_t];

external (cdecl) cairo_region_copy(arg0:Pointer[cairo_region_t]) : Pointer[cairo_region_t];

external (cdecl) cairo_region_reference(arg0:Pointer[cairo_region_t]) : Pointer[cairo_region_t];

external (cdecl) cairo_region_destroy(arg0:Pointer[cairo_region_t]) : ;

external (cdecl) cairo_region_equal(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_region_t]) : cairo_bool_t;

external (cdecl) cairo_region_status(arg0:Pointer[cairo_region_t]) : cairo_status_t;

external (cdecl) cairo_region_get_extents(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_rectangle_int_t]) : ;

external (cdecl) cairo_region_num_rectangles(arg0:Pointer[cairo_region_t]) : Int;

external (cdecl) cairo_region_get_rectangle(arg0:Pointer[cairo_region_t], arg1:Int, arg2:Pointer[cairo_rectangle_int_t]) : ;

external (cdecl) cairo_region_is_empty(arg0:Pointer[cairo_region_t]) : cairo_bool_t;

external (cdecl) cairo_region_contains_rectangle(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_rectangle_int_t]) : cairo_region_overlap_t;

external (cdecl) cairo_region_contains_point(arg0:Pointer[cairo_region_t], arg1:Int, arg2:Int) : cairo_bool_t;

external (cdecl) cairo_region_translate(arg0:Pointer[cairo_region_t], arg1:Int, arg2:Int) : ;

external (cdecl) cairo_region_subtract(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_region_t]) : cairo_status_t;

external (cdecl) cairo_region_subtract_rectangle(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_rectangle_int_t]) : cairo_status_t;

external (cdecl) cairo_region_intersect(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_region_t]) : cairo_status_t;

external (cdecl) cairo_region_intersect_rectangle(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_rectangle_int_t]) : cairo_status_t;

external (cdecl) cairo_region_union(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_region_t]) : cairo_status_t;

external (cdecl) cairo_region_union_rectangle(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_rectangle_int_t]) : cairo_status_t;

external (cdecl) cairo_region_xor(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_region_t]) : cairo_status_t;

external (cdecl) cairo_region_xor_rectangle(arg0:Pointer[cairo_region_t], arg1:Pointer[cairo_rectangle_int_t]) : cairo_status_t;

external (cdecl) cairo_debug_reset_static_data() : ;

